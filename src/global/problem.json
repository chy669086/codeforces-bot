{"Time":"2024-01-02T00:00:00+08:00","Problems":[{"ContestId":1917,"Index":"F","Name":"Construct Tree","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["bitmasks","constructive algorithms","dp","trees"]},{"ContestId":1917,"Index":"E","Name":"Construct Matrix","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["constructive algorithms","math"]},{"ContestId":1917,"Index":"D","Name":"Yet Another Inversions Problem","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["combinatorics","data structures","dp","implementation","math","number theory"]},{"ContestId":1917,"Index":"C","Name":"Watering an Array","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":1917,"Index":"B","Name":"Erase First or Second Letter","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","combinatorics","data structures","dp","strings"]},{"ContestId":1917,"Index":"A","Name":"Least Product","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1916,"Index":"H2","Name":"Matrix Rank (Hard Version)","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["combinatorics","dp","math","matrices"]},{"ContestId":1916,"Index":"H1","Name":"Matrix Rank (Easy Version)","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["brute force","combinatorics","dp","math","matrices"]},{"ContestId":1916,"Index":"G","Name":"Optimizations From Chelsu","Type":"PROGRAMMING","Rating":3500,"Points":3750,"Tags":["divide and conquer","dp","number theory","trees"]},{"ContestId":1916,"Index":"F","Name":"Group Division","Type":"PROGRAMMING","Rating":2900,"Points":2750,"Tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"ContestId":1916,"Index":"E","Name":"Happy Life in University","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["data structures","dfs and similar","greedy","trees"]},{"ContestId":1916,"Index":"D","Name":"Mathematical Problem","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":1916,"Index":"C","Name":"Training Before the Olympiad","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["constructive algorithms","games","greedy","implementation","math"]},{"ContestId":1916,"Index":"B","Name":"Two Divisors","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1916,"Index":"A","Name":"2023","Type":"PROGRAMMING","Rating":800,"Points":250,"Tags":["constructive algorithms","implementation","math","number theory"]},{"ContestId":1915,"Index":"G","Name":"Bicycles","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["graphs","greedy","implementation","shortest paths","sortings"]},{"ContestId":1915,"Index":"F","Name":"Greetings","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["data structures","divide and conquer","sortings"]},{"ContestId":1915,"Index":"E","Name":"Romantic Glasses","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["data structures","greedy","math"]},{"ContestId":1915,"Index":"D","Name":"Unnatural Language Processing","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","implementation","strings"]},{"ContestId":1915,"Index":"C","Name":"Can I Square?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["binary search","implementation"]},{"ContestId":1915,"Index":"B","Name":"Not Quite Latin Square","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1915,"Index":"A","Name":"Odd One Out","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["bitmasks","implementation"]},{"ContestId":1914,"Index":"G2","Name":"Light Bulbs (Hard Version)","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["combinatorics","data structures","dfs and similar","dp","graphs","hashing"]},{"ContestId":1914,"Index":"G1","Name":"Light Bulbs (Easy Version)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","combinatorics","dfs and similar","dp","dsu","graphs","math","trees"]},{"ContestId":1914,"Index":"F","Name":"Programming Competition","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar","dp","graph matchings","greedy","trees"]},{"ContestId":1914,"Index":"E2","Name":"Game with Marbles (Hard Version)","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["games","greedy","sortings"]},{"ContestId":1914,"Index":"E1","Name":"Game with Marbles (Easy Version)","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","games","greedy","sortings"]},{"ContestId":1914,"Index":"D","Name":"Three Activities","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","dp","greedy","implementation","sortings"]},{"ContestId":1914,"Index":"C","Name":"Quests","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","math"]},{"ContestId":1914,"Index":"B","Name":"Preparing for the Contest","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1914,"Index":"A","Name":"Problemsolving Log","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1913,"Index":"F","Name":"Palindromic Problem","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["binary search","data structures","hashing","string suffix structures","strings"]},{"ContestId":1913,"Index":"E","Name":"Matrix Problem","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["flows","graphs"]},{"ContestId":1913,"Index":"D","Name":"Array Collapse","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","divide and conquer","dp","trees"]},{"ContestId":1913,"Index":"C","Name":"Game with Multiset","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","bitmasks","brute force","greedy"]},{"ContestId":1913,"Index":"B","Name":"Swap and Delete","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["strings"]},{"ContestId":1913,"Index":"A","Name":"Rating Increase","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1912,"Index":"L","Name":"LOL Lovers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["strings"]},{"ContestId":1912,"Index":"K","Name":"Kim's Quest","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["bitmasks","combinatorics","dp"]},{"ContestId":1912,"Index":"J","Name":"Joy of Pok√©mon Observation","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":[]},{"ContestId":1912,"Index":"I","Name":"Innovative Washing Machine","Type":"PROGRAMMING","Rating":3300,"Points":0,"Tags":["geometry","math","two pointers"]},{"ContestId":1912,"Index":"H","Name":"Hypercatapult Commute","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["graphs"]},{"ContestId":1912,"Index":"G","Name":"Great City Saint Petersburg","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures"]},{"ContestId":1912,"Index":"F","Name":"Fugitive Frenzy","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["math","probabilities"]},{"ContestId":1912,"Index":"E","Name":"Evaluate It and Back Again","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":1912,"Index":"D","Name":"Divisibility Test","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["math"]},{"ContestId":1912,"Index":"C","Name":"Cactus Transformation","Type":"PROGRAMMING","Rating":3300,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1912,"Index":"B","Name":"Blueprint for Seating","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["combinatorics","divide and conquer","math"]},{"ContestId":1912,"Index":"A","Name":"Accumulator Apex","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","implementation","sortings"]},{"ContestId":1910,"Index":"J","Name":"Two Colors","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["*special"]},{"ContestId":1910,"Index":"I","Name":"Inverse Problem","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["*special","combinatorics","dp"]},{"ContestId":1910,"Index":"H","Name":"Sum of Digits of Sums","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["*special","binary search","data structures"]},{"ContestId":1910,"Index":"G","Name":"Pool Records","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["*special","greedy"]},{"ContestId":1910,"Index":"F","Name":"Build Railway Stations","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special","greedy","trees"]},{"ContestId":1910,"Index":"E","Name":"Maximum Sum Subarrays","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special","dp"]},{"ContestId":1910,"Index":"D","Name":"Remove and Add","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","greedy"]},{"ContestId":1910,"Index":"C","Name":"Poisonous Swamp","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","*special","implementation","implementation"]},{"ContestId":1910,"Index":"B","Name":"Security Guard","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special","greedy"]},{"ContestId":1910,"Index":"A","Name":"Username","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1909,"Index":"I","Name":"Short Permutation Problem","Type":"PROGRAMMING","Rating":3500,"Points":6000,"Tags":["combinatorics","dp","fft","math"]},{"ContestId":1909,"Index":"H","Name":"Parallel Swaps Sort","Type":"PROGRAMMING","Rating":3500,"Points":6000,"Tags":["constructive algorithms","data structures"]},{"ContestId":1909,"Index":"G","Name":"Pumping Lemma","Type":"PROGRAMMING","Rating":3000,"Points":4000,"Tags":["hashing","strings"]},{"ContestId":1909,"Index":"F2","Name":"Small Permutation Problem (Hard Version)","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["combinatorics","dp","math"]},{"ContestId":1909,"Index":"F1","Name":"Small Permutation Problem (Easy Version)","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["brute force","combinatorics","dp","math"]},{"ContestId":1909,"Index":"E","Name":"Multiple Lamps","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["bitmasks","brute force","constructive algorithms","math","number theory"]},{"ContestId":1909,"Index":"D","Name":"Split Plus K","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["greedy","math","number theory"]},{"ContestId":1909,"Index":"C","Name":"Heavy Intervals","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","data structures","dsu","greedy","math","sortings"]},{"ContestId":1909,"Index":"B","Name":"Make Almost Equal With Mod","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["bitmasks","constructive algorithms","math","number theory"]},{"ContestId":1909,"Index":"A","Name":"Distinct Buttons","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":1907,"Index":"G","Name":"Lights","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","constructive algorithms","dfs and similar","graphs","greedy","implementation"]},{"ContestId":1907,"Index":"F","Name":"Shift and Reverse","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1907,"Index":"E","Name":"Good Triples","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","combinatorics","number theory"]},{"ContestId":1907,"Index":"D","Name":"Jumping Through Segments","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","constructive algorithms"]},{"ContestId":1907,"Index":"C","Name":"Removal of Unattractive Pairs","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","greedy","math","strings"]},{"ContestId":1907,"Index":"B","Name":"YetnotherrokenKeoard","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["data structures","implementation","strings"]},{"ContestId":1907,"Index":"A","Name":"Rook","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1906,"Index":"M","Name":"Triangle Construction","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["greedy","math"]},{"ContestId":1906,"Index":"L","Name":"Palindromic Parentheses","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1906,"Index":"K","Name":"Deck-Building Game","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["divide and conquer","math"]},{"ContestId":1906,"Index":"J","Name":"Count BFS Graph","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","dp"]},{"ContestId":1906,"Index":"I","Name":"Contingency Plan 2","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["graph matchings"]},{"ContestId":1906,"Index":"H","Name":"Twin Friends","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["combinatorics","dp"]},{"ContestId":1906,"Index":"G","Name":"Grid Game 2","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["games","number theory"]},{"ContestId":1906,"Index":"F","Name":"Maximize The Value","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","sortings"]},{"ContestId":1906,"Index":"E","Name":"Merge Not Sort","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms","dp"]},{"ContestId":1906,"Index":"D","Name":"Spaceship Exploration","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["binary search","geometry"]},{"ContestId":1906,"Index":"C","Name":"Cursed Game","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["interactive"]},{"ContestId":1906,"Index":"B","Name":"Button Pressing","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["bitmasks","constructive algorithms","hashing"]},{"ContestId":1906,"Index":"A","Name":"Easy As ABC","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force"]},{"ContestId":1905,"Index":"F","Name":"Field Should Not Be Empty","Type":"PROGRAMMING","Rating":2600,"Points":2250,"Tags":["brute force","data structures","divide and conquer"]},{"ContestId":1905,"Index":"E","Name":"One-X","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["combinatorics","dfs and similar","dp","math","trees"]},{"ContestId":1905,"Index":"D","Name":"Cyclic MEX","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["data structures","implementation","math","two pointers"]},{"ContestId":1905,"Index":"C","Name":"Largest Subsequence","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy","strings"]},{"ContestId":1905,"Index":"B","Name":"Begginer's Zelda","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","trees"]},{"ContestId":1905,"Index":"A","Name":"Constructive Problems","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1904,"Index":"F","Name":"Beautiful Tree","Type":"PROGRAMMING","Rating":2800,"Points":3500,"Tags":["data structures","dfs and similar","graphs","implementation","trees"]},{"ContestId":1904,"Index":"E","Name":"Tree Queries","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["data structures","dfs and similar","graphs","implementation","trees"]},{"ContestId":1904,"Index":"D2","Name":"Set To Max (Hard Version)","Type":"PROGRAMMING","Rating":1800,"Points":750,"Tags":["constructive algorithms","data structures","divide and conquer","greedy","implementation","sortings"]},{"ContestId":1904,"Index":"D1","Name":"Set To Max (Easy Version)","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":1904,"Index":"C","Name":"Array Game","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["binary search","brute force","data structures","sortings","two pointers"]},{"ContestId":1904,"Index":"B","Name":"Collecting Game","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["binary search","dp","greedy","sortings","two pointers"]},{"ContestId":1904,"Index":"A","Name":"Forked!","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":1903,"Index":"F","Name":"Babysitting","Type":"PROGRAMMING","Rating":2500,"Points":3500,"Tags":["2-sat","binary search","data structures","graphs","trees"]},{"ContestId":1903,"Index":"E","Name":"Geo Game","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["greedy","interactive","math"]},{"ContestId":1903,"Index":"D2","Name":"Maximum And Queries (hard version)","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["bitmasks","divide and conquer","dp","greedy"]},{"ContestId":1903,"Index":"D1","Name":"Maximum And Queries (easy version)","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","bitmasks","brute force","greedy"]},{"ContestId":1903,"Index":"C","Name":"Theofanis' Nightmare","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1903,"Index":"B","Name":"StORage room","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["bitmasks","brute force","constructive algorithms","greedy"]},{"ContestId":1903,"Index":"A","Name":"Halloumi Boxes","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","sortings"]},{"ContestId":1902,"Index":"F","Name":"Trees and XOR Queries Again","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","dfs and similar","divide and conquer","graphs","implementation","math","trees"]},{"ContestId":1902,"Index":"E","Name":"Collapsing Strings","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","strings","trees"]},{"ContestId":1902,"Index":"D","Name":"Robot Queries","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures","dp","implementation"]},{"ContestId":1902,"Index":"C","Name":"Insert and Equalize","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","constructive algorithms","greedy","math","number theory"]},{"ContestId":1902,"Index":"B","Name":"Getting Points","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","brute force","greedy"]},{"ContestId":1902,"Index":"A","Name":"Binary Imbalance","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1901,"Index":"F","Name":"Landscaping","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["binary search","geometry","two pointers"]},{"ContestId":1901,"Index":"E","Name":"Compressed Tree","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dfs and similar","dp","graphs","greedy","sortings","trees"]},{"ContestId":1901,"Index":"D","Name":"Yet Another Monster Fight","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","dp","greedy","implementation","math"]},{"ContestId":1901,"Index":"C","Name":"Add, Divide and Floor","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1901,"Index":"B","Name":"Chip and Ribbon","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","math"]},{"ContestId":1901,"Index":"A","Name":"Line Trip","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1900,"Index":"F","Name":"Local Deletions","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["binary search","data structures","implementation"]},{"ContestId":1900,"Index":"E","Name":"Transitive Graph","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["dfs and similar","dp","dsu","graphs","implementation"]},{"ContestId":1900,"Index":"D","Name":"Small GCD","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["bitmasks","brute force","dp","math","number theory"]},{"ContestId":1900,"Index":"C","Name":"Anji's Binary Tree","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["dfs and similar","dp","trees"]},{"ContestId":1900,"Index":"B","Name":"Laura and Operations","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["dp","math"]},{"ContestId":1900,"Index":"A","Name":"Cover in Water","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","implementation","strings"]},{"ContestId":1899,"Index":"G","Name":"Unusual Entertainment","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","dfs and similar","dsu","shortest paths","sortings","trees","two pointers"]},{"ContestId":1899,"Index":"F","Name":"Alex's whims","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["constructive algorithms","graphs","greedy","shortest paths","trees"]},{"ContestId":1899,"Index":"E","Name":"Queue Sort","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":1899,"Index":"D","Name":"Yarik and Musical Notes","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["hashing","math","number theory"]},{"ContestId":1899,"Index":"C","Name":"Yarik and Array","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["dp","greedy","two pointers"]},{"ContestId":1899,"Index":"B","Name":"250 Thousand Tons of TNT","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","implementation","number theory"]},{"ContestId":1899,"Index":"A","Name":"Game with Integers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["games","math","number theory"]},{"ContestId":1898,"Index":"F","Name":"Vova Escapes the Matrix","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["brute force","dfs and similar","divide and conquer","shortest paths"]},{"ContestId":1898,"Index":"E","Name":"Sofia and Strings","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["data structures","greedy","sortings","strings","two pointers"]},{"ContestId":1898,"Index":"D","Name":"Absolute Beauty","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["greedy","math"]},{"ContestId":1898,"Index":"C","Name":"Colorful Grid","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["constructive algorithms"]},{"ContestId":1898,"Index":"B","Name":"Milena and Admirer","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["greedy","math"]},{"ContestId":1898,"Index":"A","Name":"Milica and String","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation","strings"]},{"ContestId":1896,"Index":"H2","Name":"Cyclic Hamming (Hard Version)","Type":"PROGRAMMING","Rating":3500,"Points":1000,"Tags":["brute force","dp","fft","math","number theory"]},{"ContestId":1896,"Index":"H1","Name":"Cyclic Hamming (Easy Version)","Type":"PROGRAMMING","Rating":3400,"Points":4000,"Tags":["brute force","divide and conquer","dp","fft","math","number theory"]},{"ContestId":1896,"Index":"G","Name":"Pepe Racing","Type":"PROGRAMMING","Rating":3200,"Points":3250,"Tags":["constructive algorithms","implementation","interactive","sortings"]},{"ContestId":1896,"Index":"F","Name":"Bracket Xoring","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1896,"Index":"E","Name":"Permutation Sorting","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["data structures","sortings"]},{"ContestId":1896,"Index":"D","Name":"Ones and Twos","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["binary search","data structures","divide and conquer","math","two pointers"]},{"ContestId":1896,"Index":"C","Name":"Matching Arrays","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["binary search","constructive algorithms","greedy","sortings"]},{"ContestId":1896,"Index":"B","Name":"AB Flipping","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","strings","two pointers"]},{"ContestId":1896,"Index":"A","Name":"Jagged Swaps","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["sortings"]},{"ContestId":1895,"Index":"G","Name":"Two Characters, Two Colors","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["binary search","data structures","dp","flows","greedy"]},{"ContestId":1895,"Index":"F","Name":"Fancy Arrays","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["combinatorics","dp","math","matrices"]},{"ContestId":1895,"Index":"E","Name":"Infinite Card Game","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","brute force","data structures","dfs and similar","dp","dsu","games","graphs","greedy","sortings","two pointers"]},{"ContestId":1895,"Index":"D","Name":"XOR Construction","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["bitmasks","constructive algorithms","data structures","math","string suffix structures","trees"]},{"ContestId":1895,"Index":"C","Name":"Torn Lucky Ticket","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","dp","hashing","implementation","math"]},{"ContestId":1895,"Index":"B","Name":"Points and Minimum Distance","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math","sortings"]},{"ContestId":1895,"Index":"A","Name":"Treasure Chest","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1894,"Index":"B","Name":"Two Out of Three","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["constructive algorithms"]},{"ContestId":1894,"Index":"A","Name":"Secret Sport","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1893,"Index":"E","Name":"Cacti Symphony","Type":"PROGRAMMING","Rating":3500,"Points":2750,"Tags":["combinatorics","dfs and similar","dp","graphs"]},{"ContestId":1893,"Index":"D","Name":"Colorful Constructive","Type":"PROGRAMMING","Rating":2600,"Points":2250,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":1893,"Index":"C","Name":"Freedom of Choice","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["brute force","greedy","implementation"]},{"ContestId":1893,"Index":"B","Name":"Neutral Tonality","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","greedy","sortings","two pointers"]},{"ContestId":1893,"Index":"A","Name":"Anonymous Informant","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","dfs and similar","graphs","implementation"]},{"ContestId":1891,"Index":"F","Name":"A Growing Tree","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":1891,"Index":"E","Name":"Brukhovich and Exams","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["brute force","greedy","implementation","math","sortings"]},{"ContestId":1891,"Index":"D","Name":"Suspicious logarithms","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["binary search","brute force","math"]},{"ContestId":1891,"Index":"C","Name":"Smilo and Monsters","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","constructive algorithms","greedy","sortings","two pointers"]},{"ContestId":1891,"Index":"B","Name":"Deja Vu","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["brute force","math","sortings"]},{"ContestId":1891,"Index":"A","Name":"Sorting with Twos","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","sortings"]},{"ContestId":1890,"Index":"B","Name":"Qingshan Loves Strings","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["constructive algorithms","implementation"]},{"ContestId":1890,"Index":"A","Name":"Doremy's Paint 3","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":1889,"Index":"F","Name":"Doremy's Average Tree","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["data structures","dp","greedy","trees"]},{"ContestId":1889,"Index":"E","Name":"Doremy's Swapping Trees","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":1889,"Index":"D","Name":"Game of Stacks","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["brute force","dfs and similar","graphs","implementation","trees"]},{"ContestId":1889,"Index":"C2","Name":"Doremy's Drying Plan (Hard Version)","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["data structures","dp"]},{"ContestId":1889,"Index":"C1","Name":"Doremy's Drying Plan (Easy Version)","Type":"PROGRAMMING","Rating":2000,"Points":750,"Tags":["brute force","data structures","dp","greedy","sortings"]},{"ContestId":1889,"Index":"B","Name":"Doremy's Connecting Plan","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["constructive algorithms","greedy","math","sortings"]},{"ContestId":1889,"Index":"A","Name":"Qingshan Loves Strings 2","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1887,"Index":"F","Name":"Minimum Segments","Type":"PROGRAMMING","Rating":3400,"Points":2750,"Tags":["constructive algorithms"]},{"ContestId":1887,"Index":"E","Name":"Good Colorings","Type":"PROGRAMMING","Rating":3100,"Points":2000,"Tags":["binary search","constructive algorithms","graphs","interactive"]},{"ContestId":1887,"Index":"D","Name":"Split","Type":"PROGRAMMING","Rating":2700,"Points":1250,"Tags":["binary search","data structures","divide and conquer","dsu","math","trees","two pointers"]},{"ContestId":1887,"Index":"C","Name":"Minimum Array","Type":"PROGRAMMING","Rating":2400,"Points":1000,"Tags":["binary search","brute force","constructive algorithms","data structures","greedy","hashing","two pointers"]},{"ContestId":1887,"Index":"B","Name":"Time Travel","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["binary search","graphs","shortest paths"]},{"ContestId":1886,"Index":"F","Name":"Diamond Theft","Type":"PROGRAMMING","Rating":3300,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1886,"Index":"E","Name":"I Wanna be the Team Leader","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["bitmasks","constructive algorithms","dp","greedy","math","sortings","two pointers"]},{"ContestId":1886,"Index":"D","Name":"Monocarp and the Set","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","data structures","math"]},{"ContestId":1886,"Index":"C","Name":"Decreasing String","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1886,"Index":"B","Name":"Fear of the Dark","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search","geometry","math"]},{"ContestId":1886,"Index":"A","Name":"Sum of Three","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":1885,"Index":"A","Name":"Deterministic Scheduling for Extended Reality over 5G and Beyond","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1884,"Index":"E","Name":"Hard Design","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["greedy","implementation","math"]},{"ContestId":1884,"Index":"D","Name":"Counting Rhyme","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["dp","math","number theory"]},{"ContestId":1884,"Index":"C","Name":"Medium Design","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["brute force","data structures","dp","greedy","sortings"]},{"ContestId":1884,"Index":"B","Name":"Haunted House","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["binary search","greedy","math","two pointers"]},{"ContestId":1884,"Index":"A","Name":"Simple Design","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","math"]},{"ContestId":1883,"Index":"G2","Name":"Dances (Hard Version)","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","greedy","sortings","two pointers"]},{"ContestId":1883,"Index":"G1","Name":"Dances (Easy version)","Type":"PROGRAMMING","Rating":1400,"Points":1750,"Tags":["binary search","greedy","two pointers"]},{"ContestId":1883,"Index":"F","Name":"You Are So Beautiful","Type":"PROGRAMMING","Rating":1400,"Points":2750,"Tags":["data structures"]},{"ContestId":1883,"Index":"E","Name":"Look Back","Type":"PROGRAMMING","Rating":1700,"Points":2500,"Tags":["bitmasks","greedy"]},{"ContestId":1883,"Index":"D","Name":"In Love","Type":"PROGRAMMING","Rating":1500,"Points":1750,"Tags":["data structures","greedy"]},{"ContestId":1883,"Index":"C","Name":"Raspberries","Type":"PROGRAMMING","Rating":1000,"Points":1500,"Tags":["dp","math"]},{"ContestId":1883,"Index":"B","Name":"Chemistry","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["strings"]},{"ContestId":1883,"Index":"A","Name":"Morning","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1882,"Index":"E2","Name":"Two Permutations (Hard Version)","Type":"PROGRAMMING","Rating":3100,"Points":2000,"Tags":["constructive algorithms"]},{"ContestId":1882,"Index":"E1","Name":"Two Permutations (Easy Version)","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["brute force","constructive algorithms","greedy","number theory"]},{"ContestId":1882,"Index":"D","Name":"Tree XOR","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["bitmasks","dfs and similar","dp","greedy","trees"]},{"ContestId":1882,"Index":"C","Name":"Card Game","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["brute force","greedy"]},{"ContestId":1882,"Index":"B","Name":"Sets and Union","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["bitmasks","brute force","constructive algorithms","greedy"]},{"ContestId":1882,"Index":"A","Name":"Increasing Sequence","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1881,"Index":"G","Name":"Anya and the Mysterious String","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","data structures"]},{"ContestId":1881,"Index":"F","Name":"Minimum Maximum Distance","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","dp","graphs","shortest paths","trees"]},{"ContestId":1881,"Index":"E","Name":"Block Sequence","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dp"]},{"ContestId":1881,"Index":"D","Name":"Divide and Equalize","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["math","number theory"]},{"ContestId":1881,"Index":"C","Name":"Perfect Square","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1881,"Index":"B","Name":"Three Threadlets","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1881,"Index":"A","Name":"Don't Try to Count","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","strings"]},{"ContestId":1879,"Index":"F","Name":"Last Man Standing","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["brute force","data structures","number theory"]},{"ContestId":1879,"Index":"E","Name":"Interactive Game with Coloring","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","constructive algorithms","dfs and similar","graphs","implementation","interactive","trees"]},{"ContestId":1879,"Index":"D","Name":"Sum of XOR Functions","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["bitmasks","combinatorics","divide and conquer","dp","math"]},{"ContestId":1879,"Index":"C","Name":"Make it Alternating","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["combinatorics","dp","greedy"]},{"ContestId":1879,"Index":"B","Name":"Chips on the Board","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1879,"Index":"A","Name":"Rigged!","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1878,"Index":"G","Name":"wxhtzdy ORO Tree","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","bitmasks","brute force","data structures","dfs and similar","implementation","trees"]},{"ContestId":1878,"Index":"F","Name":"Vasilije Loves Number Theory","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":1878,"Index":"E","Name":"Iva \u0026 Pav","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","bitmasks","data structures","greedy"]},{"ContestId":1878,"Index":"D","Name":"Reverse Madness","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1878,"Index":"C","Name":"Vasilije in Cacak","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1878,"Index":"B","Name":"Aleksa and Stack","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1878,"Index":"A","Name":"How Much Does Daytona Cost?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1877,"Index":"C","Name":"Joyboard","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["math","number theory"]},{"ContestId":1877,"Index":"A","Name":"Goals of Victory","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1876,"Index":"G","Name":"Clubstep","Type":"PROGRAMMING","Rating":3500,"Points":3250,"Tags":["binary search","brute force","data structures","greedy","trees"]},{"ContestId":1876,"Index":"F","Name":"Indefinite Clownfish","Type":"PROGRAMMING","Rating":3500,"Points":2750,"Tags":["binary search","graphs"]},{"ContestId":1876,"Index":"E","Name":"Ball-Stackable","Type":"PROGRAMMING","Rating":3300,"Points":2250,"Tags":["constructive algorithms","data structures","dp","trees"]},{"ContestId":1876,"Index":"D","Name":"Lexichromatography","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["combinatorics","dfs and similar","dsu","graphs","two pointers"]},{"ContestId":1876,"Index":"C","Name":"Autosynthesis","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["constructive algorithms","dfs and similar","graphs","greedy","sortings"]},{"ContestId":1876,"Index":"B","Name":"Effects of Anti Pimples","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["combinatorics","number theory","sortings"]},{"ContestId":1876,"Index":"A","Name":"Helmets in Night Light","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":1875,"Index":"D","Name":"Jellyfish and Mex","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["dp"]},{"ContestId":1875,"Index":"C","Name":"Jellyfish and Green Apple","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["bitmasks","greedy","math","number theory"]},{"ContestId":1875,"Index":"A","Name":"Jellyfish and Undertale","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":1874,"Index":"G","Name":"Jellyfish and Inscryption","Type":"PROGRAMMING","Rating":3500,"Points":5000,"Tags":["dp"]},{"ContestId":1874,"Index":"F","Name":"Jellyfish and OEIS","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["dp"]},{"ContestId":1874,"Index":"E","Name":"Jellyfish and Hack","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["dp","math"]},{"ContestId":1874,"Index":"D","Name":"Jellyfish and Miku","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["divide and conquer","dp","math","probabilities"]},{"ContestId":1874,"Index":"C","Name":"Jellyfish and EVA","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["dp","graphs","greedy","math","probabilities"]},{"ContestId":1874,"Index":"B","Name":"Jellyfish and Math","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["bitmasks","brute force","dfs and similar","dp","graphs","shortest paths"]},{"ContestId":1874,"Index":"A","Name":"Jellyfish and Game","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","games","greedy","implementation"]},{"ContestId":1873,"Index":"H","Name":"Mad City","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","dsu","games","graphs","shortest paths","trees"]},{"ContestId":1873,"Index":"G","Name":"ABBC or BACB","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1873,"Index":"F","Name":"Money Trees","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","greedy","math","two pointers"]},{"ContestId":1873,"Index":"E","Name":"Building an Aquarium","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","sortings"]},{"ContestId":1873,"Index":"D","Name":"1D Eraser","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation","two pointers"]},{"ContestId":1873,"Index":"C","Name":"Target Practice","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1873,"Index":"B","Name":"Good Kid","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1873,"Index":"A","Name":"Short Sort","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1872,"Index":"G","Name":"Replace With Product","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1872,"Index":"F","Name":"Selling a Menagerie","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dfs and similar","dsu","graphs","implementation","math"]},{"ContestId":1872,"Index":"E","Name":"Data Structures Fan","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","bitmasks","data structures","dp"]},{"ContestId":1872,"Index":"D","Name":"Plus Minus Permutation","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["math"]},{"ContestId":1872,"Index":"C","Name":"Non-coprime Split","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math","number theory"]},{"ContestId":1872,"Index":"B","Name":"The Corridor or There and Back Again","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1872,"Index":"A","Name":"Two Vessels","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1870,"Index":"H","Name":"Standard Graph Problem","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["data structures","graphs","greedy","trees"]},{"ContestId":1870,"Index":"G","Name":"MEXanization","Type":"PROGRAMMING","Rating":3300,"Points":3250,"Tags":["data structures"]},{"ContestId":1870,"Index":"F","Name":"Lazy Numbers","Type":"PROGRAMMING","Rating":2900,"Points":3250,"Tags":["binary search","math"]},{"ContestId":1870,"Index":"E","Name":"Another MEX Problem","Type":"PROGRAMMING","Rating":2300,"Points":2750,"Tags":["bitmasks","brute force","dp","shortest paths"]},{"ContestId":1870,"Index":"D","Name":"Prefix Purchase","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["greedy","implementation","sortings"]},{"ContestId":1870,"Index":"C","Name":"Colorful Table","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["binary search","data structures","dp","implementation","math","two pointers"]},{"ContestId":1870,"Index":"B","Name":"Friendly Arrays","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["bitmasks","greedy","math"]},{"ContestId":1870,"Index":"A","Name":"MEXanized Array","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1869,"Index":"B","Name":"2D Traveling","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["geometry","math","shortest paths","sortings"]},{"ContestId":1869,"Index":"A","Name":"Make It Zero","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":1868,"Index":"F","Name":"LIS?","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["data structures","greedy","implementation"]},{"ContestId":1868,"Index":"E","Name":"Min-Sum-Max","Type":"PROGRAMMING","Rating":3500,"Points":2500,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1868,"Index":"D","Name":"Flower-like Pseudotree","Type":"PROGRAMMING","Rating":3000,"Points":1750,"Tags":["constructive algorithms","graphs","greedy","implementation","trees"]},{"ContestId":1868,"Index":"C","Name":"Travel Plan","Type":"PROGRAMMING","Rating":2400,"Points":1000,"Tags":["combinatorics","dp","implementation","math","trees"]},{"ContestId":1868,"Index":"B2","Name":"Candy Party (Hard Version)","Type":"PROGRAMMING","Rating":2100,"Points":750,"Tags":["bitmasks","constructive algorithms","dp","greedy","implementation","math"]},{"ContestId":1868,"Index":"B1","Name":"Candy Party (Easy Version)","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["bitmasks","constructive algorithms","graphs","greedy","implementation","math"]},{"ContestId":1868,"Index":"A","Name":"Fill in the Matrix","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1867,"Index":"F","Name":"Most Different Tree","Type":"PROGRAMMING","Rating":2700,"Points":4000,"Tags":["brute force","constructive algorithms","dfs and similar","greedy","hashing"]},{"ContestId":1867,"Index":"E2","Name":"Salyg1n and Array (hard version)","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["constructive algorithms","interactive"]},{"ContestId":1867,"Index":"E1","Name":"Salyg1n and Array (simple version)","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","interactive","math"]},{"ContestId":1867,"Index":"D","Name":"Cyclic Operations","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["brute force","constructive algorithms","dfs and similar","graphs","greedy","implementation"]},{"ContestId":1867,"Index":"C","Name":"Salyg1n and the MEX Game","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["constructive algorithms","data structures","games","greedy","interactive"]},{"ContestId":1867,"Index":"B","Name":"XOR Palindromes","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["bitmasks","constructive algorithms","strings"]},{"ContestId":1867,"Index":"A","Name":"green_gold_dog, array and permutation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","sortings"]},{"ContestId":1866,"Index":"M","Name":"Mighty Rock Tower","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","combinatorics","dp","math","probabilities"]},{"ContestId":1866,"Index":"L","Name":"Lihmuf Balling","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","brute force","math"]},{"ContestId":1866,"Index":"K","Name":"Keen Tree Calculation","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["binary search","data structures","dp","geometry","graphs","implementation","trees"]},{"ContestId":1866,"Index":"J","Name":"Jackets and Packets","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dp"]},{"ContestId":1866,"Index":"I","Name":"Imagination Castle","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","games","two pointers"]},{"ContestId":1866,"Index":"H","Name":"Happy Sets","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics"]},{"ContestId":1866,"Index":"G","Name":"Grouped Carriages","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","data structures","dp","flows","greedy"]},{"ContestId":1866,"Index":"F","Name":"Freak Joker Process","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["binary search","data structures","sortings"]},{"ContestId":1866,"Index":"E","Name":"Elevators of Tamem","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["dp"]},{"ContestId":1866,"Index":"D","Name":"Digital Wallet","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1866,"Index":"C","Name":"Completely Searching for Inversions","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar","dp","graphs"]},{"ContestId":1866,"Index":"B","Name":"Battling with Numbers","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["combinatorics","math","number theory"]},{"ContestId":1866,"Index":"A","Name":"Ambitious Kid","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1864,"Index":"I","Name":"Future Dominators","Type":"PROGRAMMING","Rating":3500,"Points":4250,"Tags":["graphs","greedy"]},{"ContestId":1864,"Index":"H","Name":"Asterism Stream","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["dp","math","matrices"]},{"ContestId":1864,"Index":"G","Name":"Magic Square","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["combinatorics","constructive algorithms","implementation"]},{"ContestId":1864,"Index":"F","Name":"Exotic Queries","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["data structures","implementation","sortings"]},{"ContestId":1864,"Index":"E","Name":"Guess Game","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["bitmasks","data structures","games","math","probabilities","sortings","strings","trees"]},{"ContestId":1864,"Index":"D","Name":"Matrix Cascade","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","constructive algorithms","data structures","dp","greedy","math"]},{"ContestId":1864,"Index":"C","Name":"Divisor Chain","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["bitmasks","constructive algorithms","math","number theory"]},{"ContestId":1864,"Index":"B","Name":"Swap and Reverse","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","greedy","sortings","strings"]},{"ContestId":1864,"Index":"A","Name":"Increasing and Decreasing","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1863,"Index":"I","Name":"Redundant Routes","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["constructive algorithms","dp","trees"]},{"ContestId":1863,"Index":"H","Name":"Goldberg Machine 3","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["dp","trees"]},{"ContestId":1863,"Index":"G","Name":"Swaps","Type":"PROGRAMMING","Rating":2800,"Points":2750,"Tags":["combinatorics","dp","graphs","math"]},{"ContestId":1863,"Index":"F","Name":"Divide, XOR, and Conquer","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["bitmasks","dp","math"]},{"ContestId":1863,"Index":"E","Name":"Speedrun","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["brute force","dfs and similar","dp","graphs","greedy","math","sortings","two pointers"]},{"ContestId":1863,"Index":"D","Name":"Two-Colored Dominoes","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["constructive algorithms","greedy"]},{"ContestId":1863,"Index":"C","Name":"MEX Repetition","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation","math"]},{"ContestId":1863,"Index":"B","Name":"Split Sort","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["greedy","math","sortings"]},{"ContestId":1863,"Index":"A","Name":"Channel","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1862,"Index":"G","Name":"The Great Equalizer","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","data structures","math","sortings"]},{"ContestId":1862,"Index":"F","Name":"Magic Will Save the World","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","bitmasks","brute force","dp"]},{"ContestId":1862,"Index":"E","Name":"Kolya and Movie Theatre","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":1862,"Index":"D","Name":"Ice Cream Balls","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","combinatorics","constructive algorithms","math"]},{"ContestId":1862,"Index":"C","Name":"Flower City Fence","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","data structures","implementation","sortings"]},{"ContestId":1862,"Index":"B","Name":"Sequence Game","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1862,"Index":"A","Name":"Gift Carpet","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["dp","greedy","implementation","strings"]},{"ContestId":1861,"Index":"F","Name":"Four Suits","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["binary search","bitmasks","flows","greedy"]},{"ContestId":1861,"Index":"E","Name":"Non-Intersecting Subpermutations","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["combinatorics","dp","implementation","math"]},{"ContestId":1861,"Index":"D","Name":"Sorting By Multiplication","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1861,"Index":"C","Name":"Queries for the Array","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","dfs and similar","implementation","strings","trees"]},{"ContestId":1861,"Index":"B","Name":"Two Binary Strings","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1861,"Index":"A","Name":"Prime Deletion","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1860,"Index":"F","Name":"Evaluate RBS","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["data structures","geometry","implementation","math","sortings"]},{"ContestId":1860,"Index":"E","Name":"Fast Travel Text Editor","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","dfs and similar","graphs","shortest paths"]},{"ContestId":1860,"Index":"D","Name":"Balanced String","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp"]},{"ContestId":1860,"Index":"C","Name":"Game on Permutation","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["data structures","dp","games","greedy"]},{"ContestId":1860,"Index":"B","Name":"Fancy Coins","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search","brute force","greedy","math"]},{"ContestId":1860,"Index":"A","Name":"Not a Substring","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["constructive algorithms","strings"]},{"ContestId":1859,"Index":"F","Name":"Teleportation in Byteland","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["data structures","dfs and similar","divide and conquer","graphs","shortest paths","trees"]},{"ContestId":1859,"Index":"E","Name":"Maximum Monogonosity","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["brute force","dp","math"]},{"ContestId":1859,"Index":"D","Name":"Andrey and Escape from Capygrad","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["binary search","data structures","dp","dsu","greedy","sortings"]},{"ContestId":1859,"Index":"C","Name":"Another Permutation Problem","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["brute force","dp","greedy","math"]},{"ContestId":1859,"Index":"B","Name":"Olya and Game with Arrays","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","greedy","math","sortings"]},{"ContestId":1859,"Index":"A","Name":"United We Stand","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1858,"Index":"E2","Name":"Rollbacks (Hard Version)","Type":"PROGRAMMING","Rating":2600,"Points":1000,"Tags":["data structures","interactive","trees"]},{"ContestId":1858,"Index":"E1","Name":"Rollbacks (Easy Version)","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["brute force","data structures","dfs and similar","trees"]},{"ContestId":1858,"Index":"D","Name":"Trees and Segments","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["brute force","data structures","dp","greedy","two pointers"]},{"ContestId":1858,"Index":"C","Name":"Yet Another Permutation Problem","Type":"PROGRAMMING","Rating":1000,"Points":1500,"Tags":["constructive algorithms","greedy","math","number theory"]},{"ContestId":1858,"Index":"B","Name":"The Walkway","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["brute force","dp","greedy","math","number theory"]},{"ContestId":1858,"Index":"A","Name":"Buttons","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["games","greedy","math"]},{"ContestId":1857,"Index":"G","Name":"Counting Graphs","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["combinatorics","divide and conquer","dsu","graphs","greedy","sortings","trees"]},{"ContestId":1857,"Index":"F","Name":"Sum and Product","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","data structures","math"]},{"ContestId":1857,"Index":"E","Name":"Power of Points","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["math","sortings"]},{"ContestId":1857,"Index":"D","Name":"Strong Vertices","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["math","sortings","trees"]},{"ContestId":1857,"Index":"C","Name":"Assembly via Minimums","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1857,"Index":"B","Name":"Maximum Rounding","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","implementation","math"]},{"ContestId":1857,"Index":"A","Name":"Array Coloring","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1856,"Index":"E2","Name":"PermuTree (hard version)","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["bitmasks","dfs and similar","dp","fft","greedy","implementation","math","trees"]},{"ContestId":1856,"Index":"E1","Name":"PermuTree (easy version)","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dfs and similar","dp","trees"]},{"ContestId":1856,"Index":"D","Name":"More Wrong","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["divide and conquer","interactive"]},{"ContestId":1856,"Index":"C","Name":"To Become Max","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["binary search","brute force","data structures","dp"]},{"ContestId":1856,"Index":"B","Name":"Good Arrays","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["implementation","math"]},{"ContestId":1856,"Index":"A","Name":"Tales of a Sort","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1855,"Index":"B","Name":"Longest Divisors Interval","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["brute force","combinatorics","greedy","math","number theory"]},{"ContestId":1855,"Index":"A","Name":"Dalton the Teacher","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1854,"Index":"F","Name":"Mark and Spaceship","Type":"PROGRAMMING","Rating":3500,"Points":3250,"Tags":["brute force","dp"]},{"ContestId":1854,"Index":"E","Name":"Game Bundles","Type":"PROGRAMMING","Rating":3000,"Points":2750,"Tags":["brute force","constructive algorithms","dp","greedy","math"]},{"ContestId":1854,"Index":"D","Name":"Michael and Hotel","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["binary search","interactive","trees"]},{"ContestId":1854,"Index":"C","Name":"Expected Destruction","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":1854,"Index":"B","Name":"Earn or Unlock","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["bitmasks","brute force","dp"]},{"ContestId":1854,"Index":"A2","Name":"Dual (Hard Version)","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["constructive algorithms","math"]},{"ContestId":1854,"Index":"A1","Name":"Dual (Easy Version)","Type":"PROGRAMMING","Rating":1400,"Points":750,"Tags":["constructive algorithms","math"]},{"ContestId":1853,"Index":"B","Name":"Fibonaccharsis","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["binary search","brute force","math"]},{"ContestId":1853,"Index":"A","Name":"Desorting","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","math"]},{"ContestId":1852,"Index":"F","Name":"Panda Meetups","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["data structures","dp","flows"]},{"ContestId":1852,"Index":"E","Name":"Rivalries","Type":"PROGRAMMING","Rating":3400,"Points":2250,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":1852,"Index":"D","Name":"Miriany and Matchstick","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1852,"Index":"C","Name":"Ina of the Mountain","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["data structures","dp","greedy","math"]},{"ContestId":1852,"Index":"B","Name":"Imbalanced Arrays","Type":"PROGRAMMING","Rating":1800,"Points":750,"Tags":["constructive algorithms","graphs","greedy","math","sortings","two pointers"]},{"ContestId":1852,"Index":"A","Name":"Ntarsis' Set","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["binary search","math","number theory"]},{"ContestId":1851,"Index":"G","Name":"Vlad and the Mountains","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","data structures","dsu","graphs","implementation","sortings","trees","two pointers"]},{"ContestId":1851,"Index":"F","Name":"Lisa and the Martians","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["bitmasks","greedy","math","strings","trees"]},{"ContestId":1851,"Index":"E","Name":"Nastya and Potions","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dfs and similar","dp","graphs","sortings"]},{"ContestId":1851,"Index":"D","Name":"Prefix Permutation Sums","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation","math"]},{"ContestId":1851,"Index":"C","Name":"Tiles Comeback","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy"]},{"ContestId":1851,"Index":"B","Name":"Parity Sort","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","sortings","two pointers"]},{"ContestId":1851,"Index":"A","Name":"Escalator Conversations","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":1850,"Index":"H","Name":"The Third Letter","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","dsu","graphs","greedy","implementation"]},{"ContestId":1850,"Index":"G","Name":"The Morning Star","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["combinatorics","data structures","geometry","implementation","math","sortings"]},{"ContestId":1850,"Index":"F","Name":"We Were Both Children","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","implementation","math","number theory"]},{"ContestId":1850,"Index":"E","Name":"Cardboard for Pictures","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","geometry","implementation","math"]},{"ContestId":1850,"Index":"D","Name":"Balanced Round","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","greedy","implementation","sortings"]},{"ContestId":1850,"Index":"C","Name":"Word on the Paper","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1850,"Index":"B","Name":"Ten Words of Wisdom","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":1850,"Index":"A","Name":"To My Critics","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":1849,"Index":"F","Name":"XOR Partition","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["binary search","bitmasks","data structures","divide and conquer","greedy","trees"]},{"ContestId":1849,"Index":"E","Name":"Max to the Right of Min","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","data structures","divide and conquer","dp","dsu","two pointers"]},{"ContestId":1849,"Index":"D","Name":"Array Painting","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","greedy","two pointers"]},{"ContestId":1849,"Index":"C","Name":"Binary String Copying","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","brute force","data structures","hashing","strings"]},{"ContestId":1849,"Index":"B","Name":"Monsters","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","math","sortings"]},{"ContestId":1849,"Index":"A","Name":"Morning Sandwich","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1848,"Index":"F","Name":"Vika and Wiki","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["binary search","bitmasks","combinatorics","divide and conquer","dp","math"]},{"ContestId":1848,"Index":"E","Name":"Vika and Stone Skipping","Type":"PROGRAMMING","Rating":2600,"Points":2250,"Tags":["brute force","implementation","math","number theory"]},{"ContestId":1848,"Index":"D","Name":"Vika and Bonuses","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["binary search","brute force","math","ternary search"]},{"ContestId":1848,"Index":"C","Name":"Vika and Price Tags","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["math","number theory"]},{"ContestId":1848,"Index":"B","Name":"Vika and the Bridge","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["binary search","data structures","greedy","implementation","math","sortings"]},{"ContestId":1848,"Index":"A","Name":"Vika and Her Friends","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["games","math"]},{"ContestId":1847,"Index":"F","Name":"The Boss's Identity","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["binary search","bitmasks","data structures","dfs and similar","greedy","math","sortings"]},{"ContestId":1847,"Index":"E","Name":"Triangle Platinum?","Type":"PROGRAMMING","Rating":2900,"Points":2750,"Tags":["brute force","combinatorics","implementation","interactive","math","probabilities"]},{"ContestId":1847,"Index":"D","Name":"Professor Higashikata","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["data structures","dsu","greedy","implementation","strings"]},{"ContestId":1847,"Index":"C","Name":"Vampiric Powers, anyone?","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["bitmasks","brute force","dp","greedy"]},{"ContestId":1847,"Index":"B","Name":"Hamon Odyssey","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["bitmasks","greedy","two pointers"]},{"ContestId":1847,"Index":"A","Name":"The Man who became a God ","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":1846,"Index":"G","Name":"Rudolf and CodeVid-23","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["bitmasks","dp","graphs","greedy","shortest paths"]},{"ContestId":1846,"Index":"F","Name":"Rudolph and Mimic","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","implementation","interactive"]},{"ContestId":1846,"Index":"E2","Name":"Rudolf and Snowflakes (hard version)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","brute force","implementation","math"]},{"ContestId":1846,"Index":"E1","Name":"Rudolf and Snowflakes (simple version)","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","implementation","math"]},{"ContestId":1846,"Index":"D","Name":"Rudolph and Christmas Tree","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","geometry","math"]},{"ContestId":1846,"Index":"C","Name":"Rudolf and the Another Competition","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","data structures","dp","greedy","sortings"]},{"ContestId":1846,"Index":"B","Name":"Rudolph and Tic-Tac-Toe","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation","strings"]},{"ContestId":1846,"Index":"A","Name":"Rudolph and Cut the Rope ","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1845,"Index":"F","Name":"Swimmers in the Pool","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dp","fft","math","number theory"]},{"ContestId":1845,"Index":"E","Name":"Boxes and Balls","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dp","implementation","math"]},{"ContestId":1845,"Index":"D","Name":"Rating System","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","brute force","data structures","dp","dsu","greedy","math","two pointers"]},{"ContestId":1845,"Index":"C","Name":"Strong Password","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","dp","greedy","strings"]},{"ContestId":1845,"Index":"B","Name":"Come Together","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["geometry","implementation","math"]},{"ContestId":1845,"Index":"A","Name":"Forbidden Integer","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","implementation","math","number theory"]},{"ContestId":1844,"Index":"H","Name":"Multiple of Three Cycles","Type":"PROGRAMMING","Rating":3400,"Points":4000,"Tags":["combinatorics","data structures","dp","dsu","math"]},{"ContestId":1844,"Index":"G","Name":"Tree Weights","Type":"PROGRAMMING","Rating":3000,"Points":3500,"Tags":["bitmasks","constructive algorithms","data structures","dfs and similar","implementation","math","matrices","number theory","trees"]},{"ContestId":1844,"Index":"F2","Name":"Min Cost Permutation (Hard Version)","Type":"PROGRAMMING","Rating":2800,"Points":1000,"Tags":["binary search","constructive algorithms","data structures","greedy","math","sortings"]},{"ContestId":1844,"Index":"F1","Name":"Min Cost Permutation (Easy Version)","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["brute force","constructive algorithms","greedy","math"]},{"ContestId":1844,"Index":"E","Name":"Great Grids","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["2-sat","constructive algorithms","dfs and similar","dsu","graphs"]},{"ContestId":1844,"Index":"D","Name":"Row Major","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","greedy","math","number theory","strings"]},{"ContestId":1844,"Index":"C","Name":"Particles","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["dp","greedy","implementation","math"]},{"ContestId":1844,"Index":"B","Name":"Permutations \u0026 Primes","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":1844,"Index":"A","Name":"Subtraction Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","games"]},{"ContestId":1843,"Index":"F2","Name":"Omsk Metro (hard version)","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","dfs and similar","divide and conquer","dp","math","trees"]},{"ContestId":1843,"Index":"F1","Name":"Omsk Metro (simple version)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","dfs and similar","dp","graphs","greedy","math","trees"]},{"ContestId":1843,"Index":"E","Name":"Tracking Segments","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","brute force","data structures","two pointers"]},{"ContestId":1843,"Index":"D","Name":"Apple Tree","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["combinatorics","dfs and similar","dp","math","trees"]},{"ContestId":1843,"Index":"C","Name":"Sum in Binary Tree","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["bitmasks","combinatorics","math","trees"]},{"ContestId":1843,"Index":"B","Name":"Long Long","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math","two pointers"]},{"ContestId":1843,"Index":"A","Name":"Sasha and Array Coloring","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","sortings","two pointers"]},{"ContestId":1842,"Index":"I","Name":"Tenzing and Necklace","Type":"PROGRAMMING","Rating":3500,"Points":5000,"Tags":["divide and conquer","dp","greedy"]},{"ContestId":1842,"Index":"H","Name":"Tenzing and Random Real Numbers","Type":"PROGRAMMING","Rating":3000,"Points":3750,"Tags":["bitmasks","dp","graphs","math","probabilities"]},{"ContestId":1842,"Index":"G","Name":"Tenzing and Random Operations","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":1842,"Index":"F","Name":"Tenzing and Tree","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dfs and similar","greedy","shortest paths","sortings","trees"]},{"ContestId":1842,"Index":"E","Name":"Tenzing and Triangle","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["data structures","dp","geometry","greedy","math"]},{"ContestId":1842,"Index":"D","Name":"Tenzing and His Animal Friends ","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["constructive algorithms","graphs","greedy"]},{"ContestId":1842,"Index":"C","Name":"Tenzing and Balls","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dp"]},{"ContestId":1842,"Index":"B","Name":"Tenzing and Books","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["bitmasks","greedy","math"]},{"ContestId":1842,"Index":"A","Name":"Tenzing and Tsondu","Type":"PROGRAMMING","Rating":800,"Points":250,"Tags":["games","math"]},{"ContestId":1841,"Index":"F","Name":"Monocarp and a Strategic Game","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["geometry","sortings","two pointers"]},{"ContestId":1841,"Index":"E","Name":"Fill the Matrix","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","greedy","math"]},{"ContestId":1841,"Index":"D","Name":"Pairs of Segments","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","greedy","sortings","two pointers"]},{"ContestId":1841,"Index":"C","Name":"Ranom Numbers","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","dp","greedy","math","strings"]},{"ContestId":1841,"Index":"B","Name":"Keep it Beautiful","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":1841,"Index":"A","Name":"Game with Board","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","games"]},{"ContestId":1840,"Index":"G2","Name":"In Search of Truth (Hard Version)","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["constructive algorithms","interactive","math","meet-in-the-middle","probabilities"]},{"ContestId":1840,"Index":"G1","Name":"In Search of Truth (Easy Version)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms","interactive","math","meet-in-the-middle","probabilities"]},{"ContestId":1840,"Index":"F","Name":"Railguns","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","dfs and similar","dp","graphs"]},{"ContestId":1840,"Index":"E","Name":"Character Blocking","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","hashing","implementation"]},{"ContestId":1840,"Index":"D","Name":"Wooden Toy Festival","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","greedy","sortings"]},{"ContestId":1840,"Index":"C","Name":"Ski Resort","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["combinatorics","math","two pointers"]},{"ContestId":1840,"Index":"B","Name":"Binary Cafe","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["bitmasks","combinatorics","math"]},{"ContestId":1840,"Index":"A","Name":"Cipher Shifer","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings","two pointers"]},{"ContestId":1839,"Index":"E","Name":"Decreasing Game","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["constructive algorithms","dfs and similar","dp","greedy","interactive"]},{"ContestId":1839,"Index":"D","Name":"Ball Sorting","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["data structures","dp","sortings"]},{"ContestId":1839,"Index":"C","Name":"Insert Zero and Invert Prefix","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":1839,"Index":"B","Name":"Lamps","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":1839,"Index":"A","Name":"The Good Array","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":1838,"Index":"F","Name":"Stuck Conveyor","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["binary search","constructive algorithms","interactive"]},{"ContestId":1838,"Index":"E","Name":"Count Supersequences","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["combinatorics","dp","math"]},{"ContestId":1838,"Index":"D","Name":"Bracket Walk","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["data structures","greedy","strings"]},{"ContestId":1838,"Index":"C","Name":"No Prime Differences","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1838,"Index":"B","Name":"Minimize Permutation Subarrays","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":1838,"Index":"A","Name":"Blackboard List","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1837,"Index":"F","Name":"Editorial for Two","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","data structures","greedy","implementation"]},{"ContestId":1837,"Index":"E","Name":"Playoff Fixing","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["combinatorics","trees"]},{"ContestId":1837,"Index":"D","Name":"Bracket Coloring","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1837,"Index":"C","Name":"Best Binary String","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1837,"Index":"B","Name":"Comparison String","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy"]},{"ContestId":1837,"Index":"A","Name":"Grasshopper on a Line","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1836,"Index":"B","Name":"Astrophysicists","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1836,"Index":"A","Name":"Destroyer","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["implementation","sortings"]},{"ContestId":1835,"Index":"F","Name":"Good Graph","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["bitmasks","dfs and similar","graph matchings","graphs","implementation"]},{"ContestId":1835,"Index":"E","Name":"Old Mobile","Type":"PROGRAMMING","Rating":3500,"Points":2250,"Tags":["combinatorics","dp","probabilities"]},{"ContestId":1835,"Index":"D","Name":"Doctor's Brown Hypothesis","Type":"PROGRAMMING","Rating":2900,"Points":1750,"Tags":["dfs and similar","graphs","math","number theory"]},{"ContestId":1835,"Index":"C","Name":"Twin Clusters","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["bitmasks","brute force","constructive algorithms","math","probabilities"]},{"ContestId":1835,"Index":"B","Name":"Lottery","Type":"PROGRAMMING","Rating":2500,"Points":1250,"Tags":["binary search","brute force","greedy","math","two pointers"]},{"ContestId":1835,"Index":"A","Name":"k-th equality","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":1834,"Index":"F","Name":"Typewriter","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["brute force","math"]},{"ContestId":1834,"Index":"E","Name":"MEX of LCM","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["binary search","data structures","implementation","math","number theory"]},{"ContestId":1834,"Index":"D","Name":"Survey in Class","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["brute force","data structures","greedy","implementation","sortings"]},{"ContestId":1834,"Index":"C","Name":"Game with Reversing","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["games","greedy","math","strings"]},{"ContestId":1834,"Index":"B","Name":"Maximum Strength","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1834,"Index":"A","Name":"Unit Array","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1833,"Index":"G","Name":"Ksyusha and Chinchilla","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","dfs and similar","dp","dsu","greedy","implementation","trees"]},{"ContestId":1833,"Index":"F","Name":"Ira and Flamenco","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["combinatorics","constructive algorithms","data structures","implementation","math","sortings","two pointers"]},{"ContestId":1833,"Index":"E","Name":"Round Dance","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dfs and similar","dsu","graphs","shortest paths"]},{"ContestId":1833,"Index":"D","Name":"Flipper","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":1833,"Index":"C","Name":"Vlad Building Beautiful Array","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1833,"Index":"B","Name":"Restore the Weather","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1833,"Index":"A","Name":"Musical Puzzle","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1832,"Index":"F","Name":"Zombies","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["binary search","dp"]},{"ContestId":1832,"Index":"E","Name":"Combinatorics Problem","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","combinatorics","dp"]},{"ContestId":1832,"Index":"D2","Name":"Red-Blue Operations (Hard Version)","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","constructive algorithms","greedy","implementation","math"]},{"ContestId":1832,"Index":"D1","Name":"Red-Blue Operations (Easy Version)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","greedy","implementation","math"]},{"ContestId":1832,"Index":"C","Name":"Contrast Value","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1832,"Index":"B","Name":"Maximum Sum","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","sortings","two pointers"]},{"ContestId":1832,"Index":"A","Name":"New Palindrome","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["strings"]},{"ContestId":1831,"Index":"B","Name":"Array merging","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["constructive algorithms","greedy"]},{"ContestId":1831,"Index":"A","Name":"Twin Permutations","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":1830,"Index":"F","Name":"The Third Grace","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["data structures","dp"]},{"ContestId":1830,"Index":"E","Name":"Bully Sort","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["data structures","math"]},{"ContestId":1830,"Index":"D","Name":"Mex Tree","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["brute force","dp","trees"]},{"ContestId":1830,"Index":"C","Name":"Hyperregular Bracket Strings","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["combinatorics","greedy","hashing","math","number theory","sortings"]},{"ContestId":1830,"Index":"B","Name":"The BOSS Can Count Pairs","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["brute force","math"]},{"ContestId":1830,"Index":"A","Name":"Copil Copac Draws Trees","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":1829,"Index":"H","Name":"Don't Blame Me","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["bitmasks","combinatorics","dp","math"]},{"ContestId":1829,"Index":"G","Name":"Hits Different","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","dp","implementation","math"]},{"ContestId":1829,"Index":"F","Name":"Forever Winter","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dfs and similar","graphs","math"]},{"ContestId":1829,"Index":"E","Name":"The Lakes","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["dfs and similar","dsu","graphs","implementation"]},{"ContestId":1829,"Index":"D","Name":"Gold Rush","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","dfs and similar","dp","implementation"]},{"ContestId":1829,"Index":"C","Name":"Mr. Perfectly Fine","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["bitmasks","greedy","implementation"]},{"ContestId":1829,"Index":"B","Name":"Blank Space","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1829,"Index":"A","Name":"Love Story","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1828,"Index":"B","Name":"Permutation Swap","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["math","number theory"]},{"ContestId":1828,"Index":"A","Name":"Divisible Array","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1827,"Index":"F","Name":"Copium Permutation","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":1827,"Index":"E","Name":"Bus Routes","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["binary search","constructive algorithms","dfs and similar","greedy","trees"]},{"ContestId":1827,"Index":"D","Name":"Two Centroids","Type":"PROGRAMMING","Rating":2800,"Points":1750,"Tags":["data structures","dfs and similar","greedy","trees"]},{"ContestId":1827,"Index":"C","Name":"Palindrome Partition","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["binary search","brute force","data structures","dp","hashing","strings"]},{"ContestId":1827,"Index":"B2","Name":"Range Sorting (Hard Version)","Type":"PROGRAMMING","Rating":2400,"Points":750,"Tags":["binary search","data structures","dp","greedy"]},{"ContestId":1827,"Index":"B1","Name":"Range Sorting (Easy Version)","Type":"PROGRAMMING","Rating":2000,"Points":750,"Tags":["binary search","dp","dsu","greedy","trees","two pointers"]},{"ContestId":1827,"Index":"A","Name":"Counting Orders","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["combinatorics","math","sortings","two pointers"]},{"ContestId":1826,"Index":"F","Name":"Fading into Fog","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["geometry","interactive","math","probabilities"]},{"ContestId":1826,"Index":"E","Name":"Walk the Runway","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["bitmasks","brute force","data structures","dp","graphs","implementation","sortings"]},{"ContestId":1826,"Index":"D","Name":"Running Miles","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["brute force","dp","greedy"]},{"ContestId":1826,"Index":"C","Name":"Dreaming of Freedom","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["greedy","math","number theory"]},{"ContestId":1826,"Index":"B","Name":"Lunatic Never Content","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["math","number theory"]},{"ContestId":1826,"Index":"A","Name":"Trust Nobody","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","greedy","implementation","sortings"]},{"ContestId":1825,"Index":"B","Name":"LuoTianyi and the Table","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1825,"Index":"A","Name":"LuoTianyi and the Palindrome String","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","strings"]},{"ContestId":1824,"Index":"E","Name":"LuoTianyi and Cartridge","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["data structures","trees"]},{"ContestId":1824,"Index":"D","Name":"LuoTianyi and the Function","Type":"PROGRAMMING","Rating":3000,"Points":2250,"Tags":["data structures"]},{"ContestId":1824,"Index":"C","Name":"LuoTianyi and XOR-Tree","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["data structures","dfs and similar","dp","dsu","greedy","trees"]},{"ContestId":1824,"Index":"B2","Name":"LuoTianyi and the Floating Islands (Hard Version)","Type":"PROGRAMMING","Rating":2300,"Points":750,"Tags":["combinatorics","dfs and similar","math","probabilities","trees"]},{"ContestId":1824,"Index":"B1","Name":"LuoTianyi and the Floating Islands (Easy Version)","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["combinatorics","math","probabilities","trees"]},{"ContestId":1824,"Index":"A","Name":"LuoTianyi and the Show","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1823,"Index":"F","Name":"Random Walk","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["dp","graphs","math","probabilities","trees"]},{"ContestId":1823,"Index":"E","Name":"Removing Graph","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["brute force","dp","games","graphs","math"]},{"ContestId":1823,"Index":"D","Name":"Unique Palindromes","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms","math","strings"]},{"ContestId":1823,"Index":"C","Name":"Strongly Composite","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["greedy","math","number theory"]},{"ContestId":1823,"Index":"B","Name":"Sort with Step","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["brute force","math","sortings"]},{"ContestId":1823,"Index":"A","Name":"A-characteristic","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["combinatorics","constructive algorithms","math"]},{"ContestId":1822,"Index":"G2","Name":"Magic Triples (Hard Version)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","data structures","math","number theory"]},{"ContestId":1822,"Index":"G1","Name":"Magic Triples (Easy Version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","data structures","math","number theory"]},{"ContestId":1822,"Index":"F","Name":"Gardening Friends","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","dfs and similar","dp","graphs","trees"]},{"ContestId":1822,"Index":"E","Name":"Making Anti-Palindromes","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy","math","strings"]},{"ContestId":1822,"Index":"D","Name":"Super-Permutation","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1822,"Index":"C","Name":"Bun Lover","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1822,"Index":"B","Name":"Karina and Array","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math","sortings"]},{"ContestId":1822,"Index":"A","Name":"TubeTube Feed","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1821,"Index":"F","Name":"Timber","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["combinatorics","dp","fft","math"]},{"ContestId":1821,"Index":"E","Name":"Rearrange Brackets","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","dp","greedy","sortings","strings"]},{"ContestId":1821,"Index":"D","Name":"Black Cells","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","brute force","greedy","math"]},{"ContestId":1821,"Index":"C","Name":"Tear It Apart","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","implementation","math","strings"]},{"ContestId":1821,"Index":"B","Name":"Sort the Subarray","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","greedy"]},{"ContestId":1821,"Index":"A","Name":"Matching","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":1820,"Index":"B","Name":"JoJo's Incredible Adventures","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["math","strings","two pointers"]},{"ContestId":1820,"Index":"A","Name":"Yura's New Name","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1819,"Index":"F","Name":"Willy-nilly, Crack, Into Release!","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["data structures","dp"]},{"ContestId":1819,"Index":"E","Name":"Roads in E City","Type":"PROGRAMMING","Rating":3200,"Points":2750,"Tags":["interactive","math","probabilities","trees"]},{"ContestId":1819,"Index":"D","Name":"Misha and Apples","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["brute force","data structures","dp","two pointers"]},{"ContestId":1819,"Index":"C","Name":"The Fox and the Complete Tree Traversal","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["constructive algorithms","dp","implementation","math","trees"]},{"ContestId":1819,"Index":"B","Name":"The Butcher","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["geometry","greedy","implementation","sortings","two pointers"]},{"ContestId":1819,"Index":"A","Name":"Constructive Problem","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["brute force","greedy"]},{"ContestId":1818,"Index":"B","Name":"Indivisible","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":1818,"Index":"A","Name":"Politics","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1817,"Index":"F","Name":"Entangled Substrings","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["string suffix structures","strings"]},{"ContestId":1817,"Index":"E","Name":"Half-sum","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["brute force","divide and conquer","greedy"]},{"ContestId":1817,"Index":"D","Name":"Toy Machine","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["constructive algorithms","games","implementation"]},{"ContestId":1817,"Index":"C","Name":"Similar Polynomials","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["combinatorics","math"]},{"ContestId":1817,"Index":"B","Name":"Fish Graph","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["brute force","constructive algorithms","dfs and similar","graphs"]},{"ContestId":1817,"Index":"A","Name":"Almost Increasing Subsequence","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["binary search","data structures","greedy"]},{"ContestId":1816,"Index":"B","Name":"Grid Reconstruction","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","greedy"]},{"ContestId":1816,"Index":"A","Name":"Ian Visits Mary","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","geometry","number theory"]},{"ContestId":1815,"Index":"F","Name":"OH NO1 (-2-3-4)","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["constructive algorithms","graphs","math"]},{"ContestId":1815,"Index":"E","Name":"Bosco and Particle","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["dp","math","number theory","strings"]},{"ContestId":1815,"Index":"D","Name":"XOR Counting","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["bitmasks","combinatorics","dp","math"]},{"ContestId":1815,"Index":"C","Name":"Between","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"ContestId":1815,"Index":"B","Name":"Sum Graph","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["brute force","constructive algorithms","graphs","implementation","interactive","shortest paths","trees"]},{"ContestId":1815,"Index":"A","Name":"Ian and Array Sorting","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["greedy","math"]},{"ContestId":1814,"Index":"F","Name":"Communication Towers","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["brute force","divide and conquer","dsu"]},{"ContestId":1814,"Index":"E","Name":"Chain Chips","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","dp","matrices"]},{"ContestId":1814,"Index":"D","Name":"Balancing Weapons","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["binary search","brute force","data structures","math","two pointers"]},{"ContestId":1814,"Index":"C","Name":"Search in Parallel","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":1814,"Index":"B","Name":"Long Legs","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","math"]},{"ContestId":1814,"Index":"A","Name":"Coins","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1812,"Index":"J","Name":"Unmysterious Language","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","constructive algorithms","strings"]},{"ContestId":1812,"Index":"I","Name":"Mountain Climber","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1812,"Index":"H","Name":"Expected Twist","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","interactive"]},{"ContestId":1812,"Index":"G","Name":"Colour Vision","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1812,"Index":"F","Name":"Factorization","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","number theory"]},{"ContestId":1812,"Index":"E","Name":"Not a Geometry Problem","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","*special","constructive algorithms","geometry","math"]},{"ContestId":1812,"Index":"D","Name":"Trivial Conjecture","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","constructive algorithms","math","number theory"]},{"ContestId":1812,"Index":"C","Name":"Digits","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1812,"Index":"B","Name":"Was it Rated?","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","*special","*special","brute force","implementation"]},{"ContestId":1812,"Index":"A","Name":"Are You a Robot?","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","*special","*special","expression parsing","strings"]},{"ContestId":1811,"Index":"G2","Name":"Vlad and the Nice Paths (hard version)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","combinatorics","data structures","dp","math","two pointers"]},{"ContestId":1811,"Index":"G1","Name":"Vlad and the Nice Paths (easy version)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","dp","math"]},{"ContestId":1811,"Index":"F","Name":"Is It Flower?","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dfs and similar","graphs","implementation"]},{"ContestId":1811,"Index":"E","Name":"Living Sequence","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","dp","math","number theory"]},{"ContestId":1811,"Index":"D","Name":"Umka and a Long Flight","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":1811,"Index":"C","Name":"Restore the Array","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1811,"Index":"B","Name":"Conveyor Belts","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","math"]},{"ContestId":1811,"Index":"A","Name":"Insert Digit","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math","strings"]},{"ContestId":1810,"Index":"H","Name":"Last Number","Type":"PROGRAMMING","Rating":2900,"Points":3500,"Tags":["combinatorics","math"]},{"ContestId":1810,"Index":"G","Name":"The Maximum Prefix","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["dp"]},{"ContestId":1810,"Index":"F","Name":"M-tree","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["data structures","math","sortings","trees"]},{"ContestId":1810,"Index":"E","Name":"Monsters","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["brute force","data structures","dfs and similar","dsu","graphs","greedy"]},{"ContestId":1810,"Index":"D","Name":"Climbing the Tree","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["binary search","math"]},{"ContestId":1810,"Index":"C","Name":"Make It Permutation","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","greedy","sortings"]},{"ContestId":1810,"Index":"B","Name":"Candies","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1810,"Index":"A","Name":"Beautiful Sequence","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":1809,"Index":"G","Name":"Prediction","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["combinatorics","dp","math"]},{"ContestId":1809,"Index":"F","Name":"Traveling in Berland","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["binary search","data structures","graphs","greedy","implementation"]},{"ContestId":1809,"Index":"E","Name":"Two Tanks","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","dp","implementation","math"]},{"ContestId":1809,"Index":"D","Name":"Binary String Sorting","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1809,"Index":"C","Name":"Sum on Subarrays","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1809,"Index":"B","Name":"Points on Plane","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["binary search","greedy","math"]},{"ContestId":1809,"Index":"A","Name":"Garland","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1808,"Index":"E3","Name":"Minibuses on Venus (hard version)","Type":"PROGRAMMING","Rating":2800,"Points":750,"Tags":["brute force","combinatorics","dp","math"]},{"ContestId":1808,"Index":"E2","Name":"Minibuses on Venus (medium version)","Type":"PROGRAMMING","Rating":2500,"Points":1000,"Tags":["combinatorics","divide and conquer","dp","matrices"]},{"ContestId":1808,"Index":"E1","Name":"Minibuses on Venus (easy version)","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["combinatorics","divide and conquer","dp"]},{"ContestId":1808,"Index":"D","Name":"Petya, Petya, Petr, and Palindromes","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["binary search","brute force","data structures","two pointers"]},{"ContestId":1808,"Index":"C","Name":"Unlucky Numbers","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","dp","greedy","implementation"]},{"ContestId":1808,"Index":"B","Name":"Playing in a Casino","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["math","sortings"]},{"ContestId":1808,"Index":"A","Name":"Lucky Numbers","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["brute force","implementation"]},{"ContestId":1807,"Index":"G2","Name":"Subsequence Addition (Hard Version)","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["bitmasks","dp","greedy","implementation","sortings"]},{"ContestId":1807,"Index":"G1","Name":"Subsequence Addition (Easy Version)","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","data structures","dp","greedy","implementation","sortings"]},{"ContestId":1807,"Index":"F","Name":"Bouncy Ball","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","dfs and similar","implementation"]},{"ContestId":1807,"Index":"E","Name":"Interview","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","implementation","interactive"]},{"ContestId":1807,"Index":"D","Name":"Odd Queries","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1807,"Index":"C","Name":"Find and Replace","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation","strings"]},{"ContestId":1807,"Index":"B","Name":"Grab the Candies","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1807,"Index":"A","Name":"Plus or Minus","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1806,"Index":"F2","Name":"GCD Master (hard version)","Type":"PROGRAMMING","Rating":2900,"Points":1500,"Tags":["greedy","math","sortings"]},{"ContestId":1806,"Index":"F1","Name":"GCD Master (easy version)","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["greedy","math","number theory","sortings"]},{"ContestId":1806,"Index":"E","Name":"Tree Master","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["brute force","data structures","dfs and similar","trees"]},{"ContestId":1806,"Index":"D","Name":"DSU Master","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["combinatorics","dp","dsu","math"]},{"ContestId":1806,"Index":"C","Name":"Sequence Master","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":1806,"Index":"B","Name":"Mex Master","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["constructive algorithms","greedy"]},{"ContestId":1806,"Index":"A","Name":"Walking Master","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["geometry","greedy","math"]},{"ContestId":1805,"Index":"F2","Name":"Survival of the Weakest (hard version)","Type":"PROGRAMMING","Rating":3100,"Points":1750,"Tags":["greedy","math","sortings","two pointers"]},{"ContestId":1805,"Index":"F1","Name":"Survival of the Weakest (easy version)","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["binary search","brute force","implementation","math","sortings"]},{"ContestId":1805,"Index":"E","Name":"There Should Be a Lot of Maximums","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["brute force","data structures","dfs and similar","dp","trees","two pointers"]},{"ContestId":1805,"Index":"D","Name":"A Wide, Wide Graph","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["dfs and similar","dp","graphs","greedy","trees"]},{"ContestId":1805,"Index":"C","Name":"Place for a Selfie","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["binary search","data structures","geometry","math"]},{"ContestId":1805,"Index":"B","Name":"The String Has a Target","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["greedy","strings"]},{"ContestId":1805,"Index":"A","Name":"We Need the Zero","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["bitmasks","brute force"]},{"ContestId":1804,"Index":"H","Name":"Code Lock","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["bitmasks","dp"]},{"ContestId":1804,"Index":"G","Name":"Flow Control","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["data structures","dsu","implementation"]},{"ContestId":1804,"Index":"F","Name":"Approximate Diameter","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["binary search","divide and conquer","graphs","shortest paths"]},{"ContestId":1804,"Index":"E","Name":"Routing","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["bitmasks","brute force","dfs and similar","dp","graphs"]},{"ContestId":1804,"Index":"D","Name":"Accommodation","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["brute force","dp","greedy","implementation"]},{"ContestId":1804,"Index":"C","Name":"Pull Your Luck","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","greedy","math","number theory"]},{"ContestId":1804,"Index":"B","Name":"Vaccination","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1804,"Index":"A","Name":"Lame King","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1802,"Index":"B","Name":"Settlement of Guinea Pigs","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["greedy","implementation","math"]},{"ContestId":1802,"Index":"A","Name":"Likes","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1801,"Index":"G","Name":"A task for substrings","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["data structures","string suffix structures","strings"]},{"ContestId":1801,"Index":"F","Name":"Another n-dimensional chocolate bar","Type":"PROGRAMMING","Rating":2700,"Points":3500,"Tags":["dp","math","meet-in-the-middle","number theory"]},{"ContestId":1801,"Index":"E","Name":"Gasoline prices","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["data structures","divide and conquer","dsu","hashing","trees"]},{"ContestId":1801,"Index":"D","Name":"The way home","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["binary search","data structures","dp","graphs","greedy","shortest paths","sortings"]},{"ContestId":1801,"Index":"C","Name":"Music Festival","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["binary search","data structures","dp","greedy","sortings"]},{"ContestId":1801,"Index":"B","Name":"Buying gifts","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["data structures","greedy","sortings"]},{"ContestId":1801,"Index":"A","Name":"The Very Beautiful Blanket","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":1800,"Index":"G","Name":"Symmetree","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dfs and similar","hashing","implementation","trees"]},{"ContestId":1800,"Index":"F","Name":"Dasha and Nightmares","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["bitmasks","hashing","meet-in-the-middle","strings"]},{"ContestId":1800,"Index":"E2","Name":"Unforgivable Curse (hard version)","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","greedy","strings"]},{"ContestId":1800,"Index":"E1","Name":"Unforgivable Curse (easy version)","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","constructive algorithms","dsu","graphs","greedy","strings"]},{"ContestId":1800,"Index":"D","Name":"Remove Two Letters","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["data structures","greedy","hashing","strings"]},{"ContestId":1800,"Index":"C2","Name":"Powering the Hero (hard version)","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1800,"Index":"C1","Name":"Powering the Hero (easy version)","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1800,"Index":"B","Name":"Count the Number of Pairs","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","strings"]},{"ContestId":1800,"Index":"A","Name":"Is It a Cat?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1799,"Index":"H","Name":"Tree Cutting","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["bitmasks","dfs and similar","dp"]},{"ContestId":1799,"Index":"G","Name":"Count Voting","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["combinatorics","dp","math"]},{"ContestId":1799,"Index":"F","Name":"Halve or Subtract","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["binary search","brute force","dp","greedy","sortings"]},{"ContestId":1799,"Index":"E","Name":"City Union","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["constructive algorithms","dfs and similar","dsu","geometry","greedy","implementation","math"]},{"ContestId":1799,"Index":"D2","Name":"Hot Start Up (hard version)","Type":"PROGRAMMING","Rating":2100,"Points":750,"Tags":["data structures","dp"]},{"ContestId":1799,"Index":"D1","Name":"Hot Start Up (easy version)","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["dp"]},{"ContestId":1799,"Index":"C","Name":"Double Lexicographically Minimum","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["greedy","strings"]},{"ContestId":1799,"Index":"B","Name":"Equalize by Divide","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","constructive algorithms","greedy","math"]},{"ContestId":1799,"Index":"A","Name":"Recent Actions","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["data structures","greedy","implementation","math"]},{"ContestId":1798,"Index":"F","Name":"Gifts from Grandfather Ahmed","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["dp","math","number theory"]},{"ContestId":1798,"Index":"E","Name":"Multitest Generator","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["brute force","dp"]},{"ContestId":1798,"Index":"D","Name":"Shocking Arrangement","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1798,"Index":"C","Name":"Candy Store","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["greedy","math","number theory"]},{"ContestId":1798,"Index":"B","Name":"Three Sevens","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["brute force","data structures","greedy","implementation"]},{"ContestId":1798,"Index":"A","Name":"Showstopper","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":1797,"Index":"F","Name":"Li Hua and Path","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["data structures","dfs and similar","divide and conquer","dsu","trees"]},{"ContestId":1797,"Index":"E","Name":"Li Hua and Array","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["brute force","data structures","dsu","math","number theory","two pointers"]},{"ContestId":1797,"Index":"D","Name":"Li Hua and Tree","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["brute force","data structures","dfs and similar","dp","implementation","trees"]},{"ContestId":1797,"Index":"C","Name":"Li Hua and Chess","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","greedy","interactive"]},{"ContestId":1797,"Index":"B","Name":"Li Hua and Pattern","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","greedy"]},{"ContestId":1797,"Index":"A","Name":"Li Hua and Maze","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","flows","graphs","greedy","implementation"]},{"ContestId":1796,"Index":"F","Name":"Strange Triples","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":1796,"Index":"E","Name":"Colored Subgraphs","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dfs and similar","dp","games","greedy","trees"]},{"ContestId":1796,"Index":"D","Name":"Maximum Subarray","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","dp","greedy","two pointers"]},{"ContestId":1796,"Index":"C","Name":"Maximum Set","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","math"]},{"ContestId":1796,"Index":"B","Name":"Asterisk-Minor Template","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1796,"Index":"A","Name":"Typical Interview Problem","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation","strings"]},{"ContestId":1795,"Index":"G","Name":"Removal Sequences","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["bitmasks","dfs and similar","graphs"]},{"ContestId":1795,"Index":"F","Name":"Blocking Chips","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","constructive algorithms","dfs and similar","greedy","trees"]},{"ContestId":1795,"Index":"E","Name":"Explosions?","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","data structures","dp","greedy","math"]},{"ContestId":1795,"Index":"D","Name":"Triangle Coloring","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":1795,"Index":"C","Name":"Tea Tasting","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","data structures","implementation"]},{"ContestId":1795,"Index":"B","Name":"Ideal Point","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","geometry","greedy"]},{"ContestId":1795,"Index":"A","Name":"Two Towers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation","strings"]},{"ContestId":1794,"Index":"E","Name":"Labeling the Tree with Distances","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["data structures","dp","greedy","hashing","implementation","trees"]},{"ContestId":1794,"Index":"D","Name":"Counting Factorizations","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["combinatorics","divide and conquer","dp","math","number theory"]},{"ContestId":1794,"Index":"C","Name":"Scoring Subsequences","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["binary search","greedy","math","two pointers"]},{"ContestId":1794,"Index":"B","Name":"Not Dividing","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1794,"Index":"A","Name":"Prefix and Suffix Array","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["strings"]},{"ContestId":1793,"Index":"F","Name":"Rebrending","Type":"PROGRAMMING","Rating":2600,"Points":3250,"Tags":["brute force","data structures","divide and conquer","implementation"]},{"ContestId":1793,"Index":"E","Name":"Velepin and Marketing","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["binary search","data structures","dp","greedy","sortings","two pointers"]},{"ContestId":1793,"Index":"D","Name":"Moscow Gorillas","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["binary search","dp","greedy","implementation","math","two pointers"]},{"ContestId":1793,"Index":"C","Name":"Dora and Search","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["constructive algorithms","data structures","two pointers"]},{"ContestId":1793,"Index":"B","Name":"Fedya and Array","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":1793,"Index":"A","Name":"Yet Another Promotion","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1792,"Index":"F2","Name":"Graph Coloring (hard version)","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["brute force","combinatorics","divide and conquer","dp","fft","graphs"]},{"ContestId":1792,"Index":"F1","Name":"Graph Coloring (easy version)","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["combinatorics","dp","graphs"]},{"ContestId":1792,"Index":"E","Name":"Divisors and Table","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","dfs and similar","dp","number theory"]},{"ContestId":1792,"Index":"D","Name":"Fixed Prefix Permutations","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","bitmasks","data structures","hashing","math","sortings"]},{"ContestId":1792,"Index":"C","Name":"Min Max Sort","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","brute force","greedy","math","two pointers"]},{"ContestId":1792,"Index":"B","Name":"Stand-up Comedian","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","math"]},{"ContestId":1792,"Index":"A","Name":"GamingForces","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1791,"Index":"G2","Name":"Teleporters (Hard Version)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","greedy","sortings"]},{"ContestId":1791,"Index":"G1","Name":"Teleporters (Easy Version)","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1791,"Index":"F","Name":"Range Update Point Query","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","brute force","data structures"]},{"ContestId":1791,"Index":"E","Name":"Negatives and Positives","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["dp","greedy","sortings"]},{"ContestId":1791,"Index":"D","Name":"Distinct Split","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","greedy","strings"]},{"ContestId":1791,"Index":"C","Name":"Prepend and Append","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","two pointers"]},{"ContestId":1791,"Index":"B","Name":"Following Directions","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["geometry","implementation"]},{"ContestId":1791,"Index":"A","Name":"Codeforces Checking","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1790,"Index":"G","Name":"Tokens on Graph","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["constructive algorithms","dfs and similar","graphs","shortest paths"]},{"ContestId":1790,"Index":"F","Name":"Timofey and Black-White Tree","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","dfs and similar","divide and conquer","graphs","greedy","math","shortest paths","trees"]},{"ContestId":1790,"Index":"E","Name":"Vlad and a Pair of Numbers","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":1790,"Index":"D","Name":"Matryoshkas","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["data structures","greedy","sortings"]},{"ContestId":1790,"Index":"C","Name":"Premutation","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","implementation","math"]},{"ContestId":1790,"Index":"B","Name":"Taisia and Dice","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","greedy","math"]},{"ContestId":1790,"Index":"A","Name":"Polycarp and the Day of Pi","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math","strings"]},{"ContestId":1789,"Index":"F","Name":"Serval and Brain Power","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["bitmasks","brute force","dp","greedy","implementation","strings"]},{"ContestId":1789,"Index":"E","Name":"Serval and Music Game","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["brute force","dp","implementation","math","number theory"]},{"ContestId":1789,"Index":"D","Name":"Serval and Shift-Shift-Shift","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["bitmasks","brute force","constructive algorithms","implementation"]},{"ContestId":1789,"Index":"C","Name":"Serval and Toxel's Arrays","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["combinatorics","dp","implementation","math"]},{"ContestId":1789,"Index":"B","Name":"Serval and Inversion Magic","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["brute force","implementation","strings","two pointers"]},{"ContestId":1789,"Index":"A","Name":"Serval and Mocha's Array","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","math","number theory"]},{"ContestId":1788,"Index":"F","Name":"XOR, Tree, and Queries","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["bitmasks","constructive algorithms","dfs and similar","dsu","graphs","greedy","implementation","trees"]},{"ContestId":1788,"Index":"E","Name":"Sum Over Zero","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["data structures","dfs and similar","dp"]},{"ContestId":1788,"Index":"D","Name":"Moving Dots","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["binary search","brute force","combinatorics","math","two pointers"]},{"ContestId":1788,"Index":"C","Name":"Matching Numbers","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1788,"Index":"B","Name":"Sum of Two Numbers","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","greedy","implementation","math","probabilities"]},{"ContestId":1788,"Index":"A","Name":"One and Two","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":1787,"Index":"I","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":3400,"Points":3750,"Tags":["data structures","divide and conquer","two pointers"]},{"ContestId":1787,"Index":"H","Name":"Codeforces Scoreboard","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["binary search","data structures","dp","geometry"]},{"ContestId":1787,"Index":"G","Name":"Colorful Tree Again","Type":"PROGRAMMING","Rating":3000,"Points":3250,"Tags":["brute force","data structures","trees"]},{"ContestId":1787,"Index":"F","Name":"Inverse Transformation","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":1787,"Index":"E","Name":"The Harmonization of XOR","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["bitmasks","constructive algorithms","greedy","math"]},{"ContestId":1787,"Index":"D","Name":"Game on Axis","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["combinatorics","dfs and similar","dsu","graphs","implementation"]},{"ContestId":1787,"Index":"C","Name":"Remove the Bracket","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["dp","greedy","math"]},{"ContestId":1787,"Index":"B","Name":"Number Factorization","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","math","number theory"]},{"ContestId":1787,"Index":"A","Name":"Exponential Equation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1786,"Index":"B","Name":"Cake Assembly Line","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","sortings"]},{"ContestId":1786,"Index":"A2","Name":"Alternating Deck (hard version)","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1786,"Index":"A1","Name":"Non-alternating Deck (easy version)","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1784,"Index":"F","Name":"Minimums or Medians","Type":"PROGRAMMING","Rating":3400,"Points":4000,"Tags":[]},{"ContestId":1784,"Index":"E","Name":"Infinite Game","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["brute force","combinatorics","dp","games","probabilities"]},{"ContestId":1784,"Index":"D","Name":"Wooden Spoon","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["combinatorics","dp"]},{"ContestId":1784,"Index":"C","Name":"Monsters (hard version)","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["data structures","greedy"]},{"ContestId":1784,"Index":"B","Name":"Letter Exchange","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["constructive algorithms"]},{"ContestId":1784,"Index":"A","Name":"Monsters (easy version)","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":1783,"Index":"G","Name":"Weighed Tree Radius","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["data structures","divide and conquer","implementation","trees"]},{"ContestId":1783,"Index":"F","Name":"Double Sort II","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dfs and similar","flows","graph matchings","graphs"]},{"ContestId":1783,"Index":"E","Name":"Game of the Year","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["brute force","data structures","math","number theory"]},{"ContestId":1783,"Index":"D","Name":"Different Arrays","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","dp","implementation"]},{"ContestId":1783,"Index":"C","Name":"Yet Another Tournament","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","greedy","sortings"]},{"ContestId":1783,"Index":"B","Name":"Matrix of Differences","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1783,"Index":"A","Name":"Make it Beautiful","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","math","sortings"]},{"ContestId":1781,"Index":"H2","Name":"Window Signals (hard version)","Type":"PROGRAMMING","Rating":3500,"Points":1500,"Tags":[]},{"ContestId":1781,"Index":"H1","Name":"Window Signals (easy version)","Type":"PROGRAMMING","Rating":3200,"Points":3750,"Tags":[]},{"ContestId":1781,"Index":"G","Name":"Diverse Coloring","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["constructive algorithms","trees"]},{"ContestId":1781,"Index":"F","Name":"Bracket Insertion","Type":"PROGRAMMING","Rating":2700,"Points":3250,"Tags":["combinatorics","dp","math","trees"]},{"ContestId":1781,"Index":"E","Name":"Rectangle Shrinking","Type":"PROGRAMMING","Rating":2300,"Points":2750,"Tags":["binary search","brute force","data structures","greedy","implementation","two pointers"]},{"ContestId":1781,"Index":"D","Name":"Many Perfect Squares","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["brute force","math","number theory"]},{"ContestId":1781,"Index":"C","Name":"Equal Frequencies","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","constructive algorithms","greedy","implementation","sortings","strings"]},{"ContestId":1781,"Index":"B","Name":"Going to the Cinema","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["brute force","greedy","sortings"]},{"ContestId":1781,"Index":"A","Name":"Parallel Projection","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["geometry","math"]},{"ContestId":1780,"Index":"G","Name":"Delicious Dessert","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","dsu","hashing","math","number theory","string suffix structures"]},{"ContestId":1780,"Index":"F","Name":"Three Chairs","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["bitmasks","brute force","combinatorics","data structures","dp","number theory","sortings"]},{"ContestId":1780,"Index":"E","Name":"Josuke and Complete Graph","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["binary search","brute force","data structures","math","number theory"]},{"ContestId":1780,"Index":"D","Name":"Bit Guessing Game","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["binary search","bitmasks","constructive algorithms","interactive"]},{"ContestId":1780,"Index":"B","Name":"GCD Partition","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","greedy","math","number theory"]},{"ContestId":1780,"Index":"A","Name":"Hayato and School","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1779,"Index":"H","Name":"Olympic Team Building","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["brute force","meet-in-the-middle"]},{"ContestId":1779,"Index":"G","Name":"The Game of the Century","Type":"PROGRAMMING","Rating":3000,"Points":2750,"Tags":["constructive algorithms","graphs","shortest paths"]},{"ContestId":1779,"Index":"F","Name":"Xorcerer's Stones","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["bitmasks","constructive algorithms","dp","trees"]},{"ContestId":1779,"Index":"E","Name":"Anya's Simultaneous Exhibition","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["constructive algorithms","graphs","greedy","interactive","sortings"]},{"ContestId":1779,"Index":"D","Name":"Boris and His Amazing Haircut","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","data structures","dp","dsu","greedy","sortings"]},{"ContestId":1779,"Index":"C","Name":"Least Prefix Sum","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["data structures","greedy"]},{"ContestId":1779,"Index":"B","Name":"MKnez's ConstructiveForces Task","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["constructive algorithms","math"]},{"ContestId":1779,"Index":"A","Name":"Hall of Fame","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":1778,"Index":"F","Name":"Maximizing Root","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["dfs and similar","dp","graphs","math","number theory","trees"]},{"ContestId":1778,"Index":"E","Name":"The Tree Has Fallen!","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["bitmasks","dfs and similar","math","trees"]},{"ContestId":1778,"Index":"D","Name":"Flexible String Revisit","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":1778,"Index":"C","Name":"Flexible String","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["bitmasks","brute force","strings"]},{"ContestId":1778,"Index":"B","Name":"The Forbidden Permutation","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1778,"Index":"A","Name":"Flip Flop Sum","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1777,"Index":"F","Name":"Comfortably Numb","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["bitmasks","data structures","divide and conquer","strings","trees"]},{"ContestId":1777,"Index":"E","Name":"Edge Reverse","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["binary search","dfs and similar","graphs","trees"]},{"ContestId":1777,"Index":"D","Name":"Score of a Tree","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["bitmasks","combinatorics","dfs and similar","dp","math","probabilities","trees"]},{"ContestId":1777,"Index":"C","Name":"Quiz Master","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","math","number theory","sortings","two pointers"]},{"ContestId":1777,"Index":"B","Name":"Emordnilap","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["combinatorics","greedy","math"]},{"ContestId":1777,"Index":"A","Name":"Everybody Likes Good Arrays!","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1776,"Index":"N","Name":"Count Permutations","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":["math"]},{"ContestId":1776,"Index":"M","Name":"Parmigiana With Seafood","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["binary search","dp","greedy","trees"]},{"ContestId":1776,"Index":"L","Name":"Controllers","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","math"]},{"ContestId":1776,"Index":"K","Name":"Uniform Chemistry","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["dp","math"]},{"ContestId":1776,"Index":"J","Name":"Italian Data Centers","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["graphs","shortest paths"]},{"ContestId":1776,"Index":"I","Name":"Spinach Pizza","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["games","geometry","greedy","interactive"]},{"ContestId":1776,"Index":"H","Name":"Beppa and SwerChat","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["two pointers"]},{"ContestId":1776,"Index":"G","Name":"Another Wine Tasting Event","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","constructive algorithms","math","strings"]},{"ContestId":1776,"Index":"F","Name":"Train Splitting","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","graphs","greedy"]},{"ContestId":1776,"Index":"E","Name":"Crossing the Railways","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":["data structures","dp"]},{"ContestId":1776,"Index":"D","Name":"Teamwork","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1776,"Index":"C","Name":"Library game","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["games","greedy","interactive","sortings"]},{"ContestId":1776,"Index":"B","Name":"Vittorio Plays with LEGO Bricks","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","geometry"]},{"ContestId":1776,"Index":"A","Name":"Walking Boy","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1775,"Index":"F","Name":"Laboratory on Pluto","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["constructive algorithms","dp","greedy","math"]},{"ContestId":1775,"Index":"E","Name":"The Human Equation","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["greedy","implementation"]},{"ContestId":1775,"Index":"D","Name":"Friendly Spiders","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dfs and similar","graphs","math","number theory","shortest paths"]},{"ContestId":1775,"Index":"C","Name":"Interesting Sequence","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["bitmasks","math"]},{"ContestId":1775,"Index":"B","Name":"Gardener and the Array","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":1775,"Index":"A2","Name":"Gardener and the Capybaras (hard version)","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1775,"Index":"A1","Name":"Gardener and the Capybaras (easy version)","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":1774,"Index":"H","Name":"Maximum Permutation","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["constructive algorithms"]},{"ContestId":1774,"Index":"G","Name":"Segment Covering","Type":"PROGRAMMING","Rating":3200,"Points":3250,"Tags":["brute force","combinatorics","constructive algorithms","data structures","dp","trees"]},{"ContestId":1774,"Index":"F2","Name":"Magician and Pigs (Hard Version)","Type":"PROGRAMMING","Rating":2700,"Points":1000,"Tags":["binary search","brute force","data structures","implementation"]},{"ContestId":1774,"Index":"F1","Name":"Magician and Pigs (Easy Version)","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["brute force","data structures","implementation"]},{"ContestId":1774,"Index":"E","Name":"Two Chess Pieces","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dfs and similar","dp","greedy","trees"]},{"ContestId":1774,"Index":"D","Name":"Same Count One","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","constructive algorithms","greedy","implementation","two pointers"]},{"ContestId":1774,"Index":"C","Name":"Ice and Fire","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1774,"Index":"B","Name":"Coloring","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1774,"Index":"A","Name":"Add Plus Minus Sign","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1773,"Index":"L","Name":"Lisa's Sequences","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":["dp"]},{"ContestId":1773,"Index":"K","Name":"King's Puzzle","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1773,"Index":"J","Name":"Jumbled Trees","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1773,"Index":"I","Name":"Interactive Factorial Guessing","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["brute force","games","implementation","interactive"]},{"ContestId":1773,"Index":"H","Name":"Hot and Cold","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["binary search","interactive"]},{"ContestId":1773,"Index":"G","Name":"Game of Questions","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["bitmasks","combinatorics","dp","fft","math","probabilities"]},{"ContestId":1773,"Index":"F","Name":"Football","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1773,"Index":"E","Name":"Easy Assembly","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1773,"Index":"D","Name":"Dominoes","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["combinatorics","flows","graph matchings","greedy"]},{"ContestId":1773,"Index":"C","Name":"Cactus Meets Torus","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":[]},{"ContestId":1773,"Index":"B","Name":"BinCoin","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","divide and conquer","hashing","implementation","probabilities","trees"]},{"ContestId":1773,"Index":"A","Name":"Amazing Trick","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms","graph matchings","math","probabilities"]},{"ContestId":1772,"Index":"G","Name":"Gaining Rating","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","greedy","implementation","math","sortings","two pointers"]},{"ContestId":1772,"Index":"F","Name":"Copy of a Copy of a Copy","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","dfs and similar","graphs","implementation","sortings"]},{"ContestId":1772,"Index":"E","Name":"Permutation Game","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["games"]},{"ContestId":1772,"Index":"D","Name":"Absolute Sorting","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1772,"Index":"C","Name":"Different Differences","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1772,"Index":"B","Name":"Matrix Rotation","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1772,"Index":"A","Name":"A+B?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1771,"Index":"F","Name":"Hossam and Range Minimum Query","Type":"PROGRAMMING","Rating":2500,"Points":3500,"Tags":["binary search","bitmasks","data structures","hashing","probabilities","strings","trees"]},{"ContestId":1771,"Index":"E","Name":"Hossam and a Letter","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["brute force","dp","implementation","two pointers"]},{"ContestId":1771,"Index":"D","Name":"Hossam and (sub-)palindromic tree","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["brute force","data structures","dfs and similar","dp","strings","trees"]},{"ContestId":1771,"Index":"C","Name":"Hossam and Trainees","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["greedy","math","number theory"]},{"ContestId":1771,"Index":"B","Name":"Hossam and Friends","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["binary search","constructive algorithms","dp","two pointers"]},{"ContestId":1771,"Index":"A","Name":"Hossam and Combinatorics","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["combinatorics","math","sortings"]},{"ContestId":1770,"Index":"H","Name":"Koxia, Mahiru and Winter Festival","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["constructive algorithms"]},{"ContestId":1770,"Index":"G","Name":"Koxia and Bracket","Type":"PROGRAMMING","Rating":3400,"Points":3250,"Tags":["divide and conquer","fft","math"]},{"ContestId":1770,"Index":"F","Name":"Koxia and Sequence","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["bitmasks","combinatorics","dp","math","number theory"]},{"ContestId":1770,"Index":"E","Name":"Koxia and Tree","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["combinatorics","dfs and similar","dp","dsu","math","probabilities","trees"]},{"ContestId":1770,"Index":"D","Name":"Koxia and Game","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["constructive algorithms","data structures","dfs and similar","dsu","flows","games","graph matchings","graphs","implementation"]},{"ContestId":1770,"Index":"C","Name":"Koxia and Number Theory","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["brute force","chinese remainder theorem","math","number theory"]},{"ContestId":1770,"Index":"B","Name":"Koxia and Permutation","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["constructive algorithms"]},{"ContestId":1770,"Index":"A","Name":"Koxia and Whiteboards","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":1769,"Index":"D3","Name":"–ò–≥—Ä–∞ –≤ –î–µ–≤—è—Ç–∫—É III","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special","brute force"]},{"ContestId":1769,"Index":"D2","Name":"–ò–≥—Ä–∞ –≤ –î–µ–≤—è—Ç–∫—É II","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special","brute force"]},{"ContestId":1769,"Index":"D1","Name":"–ò–≥—Ä–∞ –≤ –î–µ–≤—è—Ç–∫—É I","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","brute force","dp"]},{"ContestId":1769,"Index":"C2","Name":"–ü–æ–¥–∫—Ä—É—Ç–∫–∞ II","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["*special","dp"]},{"ContestId":1769,"Index":"C1","Name":"–ü–æ–¥–∫—Ä—É—Ç–∫–∞ I","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["*special","brute force","dp","greedy"]},{"ContestId":1769,"Index":"B2","Name":"–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ II","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","binary search","brute force","math"]},{"ContestId":1769,"Index":"B1","Name":"–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ I","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["*special","brute force","implementation","math"]},{"ContestId":1769,"Index":"A","Name":"–£–∑–∫–∞—è –¥–æ—Ä–æ–≥–∞","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["*special","math"]},{"ContestId":1768,"Index":"F","Name":"Wonderful Jump","Type":"PROGRAMMING","Rating":2900,"Points":3250,"Tags":["dp","greedy"]},{"ContestId":1768,"Index":"E","Name":"Partial Sorting","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["combinatorics","math","number theory"]},{"ContestId":1768,"Index":"D","Name":"Lucky Permutation","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"ContestId":1768,"Index":"C","Name":"Elemental Decompress","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["constructive algorithms","greedy","implementation","sortings"]},{"ContestId":1768,"Index":"B","Name":"Quick Sort","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1768,"Index":"A","Name":"Greatest Convex","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math","number theory"]},{"ContestId":1767,"Index":"F","Name":"Two Subtrees","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["data structures","trees"]},{"ContestId":1767,"Index":"E","Name":"Algebra Flash","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["bitmasks","brute force","dp","graphs","math","meet-in-the-middle","trees"]},{"ContestId":1767,"Index":"D","Name":"Playoff","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["combinatorics","constructive algorithms","dp","greedy","math"]},{"ContestId":1767,"Index":"C","Name":"Count Binary Strings","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","dp"]},{"ContestId":1767,"Index":"B","Name":"Block Towers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["data structures","greedy","sortings"]},{"ContestId":1767,"Index":"A","Name":"Cut the Triangle","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1766,"Index":"F","Name":"MCF","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["flows"]},{"ContestId":1766,"Index":"E","Name":"Decomposition","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","brute force","data structures","divide and conquer","dp","two pointers"]},{"ContestId":1766,"Index":"D","Name":"Lucky Chains","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["math","number theory"]},{"ContestId":1766,"Index":"C","Name":"Hamiltonian Wall","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dp","implementation"]},{"ContestId":1766,"Index":"B","Name":"Notepad#","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":1766,"Index":"A","Name":"Extremely Round","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1765,"Index":"N","Name":"Number Reduction","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy"]},{"ContestId":1765,"Index":"M","Name":"Minimum LCM","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["math","number theory"]},{"ContestId":1765,"Index":"L","Name":"Project Manager","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","data structures","implementation"]},{"ContestId":1765,"Index":"K","Name":"Torus Path","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","math"]},{"ContestId":1765,"Index":"J","Name":"Hero to Zero","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["graph matchings","math"]},{"ContestId":1765,"Index":"I","Name":"Infinite Chess","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["implementation","shortest paths"]},{"ContestId":1765,"Index":"H","Name":"Hospital Queue","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","graphs","greedy","implementation"]},{"ContestId":1765,"Index":"G","Name":"Guess the String","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["constructive algorithms","interactive","probabilities"]},{"ContestId":1765,"Index":"F","Name":"Chemistry Lab","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","geometry","probabilities"]},{"ContestId":1765,"Index":"E","Name":"Exchange","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","math"]},{"ContestId":1765,"Index":"D","Name":"Watch the Videos","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","constructive algorithms","two pointers"]},{"ContestId":1765,"Index":"C","Name":"Card Guessing","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["combinatorics","dp","probabilities"]},{"ContestId":1765,"Index":"B","Name":"Broken Keyboard","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1765,"Index":"A","Name":"Access Levels","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["bitmasks","dsu","flows","graph matchings"]},{"ContestId":1764,"Index":"H","Name":"Doremy's Paint 2","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["data structures"]},{"ContestId":1764,"Index":"G3","Name":"Doremy's Perfect DS Class (Hard Version)","Type":"PROGRAMMING","Rating":3300,"Points":500,"Tags":["binary search","interactive"]},{"ContestId":1764,"Index":"G2","Name":"Doremy's Perfect DS Class (Medium Version)","Type":"PROGRAMMING","Rating":3000,"Points":500,"Tags":["binary search","interactive"]},{"ContestId":1764,"Index":"G1","Name":"Doremy's Perfect DS Class (Easy Version)","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["binary search","interactive"]},{"ContestId":1764,"Index":"F","Name":"Doremy's Experimental Tree","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["brute force","constructive algorithms","dfs and similar","dsu","sortings","trees"]},{"ContestId":1764,"Index":"E","Name":"Doremy's Number Line","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["dp","greedy","sortings"]},{"ContestId":1764,"Index":"D","Name":"Doremy's Pegging Game","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["combinatorics","dp","math"]},{"ContestId":1764,"Index":"C","Name":"Doremy's City Construction","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["graphs","greedy"]},{"ContestId":1764,"Index":"B","Name":"Doremy's Perfect Math Class","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["math","number theory"]},{"ContestId":1764,"Index":"A","Name":"Doremy's Paint","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1763,"Index":"F","Name":"Edge Queries","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["data structures","dfs and similar","dp","dsu","graphs","trees"]},{"ContestId":1763,"Index":"E","Name":"Node Pairs","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dp","graphs","math","number theory"]},{"ContestId":1763,"Index":"D","Name":"Valid Bitonic Permutations","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["combinatorics","dp","implementation","math","number theory"]},{"ContestId":1763,"Index":"C","Name":"Another Array Problem","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":1763,"Index":"B","Name":"Incinerate","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["binary search","brute force","data structures","implementation","math","sortings"]},{"ContestId":1763,"Index":"A","Name":"Absolute Maximization","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["bitmasks","constructive algorithms","greedy","math"]},{"ContestId":1762,"Index":"G","Name":"Unequal Adjacent Elements","Type":"PROGRAMMING","Rating":3100,"Points":3500,"Tags":["constructive algorithms","sortings"]},{"ContestId":1762,"Index":"F","Name":"Good Pairs ","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["binary search","data structures","dp"]},{"ContestId":1762,"Index":"E","Name":"Tree Sum","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["combinatorics","math","trees"]},{"ContestId":1762,"Index":"D","Name":"GCD Queries ","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["constructive algorithms","interactive","number theory"]},{"ContestId":1762,"Index":"C","Name":"Binary Strings are Fun","Type":"PROGRAMMING","Rating":1400,"Points":1750,"Tags":["combinatorics","math"]},{"ContestId":1762,"Index":"B","Name":"Make Array Good","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","implementation","number theory","sortings"]},{"ContestId":1762,"Index":"A","Name":"Divide and Conquer","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math","number theory"]},{"ContestId":1761,"Index":"G","Name":"Centroid Guess","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["interactive","probabilities","trees"]},{"ContestId":1761,"Index":"F2","Name":"Anti-median (Hard Version)","Type":"PROGRAMMING","Rating":3500,"Points":2000,"Tags":["combinatorics","dp","math"]},{"ContestId":1761,"Index":"F1","Name":"Anti-median (Easy Version)","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["dp","math"]},{"ContestId":1761,"Index":"E","Name":"Make It Connected","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["binary search","brute force","constructive algorithms","dsu","graphs","greedy","matrices","trees","two pointers"]},{"ContestId":1761,"Index":"D","Name":"Carry Bit","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["combinatorics","math"]},{"ContestId":1761,"Index":"C","Name":"Set Construction","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"ContestId":1761,"Index":"B","Name":"Elimination of a Ring","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1761,"Index":"A","Name":"Two Permutations","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","constructive algorithms"]},{"ContestId":1760,"Index":"G","Name":"SlavicG's Favorite Problem","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["bitmasks","dfs and similar","graphs"]},{"ContestId":1760,"Index":"F","Name":"Quests","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","greedy","sortings"]},{"ContestId":1760,"Index":"E","Name":"Binary Inversions","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["data structures","greedy","math"]},{"ContestId":1760,"Index":"D","Name":"Challenging Valleys","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","two pointers"]},{"ContestId":1760,"Index":"C","Name":"Advantage","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["data structures","implementation","sortings"]},{"ContestId":1760,"Index":"B","Name":"Atilla's Favorite Problem","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation","strings"]},{"ContestId":1760,"Index":"A","Name":"Medium Number","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":1759,"Index":"G","Name":"Restore the Permutation","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","constructive algorithms","data structures","greedy","math"]},{"ContestId":1759,"Index":"F","Name":"All Possible Digits","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","data structures","greedy","math","number theory"]},{"ContestId":1759,"Index":"E","Name":"The Humanoid","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","dp","sortings"]},{"ContestId":1759,"Index":"D","Name":"Make It Round","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","number theory"]},{"ContestId":1759,"Index":"C","Name":"Thermostat","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","math","shortest paths"]},{"ContestId":1759,"Index":"B","Name":"Lost Permutation","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1759,"Index":"A","Name":"Yes-Yes?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1758,"Index":"F","Name":"Decent Division","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["constructive algorithms","data structures"]},{"ContestId":1758,"Index":"E","Name":"Tick, Tock","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["combinatorics","dfs and similar","dsu","graphs"]},{"ContestId":1758,"Index":"D","Name":"Range = ‚àöSum","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["binary search","brute force","constructive algorithms","math","two pointers"]},{"ContestId":1758,"Index":"C","Name":"Almost All Multiples","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy","number theory"]},{"ContestId":1758,"Index":"B","Name":"XOR = Average","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":1758,"Index":"A","Name":"SSeeeeiinngg DDoouubbllee","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","strings"]},{"ContestId":1754,"Index":"B","Name":"Kevin and Permutation","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1754,"Index":"A","Name":"Technical Support","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1753,"Index":"F","Name":"Minecraft Series","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["brute force","two pointers"]},{"ContestId":1753,"Index":"E","Name":"N Machines","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["binary search","brute force","greedy"]},{"ContestId":1753,"Index":"D","Name":"The Beach","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms","dfs and similar","graphs","shortest paths"]},{"ContestId":1753,"Index":"C","Name":"Wish I Knew How to Sort","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["dp","math","probabilities"]},{"ContestId":1753,"Index":"B","Name":"Factorial Divisibility","Type":"PROGRAMMING","Rating":1600,"Points":750,"Tags":["math","number theory"]},{"ContestId":1753,"Index":"A2","Name":"Make Nonzero Sum (hard version)","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1753,"Index":"A1","Name":"Make Nonzero Sum (easy version)","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1750,"Index":"H","Name":"BinaryStringForces","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["constructive algorithms","data structures","dp"]},{"ContestId":1750,"Index":"G","Name":"Doping","Type":"PROGRAMMING","Rating":3300,"Points":3250,"Tags":["combinatorics","dp","math"]},{"ContestId":1750,"Index":"F","Name":"Majority","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["combinatorics","dp","math","strings"]},{"ContestId":1750,"Index":"E","Name":"Bracket Cost","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["binary search","data structures","divide and conquer","dp","greedy","strings"]},{"ContestId":1750,"Index":"D","Name":"Count GCD","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["combinatorics","math","number theory"]},{"ContestId":1750,"Index":"C","Name":"Complementary XOR","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["constructive algorithms","implementation"]},{"ContestId":1750,"Index":"B","Name":"Maximum Substring","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["brute force","greedy","implementation"]},{"ContestId":1750,"Index":"A","Name":"Indirect Sort","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":1749,"Index":"F","Name":"Distance to the Path","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":1749,"Index":"E","Name":"Cactus Wall","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["constructive algorithms","dfs and similar","graphs","shortest paths"]},{"ContestId":1749,"Index":"D","Name":"Counting Arrays","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":1749,"Index":"C","Name":"Number Game","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","data structures","games","greedy","implementation"]},{"ContestId":1749,"Index":"B","Name":"Death's Blessing","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy"]},{"ContestId":1749,"Index":"A","Name":"Cowardly Rooks","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1748,"Index":"F","Name":"Circular Xor Reversal","Type":"PROGRAMMING","Rating":3000,"Points":2750,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":1748,"Index":"E","Name":"Yet Another Array Counting Problem","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["binary search","data structures","divide and conquer","dp","flows","math","trees"]},{"ContestId":1748,"Index":"D","Name":"ConstructOR ","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["bitmasks","chinese remainder theorem","combinatorics","constructive algorithms","math","number theory"]},{"ContestId":1748,"Index":"C","Name":"Zero-Sum Prefixes","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","data structures","dp","greedy","implementation"]},{"ContestId":1748,"Index":"B","Name":"Diverse Substrings","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","implementation","strings"]},{"ContestId":1748,"Index":"A","Name":"The Ultimate Square","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1747,"Index":"E","Name":"List Generation","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["combinatorics","dp","math"]},{"ContestId":1747,"Index":"D","Name":"Yet Another Problem","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["binary search","bitmasks","constructive algorithms","data structures"]},{"ContestId":1747,"Index":"C","Name":"Swap Game","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["games"]},{"ContestId":1747,"Index":"B","Name":"BAN BAN","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":1747,"Index":"A","Name":"Two Groups","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1746,"Index":"G","Name":"Olympiad Training","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["binary search","data structures","dp","flows","geometry","implementation","sortings"]},{"ContestId":1746,"Index":"F","Name":"Kazaee","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["data structures","hashing","probabilities"]},{"ContestId":1746,"Index":"E2","Name":"Joking (Hard Version)","Type":"PROGRAMMING","Rating":3200,"Points":1750,"Tags":["dp","interactive"]},{"ContestId":1746,"Index":"E1","Name":"Joking (Easy Version)","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["binary search","constructive algorithms","interactive","ternary search"]},{"ContestId":1746,"Index":"D","Name":"Paths on the Tree","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["dfs and similar","dp","greedy","sortings","trees"]},{"ContestId":1746,"Index":"C","Name":"Permutation Operations","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1746,"Index":"B","Name":"Rebellion","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["constructive algorithms","greedy","two pointers"]},{"ContestId":1746,"Index":"A","Name":"Maxmina","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1744,"Index":"F","Name":"MEX vs MED","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["math","two pointers"]},{"ContestId":1744,"Index":"E2","Name":"Divisible Numbers (hard version)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":1744,"Index":"E1","Name":"Divisible Numbers (easy version)","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":1744,"Index":"D","Name":"Divisibility by 2^n","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","math","sortings"]},{"ContestId":1744,"Index":"C","Name":"Traffic Light","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["binary search","implementation","two pointers"]},{"ContestId":1744,"Index":"B","Name":"Even-Odd Increments ","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1744,"Index":"A","Name":"Number Replacement","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1743,"Index":"G","Name":"Antifibonacci Cut","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["bitmasks","combinatorics","constructive algorithms","data structures","dp","hashing","math"]},{"ContestId":1743,"Index":"F","Name":"Intersection and Union","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","dp","matrices","probabilities"]},{"ContestId":1743,"Index":"E","Name":"FTL","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","dp"]},{"ContestId":1743,"Index":"D","Name":"Problem with Random Tests","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","dp","greedy","probabilities"]},{"ContestId":1743,"Index":"C","Name":"Save the Magazines","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1743,"Index":"B","Name":"Permutation Value","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1743,"Index":"A","Name":"Password","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","combinatorics","implementation","math"]},{"ContestId":1742,"Index":"G","Name":"Orray","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["bitmasks","brute force","greedy","math","sortings"]},{"ContestId":1742,"Index":"F","Name":"Smaller","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":1742,"Index":"E","Name":"Scuza","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search","greedy","math"]},{"ContestId":1742,"Index":"D","Name":"Coprime","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","greedy","number theory"]},{"ContestId":1742,"Index":"C","Name":"Stripes","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":1742,"Index":"B","Name":"Increasing","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":1742,"Index":"A","Name":"Sum","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1741,"Index":"G","Name":"Kirill and Company","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["bitmasks","brute force","dfs and similar","dp","flows","graphs","shortest paths"]},{"ContestId":1741,"Index":"F","Name":"Multi-Colored Segments","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","data structures","math","sortings"]},{"ContestId":1741,"Index":"E","Name":"Sending a Sequence Over the Network","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dp"]},{"ContestId":1741,"Index":"D","Name":"Masha and a Beautiful Tree","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dfs and similar","divide and conquer","graphs","sortings","trees"]},{"ContestId":1741,"Index":"C","Name":"Minimize the Thickness","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","greedy","math","two pointers"]},{"ContestId":1741,"Index":"B","Name":"Funny Permutation","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1741,"Index":"A","Name":"Compare T-Shirt Sizes","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","implementation","strings"]},{"ContestId":1740,"Index":"I","Name":"Arranging Crystal Balls","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["data structures","divide and conquer","divide and conquer","dp","geometry","graphs","number theory"]},{"ContestId":1740,"Index":"H","Name":"MEX Tree Manipulation","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["data structures","trees"]},{"ContestId":1740,"Index":"G","Name":"Dangerous Laser Power","Type":"PROGRAMMING","Rating":3100,"Points":2750,"Tags":["constructive algorithms","dsu","sortings"]},{"ContestId":1740,"Index":"F","Name":"Conditional Mix","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["combinatorics","dp","math"]},{"ContestId":1740,"Index":"E","Name":"Hanging Hearts","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["constructive algorithms","data structures","dfs and similar","dp","greedy","trees"]},{"ContestId":1740,"Index":"D","Name":"Knowledge Cards","Type":"PROGRAMMING","Rating":1500,"Points":1750,"Tags":["constructive algorithms","data structures"]},{"ContestId":1740,"Index":"C","Name":"Bricks and Bags","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","games","greedy","sortings"]},{"ContestId":1740,"Index":"B","Name":"Jumbo Extra Cheese 2","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["geometry","greedy","sortings"]},{"ContestId":1740,"Index":"A","Name":"Factorise N+M","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","number theory"]},{"ContestId":1739,"Index":"F","Name":"Keyboard Design","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["bitmasks","data structures","dp","string suffix structures","strings"]},{"ContestId":1739,"Index":"E","Name":"Cleaning Robot","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["bitmasks","dp"]},{"ContestId":1739,"Index":"D","Name":"Reset K Edges","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures","dfs and similar","graphs","greedy","trees"]},{"ContestId":1739,"Index":"C","Name":"Card Game","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["combinatorics","constructive algorithms","dp","games"]},{"ContestId":1739,"Index":"B","Name":"Array Recovery","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1739,"Index":"A","Name":"Immobile Knight","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1738,"Index":"H","Name":"Palindrome Addicts","Type":"PROGRAMMING","Rating":3300,"Points":4000,"Tags":["data structures","strings"]},{"ContestId":1738,"Index":"G","Name":"Anti-Increasing Addicts","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["constructive algorithms","dp","greedy","math"]},{"ContestId":1738,"Index":"F","Name":"Connectivity Addicts","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["constructive algorithms","dsu","graphs","greedy","interactive","shortest paths","trees"]},{"ContestId":1738,"Index":"E","Name":"Balance Addicts","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["combinatorics","dp","math","two pointers"]},{"ContestId":1738,"Index":"D","Name":"Permutation Addicts","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms","data structures","dfs and similar","dsu","graphs","trees"]},{"ContestId":1738,"Index":"C","Name":"Even Number Addicts","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["dp","games","greedy","math"]},{"ContestId":1738,"Index":"B","Name":"Prefix Sum Addicts","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","greedy","math","sortings"]},{"ContestId":1738,"Index":"A","Name":"Glory Addicts","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":1737,"Index":"G","Name":"Ela Takes Dancing Class","Type":"PROGRAMMING","Rating":3500,"Points":3750,"Tags":["binary search","data structures"]},{"ContestId":1737,"Index":"F","Name":"Ela and Prime GCD","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1737,"Index":"E","Name":"Ela Goes Hiking","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":1737,"Index":"D","Name":"Ela and the Wiring Wizard","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["brute force","dp","graphs","greedy","implementation","shortest paths"]},{"ContestId":1737,"Index":"C","Name":"Ela and Crickets","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","games","implementation","math"]},{"ContestId":1737,"Index":"B","Name":"Ela's Fitness and the Luxury Number","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","implementation","math"]},{"ContestId":1737,"Index":"A","Name":"Ela Sorting Books","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation","strings"]},{"ContestId":1736,"Index":"E","Name":"Swap and Take","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["dp","greedy"]},{"ContestId":1736,"Index":"D","Name":"Equal Binary Subsequences","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["constructive algorithms","geometry","greedy","implementation","strings"]},{"ContestId":1736,"Index":"C2","Name":"Good Subarrays (Hard Version)","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["binary search","data structures","dp","two pointers"]},{"ContestId":1736,"Index":"C1","Name":"Good Subarrays (Easy Version)","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["binary search","data structures","schedules","two pointers"]},{"ContestId":1736,"Index":"B","Name":"Playing with GCD","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["math","number theory"]},{"ContestId":1736,"Index":"A","Name":"Make A Equal to B","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","sortings"]},{"ContestId":1735,"Index":"F","Name":"Pebbles and Beads","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["data structures","geometry"]},{"ContestId":1735,"Index":"E","Name":"House Planning","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["constructive algorithms","data structures","graph matchings","greedy"]},{"ContestId":1735,"Index":"D","Name":"Meta-set","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["brute force","combinatorics","data structures","hashing","math"]},{"ContestId":1735,"Index":"C","Name":"Phase Shift","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["dfs and similar","dsu","graphs","greedy","implementation","strings"]},{"ContestId":1735,"Index":"B","Name":"Tea with Tangerines","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["greedy","math"]},{"ContestId":1735,"Index":"A","Name":"Working Week","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1734,"Index":"F","Name":"Zeros and Ones","Type":"PROGRAMMING","Rating":2500,"Points":3250,"Tags":["bitmasks","divide and conquer","dp","math"]},{"ContestId":1734,"Index":"E","Name":"Rectangular Congruence","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["constructive algorithms","number theory"]},{"ContestId":1734,"Index":"D","Name":"Slime Escape","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["data structures","dp","greedy","two pointers"]},{"ContestId":1734,"Index":"C","Name":"Removing Smallest Multiples","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["greedy","math"]},{"ContestId":1734,"Index":"B","Name":"Bright, Nice, Brilliant","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["constructive algorithms"]},{"ContestId":1734,"Index":"A","Name":"Select Three Sticks","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","sortings"]},{"ContestId":1733,"Index":"E","Name":"Conveyor","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["constructive algorithms","dp","math"]},{"ContestId":1733,"Index":"D2","Name":"Zero-One (Hard Version)","Type":"PROGRAMMING","Rating":2000,"Points":750,"Tags":["dp","greedy"]},{"ContestId":1733,"Index":"D1","Name":"Zero-One (Easy Version)","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1733,"Index":"C","Name":"Parity Shuffle Sorting","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["constructive algorithms","sortings"]},{"ContestId":1733,"Index":"B","Name":"Rule of League","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":1733,"Index":"A","Name":"Consecutive Sum","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":1732,"Index":"E","Name":"Location","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["data structures","dp","math","number theory"]},{"ContestId":1732,"Index":"D2","Name":"Balance (Hard version)","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["brute force","data structures","number theory"]},{"ContestId":1732,"Index":"D1","Name":"Balance (Easy version)","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["brute force","data structures","implementation","number theory"]},{"ContestId":1732,"Index":"C2","Name":"Sheikh (Hard Version)","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["binary search","bitmasks","brute force","greedy","implementation","two pointers"]},{"ContestId":1732,"Index":"C1","Name":"Sheikh (Easy version)","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["binary search","bitmasks","greedy","two pointers"]},{"ContestId":1732,"Index":"B","Name":"Ugu","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["brute force","dp","greedy","implementation"]},{"ContestId":1732,"Index":"A","Name":"Bestie","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["brute force","combinatorics","constructive algorithms","implementation","math","number theory"]},{"ContestId":1731,"Index":"F","Name":"Function Sum","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["brute force","combinatorics","dp","fft","math"]},{"ContestId":1731,"Index":"E","Name":"Graph Cost","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dp","greedy","math","number theory"]},{"ContestId":1731,"Index":"D","Name":"Valiant's New Map","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","brute force","data structures","dp","two pointers"]},{"ContestId":1731,"Index":"C","Name":"Even Subarrays","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["bitmasks","brute force","hashing","math","number theory"]},{"ContestId":1731,"Index":"B","Name":"Kill Demodogs","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1731,"Index":"A","Name":"Joey Takes Money","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1730,"Index":"F","Name":"Almost Sorted","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["bitmasks","data structures","dp"]},{"ContestId":1730,"Index":"E","Name":"Maximums and Minimums","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["combinatorics","data structures","divide and conquer","number theory"]},{"ContestId":1730,"Index":"D","Name":"Prefixes and Suffixes","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["constructive algorithms","strings","two pointers"]},{"ContestId":1730,"Index":"C","Name":"Minimum Notation","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["data structures","greedy","math","sortings"]},{"ContestId":1730,"Index":"B","Name":"Meeting on the Line","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search","geometry","greedy","implementation","math","ternary search"]},{"ContestId":1730,"Index":"A","Name":"Planets","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["data structures","greedy","sortings"]},{"ContestId":1729,"Index":"G","Name":"Cut Substrings","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","dp","hashing","strings","two pointers"]},{"ContestId":1729,"Index":"F","Name":"Kirei and the Linear Function","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["hashing","math"]},{"ContestId":1729,"Index":"E","Name":"Guess the Cycle Size","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["interactive","probabilities"]},{"ContestId":1729,"Index":"D","Name":"Friends and the Restaurant","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","sortings","two pointers"]},{"ContestId":1729,"Index":"C","Name":"Jumping on Tiles","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","strings"]},{"ContestId":1729,"Index":"B","Name":"Decode String","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","strings"]},{"ContestId":1729,"Index":"A","Name":"Two Elevators","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1728,"Index":"G","Name":"Illumination","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["binary search","bitmasks","brute force","combinatorics","dp","math","two pointers"]},{"ContestId":1728,"Index":"F","Name":"Fishermen","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["flows","graph matchings","greedy"]},{"ContestId":1728,"Index":"E","Name":"Red-Black Pepper","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["brute force","data structures","greedy","math","number theory"]},{"ContestId":1728,"Index":"D","Name":"Letter Picking","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","dp","games","two pointers"]},{"ContestId":1728,"Index":"C","Name":"Digital Logarithm","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["data structures","greedy","sortings"]},{"ContestId":1728,"Index":"B","Name":"Best Permutation","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1728,"Index":"A","Name":"Colored Balls: Revisited","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","greedy","implementation","sortings"]},{"ContestId":1726,"Index":"H","Name":"Mainak and the Bleeding Polygon","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["binary search","geometry","implementation","math"]},{"ContestId":1726,"Index":"G","Name":"A Certain Magical Party","Type":"PROGRAMMING","Rating":3300,"Points":3250,"Tags":["combinatorics","data structures","greedy","sortings"]},{"ContestId":1726,"Index":"F","Name":"Late For Work (submissions are not allowed)","Type":"PROGRAMMING","Rating":2900,"Points":2750,"Tags":["data structures","greedy","schedules","shortest paths"]},{"ContestId":1726,"Index":"E","Name":"Almost Perfect","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["combinatorics","fft","math"]},{"ContestId":1726,"Index":"D","Name":"Edge Split","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","probabilities","trees"]},{"ContestId":1726,"Index":"C","Name":"Jatayu's Balanced Bracket Sequence","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["data structures","dsu","graphs","greedy"]},{"ContestId":1726,"Index":"B","Name":"Mainak and Interesting Sequence","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["bitmasks","constructive algorithms","math"]},{"ContestId":1726,"Index":"A","Name":"Mainak and Array","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","math"]},{"ContestId":1725,"Index":"M","Name":"Moving Both Hands","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","graphs","shortest paths"]},{"ContestId":1725,"Index":"L","Name":"Lemper Cooking Competition","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures"]},{"ContestId":1725,"Index":"K","Name":"Kingdom of Criticism","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","dsu"]},{"ContestId":1725,"Index":"J","Name":"Journey","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dp","trees"]},{"ContestId":1725,"Index":"I","Name":"Imitating the Key Tree","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["combinatorics","dsu","trees"]},{"ContestId":1725,"Index":"H","Name":"Hot Black Hot White","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1725,"Index":"G","Name":"Garage","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","geometry","math"]},{"ContestId":1725,"Index":"F","Name":"Field Photography","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["bitmasks","data structures","sortings"]},{"ContestId":1725,"Index":"E","Name":"Electrical Efficiency","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["combinatorics","data structures","dp","math","number theory","trees"]},{"ContestId":1725,"Index":"D","Name":"Deducing Sortability","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["binary search","bitmasks","math"]},{"ContestId":1725,"Index":"C","Name":"Circular Mirror","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","combinatorics","geometry","math","two pointers"]},{"ContestId":1725,"Index":"B","Name":"Basketball Together","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["binary search","greedy","sortings"]},{"ContestId":1725,"Index":"A","Name":"Accumulation of Dominoes","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1722,"Index":"G","Name":"Even-Odd XOR","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["bitmasks","constructive algorithms","greedy"]},{"ContestId":1722,"Index":"F","Name":"L-shapes","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","implementation"]},{"ContestId":1722,"Index":"E","Name":"Counting Rectangles","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","data structures","dp","implementation"]},{"ContestId":1722,"Index":"D","Name":"Line","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1722,"Index":"C","Name":"Word Game","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1722,"Index":"B","Name":"Colourblindness","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1722,"Index":"A","Name":"Spell Check","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1721,"Index":"F","Name":"Matching Reduction","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["brute force","constructive algorithms","dfs and similar","flows","graph matchings","graphs","interactive"]},{"ContestId":1721,"Index":"E","Name":"Prefix Function Queries","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dfs and similar","dp","hashing","string suffix structures","strings","trees"]},{"ContestId":1721,"Index":"D","Name":"Maximum AND","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["bitmasks","dfs and similar","divide and conquer","greedy","sortings"]},{"ContestId":1721,"Index":"C","Name":"Min-Max Array Transformation","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","greedy","two pointers"]},{"ContestId":1721,"Index":"B","Name":"Deadly Laser","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":1721,"Index":"A","Name":"Image","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1720,"Index":"E","Name":"Misha and Paintings","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["constructive algorithms","data structures","greedy","implementation","math"]},{"ContestId":1720,"Index":"D2","Name":"Xor-Subsequence (hard version)","Type":"PROGRAMMING","Rating":2400,"Points":1000,"Tags":["bitmasks","data structures","dp","strings","trees"]},{"ContestId":1720,"Index":"D1","Name":"Xor-Subsequence (easy version)","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["bitmasks","brute force","dp","strings","trees","two pointers"]},{"ContestId":1720,"Index":"C","Name":"Corners","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["greedy","implementation"]},{"ContestId":1720,"Index":"B","Name":"Interesting Sum","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["brute force","data structures","greedy","math","sortings"]},{"ContestId":1720,"Index":"A","Name":"Burenka Plays with Fractions","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math","number theory"]},{"ContestId":1719,"Index":"C","Name":"Fighting Tournament","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["binary search","data structures","implementation","two pointers"]},{"ContestId":1719,"Index":"B","Name":"Mathematical Circus","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":1719,"Index":"A","Name":"Chip Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["games","math"]},{"ContestId":1718,"Index":"F","Name":"Burenka, an Array and Queries","Type":"PROGRAMMING","Rating":3300,"Points":2750,"Tags":["data structures","math","number theory"]},{"ContestId":1718,"Index":"E","Name":"Impressionism","Type":"PROGRAMMING","Rating":3500,"Points":2250,"Tags":["constructive algorithms","graphs","implementation","math"]},{"ContestId":1718,"Index":"D","Name":"Permutation for Burenka","Type":"PROGRAMMING","Rating":3300,"Points":2250,"Tags":["data structures","graph matchings","greedy","math","trees"]},{"ContestId":1718,"Index":"C","Name":"Tonya and Burenka-179","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["data structures","greedy","math","number theory"]},{"ContestId":1718,"Index":"B","Name":"Fibonacci Strings","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["greedy","implementation","math","number theory"]},{"ContestId":1718,"Index":"A2","Name":"Burenka and Traditions (hard version)","Type":"PROGRAMMING","Rating":1900,"Points":500,"Tags":["data structures","dp","greedy"]},{"ContestId":1718,"Index":"A1","Name":"Burenka and Traditions (easy version)","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["dp","greedy"]},{"ContestId":1717,"Index":"F","Name":"Madoka and The First Session","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["constructive algorithms","flows","graph matchings","graphs","implementation"]},{"ContestId":1717,"Index":"E","Name":"Madoka and The Best University","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["math","number theory"]},{"ContestId":1717,"Index":"D","Name":"Madoka and The Corruption Scheme","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["combinatorics","constructive algorithms","greedy","math"]},{"ContestId":1717,"Index":"C","Name":"Madoka and Formal Statement","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["greedy"]},{"ContestId":1717,"Index":"B","Name":"Madoka and Underground Competitions","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":1717,"Index":"A","Name":"Madoka and Strange Thoughts","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math","number theory"]},{"ContestId":1716,"Index":"F","Name":"Bags with Balls","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":1716,"Index":"E","Name":"Swap and Maximum Block","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["bitmasks","data structures","dfs and similar","divide and conquer","dp"]},{"ContestId":1716,"Index":"D","Name":"Chip Move","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","dp","math"]},{"ContestId":1716,"Index":"C","Name":"Robot in a Hallway","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","dp","greedy","implementation","ternary search"]},{"ContestId":1716,"Index":"B","Name":"Permutation Chain","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1716,"Index":"A","Name":"2-3 Moves","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1715,"Index":"F","Name":"Crop Squares","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["constructive algorithms","geometry","interactive","math"]},{"ContestId":1715,"Index":"E","Name":"Long Way Home","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["data structures","divide and conquer","dp","geometry","graphs","greedy","shortest paths"]},{"ContestId":1715,"Index":"D","Name":"2+ doors","Type":"PROGRAMMING","Rating":1900,"Points":2250,"Tags":["2-sat","bitmasks","graphs","greedy"]},{"ContestId":1715,"Index":"C","Name":"Monoblock","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["combinatorics","data structures","implementation","math"]},{"ContestId":1715,"Index":"B","Name":"Beautiful Array","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1715,"Index":"A","Name":"Crossmarket","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1714,"Index":"G","Name":"Path Prefixes","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","data structures","dfs and similar","trees"]},{"ContestId":1714,"Index":"F","Name":"Build a Tree and That Is It","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms","implementation","trees"]},{"ContestId":1714,"Index":"E","Name":"Add Modulo 10","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":1714,"Index":"D","Name":"Color with Occurrences","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","data structures","dp","greedy","strings"]},{"ContestId":1714,"Index":"C","Name":"Minimum  Varied Number","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1714,"Index":"B","Name":"Remove Prefix","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["data structures","greedy","implementation"]},{"ContestId":1714,"Index":"A","Name":"Everyone Loves to Sleep","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation","math"]},{"ContestId":1713,"Index":"F","Name":"Lost Array","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["bitmasks","combinatorics","constructive algorithms","dp","math"]},{"ContestId":1713,"Index":"E","Name":"Cross Swapping","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["2-sat","data structures","dsu","greedy","matrices"]},{"ContestId":1713,"Index":"D","Name":"Tournament Countdown","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["constructive algorithms","greedy","interactive","number theory","probabilities"]},{"ContestId":1713,"Index":"C","Name":"Build Permutation","Type":"PROGRAMMING","Rating":1200,"Points":1750,"Tags":["constructive algorithms","dp","math"]},{"ContestId":1713,"Index":"B","Name":"Optimal Reduction","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","sortings"]},{"ContestId":1713,"Index":"A","Name":"Traveling Salesman Problem","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["geometry","greedy","implementation"]},{"ContestId":1712,"Index":"F","Name":"Triameter","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["binary search","data structures","dfs and similar","trees"]},{"ContestId":1712,"Index":"E2","Name":"LCM Sum (hard version)","Type":"PROGRAMMING","Rating":2500,"Points":750,"Tags":["brute force","data structures","math","number theory","two pointers"]},{"ContestId":1712,"Index":"E1","Name":"LCM Sum (easy version)","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["binary search","brute force","combinatorics","math","number theory","two pointers"]},{"ContestId":1712,"Index":"D","Name":"Empty Graph","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","constructive algorithms","data structures","greedy","shortest paths"]},{"ContestId":1712,"Index":"C","Name":"Sort Zero","Type":"PROGRAMMING","Rating":1100,"Points":1500,"Tags":["greedy","sortings"]},{"ContestId":1712,"Index":"B","Name":"Woeful Permutation","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["constructive algorithms","greedy","number theory"]},{"ContestId":1712,"Index":"A","Name":"Wonderful Permutation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1711,"Index":"B","Name":"Party","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","graphs"]},{"ContestId":1711,"Index":"A","Name":"Perfect Permutation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":1710,"Index":"E","Name":"Two Arrays","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["binary search","games","graph matchings"]},{"ContestId":1710,"Index":"D","Name":"Recover the Tree","Type":"PROGRAMMING","Rating":3400,"Points":2000,"Tags":["constructive algorithms","trees"]},{"ContestId":1710,"Index":"C","Name":"XOR Triangle","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["bitmasks","brute force","constructive algorithms","dp","greedy","math"]},{"ContestId":1710,"Index":"B","Name":"Rain","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["binary search","brute force","data structures","geometry","greedy","implementation","math"]},{"ContestId":1710,"Index":"A","Name":"Color the Picture","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1709,"Index":"F","Name":"Multiset of Strings","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["bitmasks","brute force","dp","fft","flows","graphs","math","meet-in-the-middle","trees"]},{"ContestId":1709,"Index":"E","Name":"XOR Tree","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["bitmasks","data structures","dfs and similar","dsu","greedy","trees"]},{"ContestId":1709,"Index":"D","Name":"Rorororobot","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","data structures","greedy","math"]},{"ContestId":1709,"Index":"C","Name":"Recover an RBS","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","greedy","implementation","strings"]},{"ContestId":1709,"Index":"B","Name":"Also Try Minecraft","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["data structures","dp","implementation"]},{"ContestId":1709,"Index":"A","Name":"Three Doors","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":1708,"Index":"B","Name":"Difference of GCDs","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":1708,"Index":"A","Name":"Difference Operations","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1707,"Index":"F","Name":"Bugaboo","Type":"PROGRAMMING","Rating":3500,"Points":3250,"Tags":["bitmasks","constructive algorithms","dp","number theory"]},{"ContestId":1707,"Index":"E","Name":"Replace","Type":"PROGRAMMING","Rating":3500,"Points":2500,"Tags":["binary search","data structures"]},{"ContestId":1707,"Index":"D","Name":"Partial Virtual Trees","Type":"PROGRAMMING","Rating":3000,"Points":1750,"Tags":["combinatorics","dfs and similar","dp","math","trees"]},{"ContestId":1707,"Index":"C","Name":"DFS Trees","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["dfs and similar","dsu","graphs","greedy","sortings","trees"]},{"ContestId":1707,"Index":"B","Name":"Difference Array","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["brute force","data structures","implementation","sortings"]},{"ContestId":1707,"Index":"A","Name":"Doremy's IQ","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["binary search","constructive algorithms","greedy","implementation"]},{"ContestId":1706,"Index":"E","Name":"Qpwoeirut and Vertices","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["binary search","data structures","dfs and similar","divide and conquer","dsu","greedy","trees"]},{"ContestId":1706,"Index":"D2","Name":"Chopping Carrots (Hard Version)","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["brute force","constructive algorithms","data structures","dp","greedy","math","number theory","two pointers"]},{"ContestId":1706,"Index":"D1","Name":"Chopping Carrots (Easy Version)","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["binary search","brute force","constructive algorithms","greedy","number theory"]},{"ContestId":1706,"Index":"C","Name":"Qpwoeirut And The City","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["dp","flows","greedy","implementation"]},{"ContestId":1706,"Index":"B","Name":"Making Towers","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["dp","greedy","math"]},{"ContestId":1706,"Index":"A","Name":"Another String Minimization Problem","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["2-sat","constructive algorithms","greedy","string suffix structures","strings"]},{"ContestId":1705,"Index":"F","Name":"Mark and the Online Exam","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["bitmasks","constructive algorithms","interactive","probabilities"]},{"ContestId":1705,"Index":"E","Name":"Mark and Professor Koro","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["binary search","bitmasks","brute force","combinatorics","data structures","greedy"]},{"ContestId":1705,"Index":"D","Name":"Mark and Lightbulbs","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["combinatorics","constructive algorithms","greedy","math","sortings"]},{"ContestId":1705,"Index":"C","Name":"Mark and His Unfinished Essay","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["brute force","implementation"]},{"ContestId":1705,"Index":"B","Name":"Mark the Dust Sweeper","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1705,"Index":"A","Name":"Mark the Photographer","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":1704,"Index":"H2","Name":"Game of AI (hard version)","Type":"PROGRAMMING","Rating":3500,"Points":2750,"Tags":["combinatorics","fft","math"]},{"ContestId":1704,"Index":"H1","Name":"Game of AI (easy version)","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["combinatorics","constructive algorithms","dp","fft","math"]},{"ContestId":1704,"Index":"G","Name":"Mio and Lucky Array","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["constructive algorithms","fft","math","strings"]},{"ContestId":1704,"Index":"F","Name":"Colouring Game","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["constructive algorithms","dp","games"]},{"ContestId":1704,"Index":"E","Name":"Count Seconds","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["brute force","constructive algorithms","dp","graphs","implementation","math"]},{"ContestId":1704,"Index":"D","Name":"Magical Array","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["constructive algorithms","hashing","implementation","math"]},{"ContestId":1704,"Index":"C","Name":"Virus","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["greedy","implementation","sortings"]},{"ContestId":1704,"Index":"B","Name":"Luke is a Foodie","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["brute force","greedy","implementation"]},{"ContestId":1704,"Index":"A","Name":"Two 0-1 Sequences","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1703,"Index":"G","Name":"Good Key, Bad Key","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["bitmasks","brute force","dp","greedy","math"]},{"ContestId":1703,"Index":"F","Name":"Yet Another Problem About Pairs Satisfying an Inequality","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","data structures","dp","greedy","sortings"]},{"ContestId":1703,"Index":"E","Name":"Mirror Grid","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation"]},{"ContestId":1703,"Index":"D","Name":"Double Strings","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","data structures","strings"]},{"ContestId":1703,"Index":"C","Name":"Cypher","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation","strings"]},{"ContestId":1703,"Index":"B","Name":"ICPC Balloons","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1703,"Index":"A","Name":"YES or YES?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation","strings"]},{"ContestId":1702,"Index":"G2","Name":"Passable Paths (hard version)","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":1702,"Index":"G1","Name":"Passable Paths (easy version)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar","trees"]},{"ContestId":1702,"Index":"F","Name":"Equate Multisets","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","data structures","greedy","math","number theory"]},{"ContestId":1702,"Index":"E","Name":"Split Into Two Sets","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":1702,"Index":"D","Name":"Not a Cheap String","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy"]},{"ContestId":1702,"Index":"C","Name":"Train and Queries","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1702,"Index":"B","Name":"Polycarp Writes a String from Memory","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1702,"Index":"A","Name":"Round Down the Price","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1701,"Index":"F","Name":"Points","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["combinatorics","data structures","implementation","math","matrices"]},{"ContestId":1701,"Index":"E","Name":"Text Editor","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["brute force","dp","greedy","strings"]},{"ContestId":1701,"Index":"D","Name":"Permutation Restoration","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures","greedy","math","sortings","two pointers"]},{"ContestId":1701,"Index":"C","Name":"Schedule Management","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","greedy","implementation","two pointers"]},{"ContestId":1701,"Index":"B","Name":"Permutation","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1701,"Index":"A","Name":"Grass Field","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1700,"Index":"F","Name":"Puzzle","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1700,"Index":"E","Name":"Serega the Pirate","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["brute force","constructive algorithms"]},{"ContestId":1700,"Index":"D","Name":"River Locks","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["binary search","dp","greedy","math"]},{"ContestId":1700,"Index":"C","Name":"Helping the Nature","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":1700,"Index":"B","Name":"Palindromic Numbers ","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":1700,"Index":"A","Name":"Optimal Path","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1699,"Index":"E","Name":"Three Days Grace","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures","dp","greedy","math","number theory","two pointers"]},{"ContestId":1699,"Index":"D","Name":"Almost Triple Deletions","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["data structures","dp","greedy"]},{"ContestId":1699,"Index":"C","Name":"The Third Problem","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["combinatorics","constructive algorithms","math"]},{"ContestId":1699,"Index":"B","Name":"Almost Ternary Matrix","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["bitmasks","constructive algorithms","matrices"]},{"ContestId":1699,"Index":"A","Name":"The Third Three Number Problem","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1698,"Index":"G","Name":"Long Binary String","Type":"PROGRAMMING","Rating":2900,"Points":3250,"Tags":["bitmasks","math","matrices","meet-in-the-middle","number theory"]},{"ContestId":1698,"Index":"F","Name":"Equal Reversal","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["constructive algorithms","graphs","implementation","math"]},{"ContestId":1698,"Index":"E","Name":"PermutationForces II","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["brute force","combinatorics","greedy","sortings","trees","two pointers"]},{"ContestId":1698,"Index":"D","Name":"Fixed Point Guessing","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","constructive algorithms","interactive"]},{"ContestId":1698,"Index":"C","Name":"3SUM Closure","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","data structures"]},{"ContestId":1698,"Index":"B","Name":"Rising Sand","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1698,"Index":"A","Name":"XOR Mixup","Type":"PROGRAMMING","Rating":800,"Points":250,"Tags":["bitmasks","brute force"]},{"ContestId":1697,"Index":"F","Name":"Too Many Constraints","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["2-sat","constructive algorithms","graphs","implementation"]},{"ContestId":1697,"Index":"E","Name":"Coloring","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","combinatorics","constructive algorithms","dp","geometry","graphs","greedy","implementation","math"]},{"ContestId":1697,"Index":"D","Name":"Guess The String","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","constructive algorithms","interactive"]},{"ContestId":1697,"Index":"C","Name":"awoo's Favorite Problem","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","constructive algorithms","data structures","greedy","implementation","strings","two pointers"]},{"ContestId":1697,"Index":"B","Name":"Promo","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1697,"Index":"A","Name":"Parkway Walk","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1696,"Index":"H","Name":"Maximum Product?","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["brute force","combinatorics","dp","greedy","implementation","math","two pointers"]},{"ContestId":1696,"Index":"G","Name":"Fishingprince Plays With Array Again","Type":"PROGRAMMING","Rating":3300,"Points":3250,"Tags":["brute force","data structures","geometry","math"]},{"ContestId":1696,"Index":"F","Name":"Tree Recovery","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","trees"]},{"ContestId":1696,"Index":"E","Name":"Placing Jinas","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["combinatorics","math"]},{"ContestId":1696,"Index":"D","Name":"Permutation Graph","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","constructive algorithms","data structures","divide and conquer","greedy","shortest paths"]},{"ContestId":1696,"Index":"C","Name":"Fishingprince Plays With Array","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1696,"Index":"B","Name":"NIT Destroys the Universe","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy"]},{"ContestId":1696,"Index":"A","Name":"NIT orz!","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["bitmasks","greedy"]},{"ContestId":1695,"Index":"E","Name":"Ambiguous Dominoes","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":1695,"Index":"D2","Name":"Tree Queries (Hard Version)","Type":"PROGRAMMING","Rating":2300,"Points":1000,"Tags":["constructive algorithms","dfs and similar","dp","greedy","trees"]},{"ContestId":1695,"Index":"D1","Name":"Tree Queries (Easy Version)","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["brute force","constructive algorithms","dfs and similar","dp","greedy","trees"]},{"ContestId":1695,"Index":"C","Name":"Zero Path","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["brute force","data structures","dp","graphs","greedy","shortest paths"]},{"ContestId":1695,"Index":"B","Name":"Circle Game","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["games","greedy"]},{"ContestId":1695,"Index":"A","Name":"Subrectangle Guess","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["games"]},{"ContestId":1694,"Index":"B","Name":"Paranoid String","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","greedy"]},{"ContestId":1694,"Index":"A","Name":"Creep","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1693,"Index":"F","Name":"I Might Be Wrong","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["binary search","greedy","two pointers"]},{"ContestId":1693,"Index":"E","Name":"Outermost Maximums","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["data structures","greedy"]},{"ContestId":1693,"Index":"D","Name":"Decinc Dividing","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["brute force","data structures","divide and conquer","dp","greedy"]},{"ContestId":1693,"Index":"C","Name":"Keshi in Search of AmShZ","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["graphs","greedy","shortest paths"]},{"ContestId":1693,"Index":"B","Name":"Fake Plastic Trees","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dfs and similar","dp","greedy","trees"]},{"ContestId":1693,"Index":"A","Name":"Directional Increase","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["greedy"]},{"ContestId":1692,"Index":"H","Name":"Gambling","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["data structures","dp","greedy","math"]},{"ContestId":1692,"Index":"G","Name":"2^Sort","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["data structures","dp","sortings","two pointers"]},{"ContestId":1692,"Index":"F","Name":"3SUM","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","math"]},{"ContestId":1692,"Index":"E","Name":"Binary Deque","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search","implementation","two pointers"]},{"ContestId":1692,"Index":"D","Name":"The Clock","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1692,"Index":"C","Name":"Where's the Bishop?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1692,"Index":"B","Name":"All Distinct","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1692,"Index":"A","Name":"Marathon","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1691,"Index":"F","Name":"K-Set Tree","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["combinatorics","dfs and similar","dp","math","trees"]},{"ContestId":1691,"Index":"E","Name":"Number of Groups","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["data structures","dfs and similar","dsu","graphs","greedy","sortings"]},{"ContestId":1691,"Index":"D","Name":"Max GEQ Sum","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["binary search","constructive algorithms","data structures","divide and conquer","implementation","two pointers"]},{"ContestId":1691,"Index":"C","Name":"Sum of Substrings","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["brute force","constructive algorithms","greedy","math","strings"]},{"ContestId":1691,"Index":"B","Name":"Shoe Shuffling","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["constructive algorithms","greedy","implementation","two pointers"]},{"ContestId":1691,"Index":"A","Name":"Beat The Odds","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","math"]},{"ContestId":1690,"Index":"G","Name":"Count the Trains","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","data structures","greedy","sortings"]},{"ContestId":1690,"Index":"F","Name":"Shifting String","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["graphs","math","number theory","strings"]},{"ContestId":1690,"Index":"E","Name":"Price Maximization","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","greedy","math","two pointers"]},{"ContestId":1690,"Index":"D","Name":"Black and White Stripe","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","two pointers"]},{"ContestId":1690,"Index":"C","Name":"Restoring the Duration of Tasks","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["data structures","greedy","implementation"]},{"ContestId":1690,"Index":"B","Name":"Array Decrements","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1690,"Index":"A","Name":"Print a Pedestal (Codeforces logo?)","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1689,"Index":"E","Name":"ANDfinity","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["bitmasks","brute force","constructive algorithms","dfs and similar","dsu","graphs"]},{"ContestId":1689,"Index":"D","Name":"Lena and Matrix","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["data structures","dp","geometry","shortest paths"]},{"ContestId":1689,"Index":"C","Name":"Infected Tree","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["dfs and similar","dp","trees"]},{"ContestId":1689,"Index":"B","Name":"Mystic Permutation","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["data structures","greedy"]},{"ContestId":1689,"Index":"A","Name":"Lex String","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","implementation","sortings","two pointers"]},{"ContestId":1688,"Index":"C","Name":"Manipulating History","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":1688,"Index":"B","Name":"Patchouli's Magical Talisman","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["bitmasks","constructive algorithms","greedy","sortings"]},{"ContestId":1688,"Index":"A","Name":"Cirno's Perfect Bitmasks Classroom","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["bitmasks","brute force"]},{"ContestId":1687,"Index":"F","Name":"Koishi's Unconscious Permutation","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["fft","math"]},{"ContestId":1687,"Index":"E","Name":"Become Big For Me","Type":"PROGRAMMING","Rating":3500,"Points":2000,"Tags":["combinatorics","constructive algorithms","greedy","math","number theory"]},{"ContestId":1687,"Index":"D","Name":"Cute number","Type":"PROGRAMMING","Rating":2900,"Points":1500,"Tags":["binary search","brute force","data structures","dsu","implementation","math"]},{"ContestId":1687,"Index":"C","Name":"Sanae and Giant Robot","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["binary search","brute force","data structures","dsu","greedy","sortings"]},{"ContestId":1687,"Index":"B","Name":"Railway System","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["constructive algorithms","graphs","greedy","interactive","sortings"]},{"ContestId":1687,"Index":"A","Name":"The Enchanted Forest","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":1686,"Index":"B","Name":"Odd Subarrays","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["dp","greedy"]},{"ContestId":1686,"Index":"A","Name":"Everything Everywhere All But One","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1685,"Index":"E","Name":"The Ultimate LIS Problem","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["data structures","greedy"]},{"ContestId":1685,"Index":"D2","Name":"Permutation Weight (Hard Version)","Type":"PROGRAMMING","Rating":3500,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1685,"Index":"D1","Name":"Permutation Weight (Easy Version)","Type":"PROGRAMMING","Rating":2800,"Points":1500,"Tags":["constructive algorithms","dfs and similar","dsu"]},{"ContestId":1685,"Index":"C","Name":"Bring Balance","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":1685,"Index":"B","Name":"Linguistics","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["greedy","implementation","sortings","strings"]},{"ContestId":1685,"Index":"A","Name":"Circular Local MiniMax","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":1684,"Index":"H","Name":"Hard Cut","Type":"PROGRAMMING","Rating":3400,"Points":3250,"Tags":["constructive algorithms","dfs and similar","divide and conquer","math"]},{"ContestId":1684,"Index":"G","Name":"Euclid Guess","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["constructive algorithms","flows","graph matchings","math","number theory"]},{"ContestId":1684,"Index":"F","Name":"Diverse Segments","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["data structures","two pointers"]},{"ContestId":1684,"Index":"E","Name":"MEX vs DIFF","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["binary search","brute force","constructive algorithms","data structures","greedy","two pointers"]},{"ContestId":1684,"Index":"D","Name":"Traps","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":1684,"Index":"C","Name":"Column Swapping","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["brute force","constructive algorithms","greedy","implementation","sortings"]},{"ContestId":1684,"Index":"B","Name":"Z mod X = C","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["constructive algorithms","math"]},{"ContestId":1684,"Index":"A","Name":"Digit Minimization","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","games","math","strings"]},{"ContestId":1682,"Index":"F","Name":"MCMF?","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["data structures","flows","graphs","greedy","sortings","two pointers"]},{"ContestId":1682,"Index":"E","Name":"Unordered Swaps","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["constructive algorithms","dfs and similar","graphs","greedy","math","sortings","trees"]},{"ContestId":1682,"Index":"D","Name":"Circular Spanning Tree","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","implementation","trees"]},{"ContestId":1682,"Index":"C","Name":"LIS or Reverse LIS?","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1682,"Index":"B","Name":"AND Sorting","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["bitmasks","constructive algorithms","sortings"]},{"ContestId":1682,"Index":"A","Name":"Palindromic Indices","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["greedy","strings"]},{"ContestId":1681,"Index":"F","Name":"Unique Occurrences","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","dfs and similar","divide and conquer","dp","dsu","trees"]},{"ContestId":1681,"Index":"E","Name":"Labyrinth Adventures","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","dp","matrices","shortest paths"]},{"ContestId":1681,"Index":"D","Name":"Required Length","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","dfs and similar","dp","hashing","shortest paths"]},{"ContestId":1681,"Index":"C","Name":"Double Sort","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":1681,"Index":"B","Name":"Card Trick","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1681,"Index":"A","Name":"Game with Cards","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["games","greedy"]},{"ContestId":1680,"Index":"F","Name":"Lenient Vertex Cover","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["dfs and similar","divide and conquer","dsu","graphs","trees"]},{"ContestId":1680,"Index":"E","Name":"Moving Chips","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["bitmasks","dp","greedy"]},{"ContestId":1680,"Index":"D","Name":"Dog Walking","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1680,"Index":"C","Name":"Binary String","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","greedy","strings","two pointers"]},{"ContestId":1680,"Index":"B","Name":"Robots","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1680,"Index":"A","Name":"Minimums and Maximums","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","math"]},{"ContestId":1679,"Index":"F","Name":"Formalism for Formalism","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["bitmasks","dp","math"]},{"ContestId":1679,"Index":"E","Name":"Typical Party in Dorm","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["bitmasks","combinatorics","dp","strings"]},{"ContestId":1679,"Index":"D","Name":"Toss a Coin to Your Graph...","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["binary search","dfs and similar","dp","graphs"]},{"ContestId":1679,"Index":"C","Name":"Rooks Defenders","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["data structures","implementation"]},{"ContestId":1679,"Index":"B","Name":"Stone Age Problem","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["data structures","implementation"]},{"ContestId":1679,"Index":"A","Name":"AvtoBus","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","greedy","math","number theory"]},{"ContestId":1678,"Index":"B2","Name":"Tokitsukaze and Good 01-String (hard version)","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dp","greedy","implementation"]},{"ContestId":1678,"Index":"B1","Name":"Tokitsukaze and Good 01-String (easy version)","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["implementation"]},{"ContestId":1678,"Index":"A","Name":"Tokitsukaze and All Zero Sequence","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1677,"Index":"F","Name":"Tokitsukaze and Gems","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["dp","math"]},{"ContestId":1677,"Index":"E","Name":"Tokitsukaze and Beautiful Subsegments","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["data structures"]},{"ContestId":1677,"Index":"D","Name":"Tokitsukaze and Permutations","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp","math"]},{"ContestId":1677,"Index":"C","Name":"Tokitsukaze and Two Colorful Tapes","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"ContestId":1677,"Index":"B","Name":"Tokitsukaze and Meeting","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["data structures","implementation","math"]},{"ContestId":1677,"Index":"A","Name":"Tokitsukaze and Strange Inequality","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["brute force","data structures","dp"]},{"ContestId":1676,"Index":"H2","Name":"Maximum Crossings (Hard Version)","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["data structures","divide and conquer","sortings"]},{"ContestId":1676,"Index":"H1","Name":"Maximum Crossings (Easy Version)","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force"]},{"ContestId":1676,"Index":"G","Name":"White-Black Balanced Subtrees","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":1676,"Index":"F","Name":"Longest Strike","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["data structures","greedy","implementation","sortings","two pointers"]},{"ContestId":1676,"Index":"E","Name":"Eating Queries","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","greedy","sortings"]},{"ContestId":1676,"Index":"D","Name":"X-Sum","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","greedy","implementation"]},{"ContestId":1676,"Index":"C","Name":"Most Similar Words","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","greedy","implementation","implementation","math","strings"]},{"ContestId":1676,"Index":"B","Name":"Equal Candies","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math","sortings"]},{"ContestId":1676,"Index":"A","Name":"Lucky?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1675,"Index":"G","Name":"Sorting Pancakes","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp"]},{"ContestId":1675,"Index":"F","Name":"Vlad and Unfinished Business","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dfs and similar","dp","greedy","trees"]},{"ContestId":1675,"Index":"E","Name":"Replace With the Previous, Minimize","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dsu","greedy","strings"]},{"ContestId":1675,"Index":"D","Name":"Vertical Paths","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["graphs","implementation","trees"]},{"ContestId":1675,"Index":"C","Name":"Detective Task","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":1675,"Index":"B","Name":"Make It Increasing","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1675,"Index":"A","Name":"Food for Animals","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1674,"Index":"G","Name":"Remove Directed Edges","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dfs and similar","dp","graphs"]},{"ContestId":1674,"Index":"F","Name":"Desktop Rearrangement","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","greedy","implementation"]},{"ContestId":1674,"Index":"E","Name":"Breaking the Wall","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","brute force","constructive algorithms","greedy","math"]},{"ContestId":1674,"Index":"D","Name":"A-B-C Sort","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","implementation","sortings"]},{"ContestId":1674,"Index":"C","Name":"Infinite Replacement","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["combinatorics","implementation","strings"]},{"ContestId":1674,"Index":"B","Name":"Dictionary","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":1674,"Index":"A","Name":"Number Transformation","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1673,"Index":"F","Name":"Anti-Theft Road Planning","Type":"PROGRAMMING","Rating":2400,"Points":3250,"Tags":["bitmasks","constructive algorithms","divide and conquer","greedy","interactive","math"]},{"ContestId":1673,"Index":"E","Name":"Power or XOR?","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["bitmasks","combinatorics","math","number theory"]},{"ContestId":1673,"Index":"D","Name":"Lost Arithmetic Progression","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["combinatorics","math","number theory"]},{"ContestId":1673,"Index":"C","Name":"Palindrome Basis","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["brute force","dp","math","number theory"]},{"ContestId":1673,"Index":"B","Name":"A Perfectly Balanced String?","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["brute force","greedy","strings"]},{"ContestId":1673,"Index":"A","Name":"Subtle Substring Subtraction","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["games","greedy","strings"]},{"ContestId":1672,"Index":"I","Name":"PermutationForces","Type":"PROGRAMMING","Rating":3000,"Points":4000,"Tags":["data structures","greedy"]},{"ContestId":1672,"Index":"H","Name":"Zigu Zagu","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":1672,"Index":"G","Name":"Cross Xor","Type":"PROGRAMMING","Rating":3200,"Points":2750,"Tags":["constructive algorithms","graphs","math","matrices"]},{"ContestId":1672,"Index":"F2","Name":"Checker for Array Shuffling","Type":"PROGRAMMING","Rating":2800,"Points":1250,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":1672,"Index":"F1","Name":"Array Shuffling","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["constructive algorithms","graphs","greedy"]},{"ContestId":1672,"Index":"E","Name":"notepad.exe","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["binary search","constructive algorithms","greedy","interactive"]},{"ContestId":1672,"Index":"D","Name":"Cyclic Rotation","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","greedy","implementation","two pointers"]},{"ContestId":1672,"Index":"C","Name":"Unequal Array","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1672,"Index":"B","Name":"I love AAAB","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1672,"Index":"A","Name":"Log Chopping","Type":"PROGRAMMING","Rating":800,"Points":250,"Tags":["games","implementation","math"]},{"ContestId":1671,"Index":"F","Name":"Permutation Counting","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["brute force","combinatorics","dp","fft","math"]},{"ContestId":1671,"Index":"E","Name":"Preorder","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","divide and conquer","dp","dsu","hashing","sortings","trees"]},{"ContestId":1671,"Index":"D","Name":"Insert a Progression","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":1671,"Index":"C","Name":"Dolce Vita","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search","brute force","greedy","math"]},{"ContestId":1671,"Index":"B","Name":"Consecutive Points Segment","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","math","sortings"]},{"ContestId":1671,"Index":"A","Name":"String Building","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1670,"Index":"F","Name":"Jee, You See?","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["bitmasks","combinatorics","dp"]},{"ContestId":1670,"Index":"E","Name":"Hemose on the Tree","Type":"PROGRAMMING","Rating":2200,"Points":2750,"Tags":["bitmasks","constructive algorithms","dfs and similar","trees"]},{"ContestId":1670,"Index":"D","Name":"Very Suspicious","Type":"PROGRAMMING","Rating":1700,"Points":2250,"Tags":["binary search","brute force","geometry","greedy","implementation","math"]},{"ContestId":1670,"Index":"C","Name":"Where is the Pizza?","Type":"PROGRAMMING","Rating":1400,"Points":1750,"Tags":["data structures","dfs and similar","dsu","graphs","implementation","math"]},{"ContestId":1670,"Index":"B","Name":"Dorms War","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","implementation","strings"]},{"ContestId":1670,"Index":"A","Name":"Prof. Slim","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":1669,"Index":"H","Name":"Maximal AND","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["bitmasks","greedy","math"]},{"ContestId":1669,"Index":"G","Name":"Fall Down","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["dfs and similar","implementation"]},{"ContestId":1669,"Index":"F","Name":"Eating Candies","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","data structures","greedy","two pointers"]},{"ContestId":1669,"Index":"E","Name":"2-Letter Strings","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["data structures","math","strings"]},{"ContestId":1669,"Index":"D","Name":"Colorful Stamp","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":1669,"Index":"C","Name":"Odd/Even Increments","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","greedy","implementation","math"]},{"ContestId":1669,"Index":"B","Name":"Triple","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":1669,"Index":"A","Name":"Division?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1668,"Index":"B","Name":"Social Distance","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","math","sortings"]},{"ContestId":1668,"Index":"A","Name":"Direction Change","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":1667,"Index":"F","Name":"Yin Yang","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["implementation"]},{"ContestId":1667,"Index":"E","Name":"Centroid Probabilities","Type":"PROGRAMMING","Rating":3000,"Points":2750,"Tags":["combinatorics","dp","fft","math"]},{"ContestId":1667,"Index":"D","Name":"Edge Elimination","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["constructive algorithms","dfs and similar","dp","trees"]},{"ContestId":1667,"Index":"C","Name":"Half Queen Cover","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["constructive algorithms","math"]},{"ContestId":1667,"Index":"B","Name":"Optimal Partition","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["data structures","dp"]},{"ContestId":1667,"Index":"A","Name":"Make it Increasing","Type":"PROGRAMMING","Rating":1300,"Points":250,"Tags":["brute force","greedy","math"]},{"ContestId":1666,"Index":"L","Name":"Labyrinth","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dfs and similar","graphs"]},{"ContestId":1666,"Index":"K","Name":"Kingdom Partition","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["flows"]},{"ContestId":1666,"Index":"J","Name":"Job Lookup","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["constructive algorithms","dp","shortest paths","trees"]},{"ContestId":1666,"Index":"I","Name":"Interactive Treasure Hunt","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","constructive algorithms","geometry","interactive","math"]},{"ContestId":1666,"Index":"H","Name":"Heroes of Might","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":["math"]},{"ContestId":1666,"Index":"G","Name":"Global Warming","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["geometry","math"]},{"ContestId":1666,"Index":"F","Name":"Fancy Stack","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["combinatorics","dp","implementation"]},{"ContestId":1666,"Index":"E","Name":"Even Split","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["binary search","constructive algorithms","greedy","math"]},{"ContestId":1666,"Index":"D","Name":"Deletive Editing","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy"]},{"ContestId":1666,"Index":"C","Name":"Connect the Points","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","constructive algorithms","geometry"]},{"ContestId":1666,"Index":"B","Name":"Budget Distribution","Type":"PROGRAMMING","Rating":3300,"Points":0,"Tags":[]},{"ContestId":1666,"Index":"A","Name":"Admissible Map","Type":"PROGRAMMING","Rating":3300,"Points":0,"Tags":[]},{"ContestId":1665,"Index":"E","Name":"MinimizOR","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["bitmasks","brute force","data structures","divide and conquer","greedy","implementation","two pointers"]},{"ContestId":1665,"Index":"D","Name":"GCD Guess","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["bitmasks","chinese remainder theorem","constructive algorithms","games","interactive","math","number theory"]},{"ContestId":1665,"Index":"C","Name":"Tree Infection","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["binary search","greedy","sortings","trees"]},{"ContestId":1665,"Index":"B","Name":"Array Cloning Technique","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":1665,"Index":"A","Name":"GCD vs LCM","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1663,"Index":"H","Name":"Cross-Language Program","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","constructive algorithms"]},{"ContestId":1663,"Index":"G","Name":"Six Characters","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","constructive algorithms","strings"]},{"ContestId":1663,"Index":"F","Name":"In Every Generation...","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","strings"]},{"ContestId":1663,"Index":"E","Name":"Are You Safe?","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1663,"Index":"D","Name":"Is it rated - 3","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","combinatorics","dp","math"]},{"ContestId":1663,"Index":"C","Name":"P≈çja Verdon","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation","math"]},{"ContestId":1663,"Index":"B","Name":"Mike's Sequence","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","divide and conquer","implementation","math"]},{"ContestId":1663,"Index":"A","Name":"Who Tested?","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","expression parsing","trees"]},{"ContestId":1662,"Index":"O","Name":"Circular Maze","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["brute force","dfs and similar","graphs","implementation"]},{"ContestId":1662,"Index":"N","Name":"Drone Photo","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["combinatorics","math","sortings"]},{"ContestId":1662,"Index":"M","Name":"Bottle Arrangements","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1662,"Index":"L","Name":"Il Derby della Madonnina","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["data structures","dp","math"]},{"ContestId":1662,"Index":"K","Name":"Pandemic Restrictions","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["geometry","ternary search"]},{"ContestId":1662,"Index":"J","Name":"Training Camp","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["flows","graphs"]},{"ContestId":1662,"Index":"I","Name":"Ice Cream Shop","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["brute force","implementation","sortings"]},{"ContestId":1662,"Index":"H","Name":"Boundary","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["brute force","math"]},{"ContestId":1662,"Index":"G","Name":"Gastronomic Event","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["dp","greedy","trees"]},{"ContestId":1662,"Index":"F","Name":"Antennas","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["data structures","dfs and similar","graphs","graphs","implementation","implementation","shortest paths","shortest paths"]},{"ContestId":1662,"Index":"E","Name":"Round Table","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["math"]},{"ContestId":1662,"Index":"D","Name":"Evolution of Weasels","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["greedy","implementation","strings"]},{"ContestId":1662,"Index":"C","Name":"European Trip","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["dp","graphs","math","matrices"]},{"ContestId":1662,"Index":"B","Name":"Toys","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["greedy","strings"]},{"ContestId":1662,"Index":"A","Name":"Organizing SWERC","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1661,"Index":"F","Name":"Teleporters","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["binary search","greedy"]},{"ContestId":1661,"Index":"E","Name":"Narrow Components","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["brute force","data structures","dp","dsu","math","trees"]},{"ContestId":1661,"Index":"D","Name":"Progressions Covering","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1661,"Index":"C","Name":"Water the Trees","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","greedy","math"]},{"ContestId":1661,"Index":"B","Name":"Getting Zero","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["bitmasks","brute force","dfs and similar","dp","graphs","greedy","shortest paths"]},{"ContestId":1661,"Index":"A","Name":"Array Balancing","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1660,"Index":"F2","Name":"Promising String (hard version)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","implementation","math","strings"]},{"ContestId":1660,"Index":"F1","Name":"Promising String (easy version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","implementation","math","strings"]},{"ContestId":1660,"Index":"E","Name":"Matrix and Shifts","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","constructive algorithms","greedy","implementation"]},{"ContestId":1660,"Index":"D","Name":"Maximum Product Strikes Back","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","implementation","math","two pointers"]},{"ContestId":1660,"Index":"C","Name":"Get an Even String","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dp","greedy","strings"]},{"ContestId":1660,"Index":"B","Name":"Vlad and Candies","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1660,"Index":"A","Name":"Vasya and Coins","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1659,"Index":"F","Name":"Tree and Permutation Game","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["dfs and similar","games","graphs","trees"]},{"ContestId":1659,"Index":"E","Name":"AND-MEX Walk","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["bitmasks","brute force","constructive algorithms","dfs and similar","dsu","graphs"]},{"ContestId":1659,"Index":"D","Name":"Reverse Sort Sum","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms","data structures","greedy","implementation","math","two pointers"]},{"ContestId":1659,"Index":"C","Name":"Line Empire","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["binary search","brute force","dp","greedy","implementation","math"]},{"ContestId":1659,"Index":"B","Name":"Bit Flipping","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["bitmasks","constructive algorithms","greedy","strings"]},{"ContestId":1659,"Index":"A","Name":"Red Versus Blue","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1658,"Index":"F","Name":"Juju and Binary String","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["brute force","constructive algorithms","greedy","math"]},{"ContestId":1658,"Index":"E","Name":"Gojou and Matrix Game","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","dp","games","hashing","implementation","math","number theory","sortings"]},{"ContestId":1658,"Index":"D2","Name":"388535 (Hard Version)","Type":"PROGRAMMING","Rating":2300,"Points":750,"Tags":["bitmasks","brute force","data structures","math"]},{"ContestId":1658,"Index":"D1","Name":"388535 (Easy Version)","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["bitmasks","math"]},{"ContestId":1658,"Index":"C","Name":"Shinju and the Lost Permutation","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["constructive algorithms","math"]},{"ContestId":1658,"Index":"B","Name":"Marin and Anti-coprime Permutation","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["combinatorics","math","number theory"]},{"ContestId":1658,"Index":"A","Name":"Marin and Photoshoot","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":1657,"Index":"F","Name":"Words on Tree","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["2-sat","dfs and similar","dsu","graphs","trees"]},{"ContestId":1657,"Index":"E","Name":"Star MST","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["combinatorics","dp","graph matchings","math"]},{"ContestId":1657,"Index":"D","Name":"For Gamers. By Gamers.","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","brute force","greedy","math","sortings"]},{"ContestId":1657,"Index":"C","Name":"Bracket Sequence Deletion","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1657,"Index":"B","Name":"XY Sequence","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1657,"Index":"A","Name":"Integer Moves","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","math"]},{"ContestId":1656,"Index":"I","Name":"Neighbour Ordering","Type":"PROGRAMMING","Rating":3500,"Points":4500,"Tags":["constructive algorithms","graphs"]},{"ContestId":1656,"Index":"H","Name":"Equal LCM Subsets","Type":"PROGRAMMING","Rating":3200,"Points":3750,"Tags":["data structures","math","number theory"]},{"ContestId":1656,"Index":"G","Name":"Cycle Palindrome","Type":"PROGRAMMING","Rating":3200,"Points":3250,"Tags":["constructive algorithms","graphs","math"]},{"ContestId":1656,"Index":"F","Name":"Parametric MST","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["binary search","constructive algorithms","graphs","greedy","math","sortings"]},{"ContestId":1656,"Index":"E","Name":"Equal Tree Sums","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["constructive algorithms","dfs and similar","math","trees"]},{"ContestId":1656,"Index":"D","Name":"K-good","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1656,"Index":"C","Name":"Make Equal With Mod","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["constructive algorithms","math","number theory","sortings"]},{"ContestId":1656,"Index":"B","Name":"Subtract Operation","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["data structures","greedy","math","two pointers"]},{"ContestId":1656,"Index":"A","Name":"Good Pairs","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math","sortings"]},{"ContestId":1654,"Index":"H","Name":"Three Minimums","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["combinatorics","constructive algorithms","divide and conquer","dp","fft","math"]},{"ContestId":1654,"Index":"G","Name":"Snowy Mountain","Type":"PROGRAMMING","Rating":2900,"Points":3500,"Tags":["data structures","dfs and similar","graphs","greedy","shortest paths","trees"]},{"ContestId":1654,"Index":"F","Name":"Minimal String Xoration","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["bitmasks","data structures","divide and conquer","greedy","hashing","sortings","strings"]},{"ContestId":1654,"Index":"E","Name":"Arithmetic Operations","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["brute force","data structures","graphs","math"]},{"ContestId":1654,"Index":"D","Name":"Potion Brewing Class","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["dfs and similar","math","number theory","trees"]},{"ContestId":1654,"Index":"C","Name":"Alice and the Cake","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["data structures","greedy","implementation","sortings"]},{"ContestId":1654,"Index":"B","Name":"Prefix Removals","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["strings"]},{"ContestId":1654,"Index":"A","Name":"Maximum Cake Tastiness","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","implementation","sortings"]},{"ContestId":1651,"Index":"F","Name":"Tower Defense","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["binary search","brute force","data structures"]},{"ContestId":1651,"Index":"E","Name":"Sum of Matchings","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["brute force","combinatorics","constructive algorithms","dfs and similar","graph matchings","greedy","math"]},{"ContestId":1651,"Index":"D","Name":"Nearest Excluded Points","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures","dfs and similar","graphs","shortest paths"]},{"ContestId":1651,"Index":"C","Name":"Fault-tolerant Network","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","data structures","implementation"]},{"ContestId":1651,"Index":"B","Name":"Prove Him Wrong","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1651,"Index":"A","Name":"Playoff","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1650,"Index":"G","Name":"Counting Shortcuts","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","dfs and similar","dp","graphs","shortest paths"]},{"ContestId":1650,"Index":"F","Name":"Vitaly and Advanced Useless Algorithms","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","greedy","implementation"]},{"ContestId":1650,"Index":"E","Name":"Rescheduling the Exam","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures","greedy","implementation","math","sortings"]},{"ContestId":1650,"Index":"D","Name":"Twist the Permutation","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","constructive algorithms","implementation","math"]},{"ContestId":1650,"Index":"C","Name":"Weight of the System of Nested Segments","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","hashing","implementation","sortings"]},{"ContestId":1650,"Index":"B","Name":"DIV + MOD","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1650,"Index":"A","Name":"Deletions of Two Adjacent Letters","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1649,"Index":"B","Name":"Game of Ball Passing","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1649,"Index":"A","Name":"Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1648,"Index":"F","Name":"Two Avenues","Type":"PROGRAMMING","Rating":3500,"Points":3750,"Tags":["data structures","dfs and similar","graphs"]},{"ContestId":1648,"Index":"E","Name":"Air Reform","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["data structures","dfs and similar","divide and conquer","dsu","graphs","implementation","trees"]},{"ContestId":1648,"Index":"D","Name":"Serious Business","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["data structures","divide and conquer","dp","implementation","shortest paths"]},{"ContestId":1648,"Index":"C","Name":"Tyler and Strings","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["combinatorics","data structures","implementation"]},{"ContestId":1648,"Index":"B","Name":"Integral Array","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["brute force","constructive algorithms","data structures","math"]},{"ContestId":1648,"Index":"A","Name":"Weird Sum","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["combinatorics","data structures","geometry","math","matrices","sortings"]},{"ContestId":1647,"Index":"F","Name":"Madoka and Laziness","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["dp","greedy"]},{"ContestId":1647,"Index":"E","Name":"Madoka and the Sixth-graders","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","dfs and similar","greedy"]},{"ContestId":1647,"Index":"D","Name":"Madoka and the Best School in Russia","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms","dp","math","number theory"]},{"ContestId":1647,"Index":"C","Name":"Madoka and Childish Pranks","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1647,"Index":"B","Name":"Madoka and the Elegant Gift","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["brute force","constructive algorithms","graphs","implementation"]},{"ContestId":1647,"Index":"A","Name":"Madoka and Math Dad","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":1646,"Index":"F","Name":"Playing Around the Table","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1646,"Index":"E","Name":"Power Board","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["brute force","dp","math","number theory"]},{"ContestId":1646,"Index":"D","Name":"Weight the Tree","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","dfs and similar","dp","implementation","trees"]},{"ContestId":1646,"Index":"C","Name":"Factorials and Powers of Two","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["bitmasks","brute force","constructive algorithms","dp","math"]},{"ContestId":1646,"Index":"B","Name":"Quality vs Quantity","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["brute force","constructive algorithms","greedy","sortings","two pointers"]},{"ContestId":1646,"Index":"A","Name":"Square Counting","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["math"]},{"ContestId":1644,"Index":"F","Name":"Basis","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["combinatorics","fft","math","number theory"]},{"ContestId":1644,"Index":"E","Name":"Expand the Path","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","combinatorics","data structures","implementation","math"]},{"ContestId":1644,"Index":"D","Name":"Cross Coloring","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["data structures","implementation","math"]},{"ContestId":1644,"Index":"C","Name":"Increase Subarray Sums","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","dp","greedy","implementation"]},{"ContestId":1644,"Index":"B","Name":"Anti-Fibonacci Permutation","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":1644,"Index":"A","Name":"Doors and Keys","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1642,"Index":"B","Name":"Power Walking","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["greedy"]},{"ContestId":1642,"Index":"A","Name":"Hard Way","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["geometry"]},{"ContestId":1641,"Index":"F","Name":"Covering Circle","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["geometry"]},{"ContestId":1641,"Index":"E","Name":"Special Positions","Type":"PROGRAMMING","Rating":3300,"Points":2250,"Tags":["combinatorics","divide and conquer","fft","math"]},{"ContestId":1641,"Index":"D","Name":"Two Arrays","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["bitmasks","brute force","combinatorics","greedy","hashing","math","two pointers"]},{"ContestId":1641,"Index":"C","Name":"Anonymity Is Important","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["binary search","brute force","data structures","dsu","greedy","sortings"]},{"ContestId":1641,"Index":"B","Name":"Repetitions Decoding","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["constructive algorithms","implementation","sortings"]},{"ContestId":1641,"Index":"A","Name":"Great Sequence","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","greedy","sortings"]},{"ContestId":1639,"Index":"K","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1639,"Index":"J","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1639,"Index":"I","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1639,"Index":"H","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1639,"Index":"G","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1639,"Index":"F","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1639,"Index":"E","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1639,"Index":"D","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1639,"Index":"C","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1639,"Index":"B","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1639,"Index":"A","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["graphs","interactive"]},{"ContestId":1638,"Index":"F","Name":"Two Posters","Type":"PROGRAMMING","Rating":3200,"Points":3250,"Tags":["brute force","data structures","greedy","two pointers"]},{"ContestId":1638,"Index":"E","Name":"Colorful Operations","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["brute force","data structures","implementation"]},{"ContestId":1638,"Index":"D","Name":"Big Brush","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["constructive algorithms","data structures","greedy","implementation"]},{"ContestId":1638,"Index":"C","Name":"Inversion Graph","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["data structures","dsu","graphs","math"]},{"ContestId":1638,"Index":"B","Name":"Odd Swap Sort","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["data structures","math","sortings"]},{"ContestId":1638,"Index":"A","Name":"Reverse","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1637,"Index":"H","Name":"Minimize Inversions Number","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["data structures","greedy","math","sortings"]},{"ContestId":1637,"Index":"G","Name":"Birthday","Type":"PROGRAMMING","Rating":3000,"Points":4000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1637,"Index":"F","Name":"Towers","Type":"PROGRAMMING","Rating":2500,"Points":3250,"Tags":["constructive algorithms","dfs and similar","dp","greedy","trees"]},{"ContestId":1637,"Index":"E","Name":"Best Pair","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["binary search","brute force","implementation"]},{"ContestId":1637,"Index":"D","Name":"Yet Another Minimization Problem","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dp","greedy","math"]},{"ContestId":1637,"Index":"C","Name":"Andrew and Stones","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["greedy","implementation"]},{"ContestId":1637,"Index":"B","Name":"MEX and Array","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","dp","greedy","math"]},{"ContestId":1637,"Index":"A","Name":"Sorting Parts","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","sortings"]},{"ContestId":1635,"Index":"F","Name":"Closest Pair ","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["data structures","greedy"]},{"ContestId":1635,"Index":"E","Name":"Cars ","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["2-sat","constructive algorithms","dfs and similar","dsu","graphs","greedy","sortings"]},{"ContestId":1635,"Index":"D","Name":"Infinite Set","Type":"PROGRAMMING","Rating":1800,"Points":2250,"Tags":["bitmasks","dp","math","matrices","number theory","strings"]},{"ContestId":1635,"Index":"C","Name":"Differential Sorting","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1635,"Index":"B","Name":"Avoid Local Maximums","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["greedy"]},{"ContestId":1635,"Index":"A","Name":"Min Or Sum","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["bitmasks","greedy"]},{"ContestId":1634,"Index":"F","Name":"Fibonacci Additions","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["brute force","data structures","hashing","implementation","math"]},{"ContestId":1634,"Index":"E","Name":"Fair Share","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["constructive algorithms","data structures","dfs and similar","graph matchings","graphs"]},{"ContestId":1634,"Index":"D","Name":"Finding Zero","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","interactive","math"]},{"ContestId":1634,"Index":"C","Name":"OKEA","Type":"PROGRAMMING","Rating":1000,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":1634,"Index":"B","Name":"Fortune Telling","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["bitmasks","math"]},{"ContestId":1634,"Index":"A","Name":"Reverse and Concatenate","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","strings"]},{"ContestId":1633,"Index":"F","Name":"Perfect Matching","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["data structures","divide and conquer","interactive","trees"]},{"ContestId":1633,"Index":"E","Name":"Spanning Tree Queries","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","data structures","dfs and similar","dsu","graphs","greedy","math","sortings","trees"]},{"ContestId":1633,"Index":"D","Name":"Make Them Equal","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1633,"Index":"C","Name":"Kill the Monster","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","math"]},{"ContestId":1633,"Index":"B","Name":"Minority","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1633,"Index":"A","Name":"Div. 7","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force"]},{"ContestId":1632,"Index":"E2","Name":"Distance Tree (hard version)","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["binary search","dfs and similar","shortest paths","trees"]},{"ContestId":1632,"Index":"E1","Name":"Distance Tree (easy version)","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["binary search","data structures","dfs and similar","graphs","shortest paths","trees"]},{"ContestId":1632,"Index":"D","Name":"New Year Concert","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","data structures","greedy","math","number theory","two pointers"]},{"ContestId":1632,"Index":"C","Name":"Strange Test","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","bitmasks","brute force","dp","math"]},{"ContestId":1632,"Index":"B","Name":"Roof Construction","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":1632,"Index":"A","Name":"ABC","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1631,"Index":"B","Name":"Fun with Even Subarrays","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["dp","greedy"]},{"ContestId":1631,"Index":"A","Name":"Min Max Swap","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1630,"Index":"F","Name":"Making It Bipartite","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["flows","graph matchings","graphs","number theory"]},{"ContestId":1630,"Index":"E","Name":"Expected Components","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["combinatorics","math","number theory","probabilities"]},{"ContestId":1630,"Index":"D","Name":"Flipping Range","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms","dp","greedy","number theory"]},{"ContestId":1630,"Index":"C","Name":"Paint the Middle","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["dp","greedy","sortings","two pointers"]},{"ContestId":1630,"Index":"B","Name":"Range and Partition","Type":"PROGRAMMING","Rating":1800,"Points":1250,"Tags":["binary search","constructive algorithms","data structures","greedy","two pointers"]},{"ContestId":1630,"Index":"A","Name":"And Matching","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":1629,"Index":"B","Name":"GCD Arrays","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["greedy","math","number theory"]},{"ContestId":1629,"Index":"A","Name":"Download More RAM","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","sortings"]},{"ContestId":1628,"Index":"F","Name":"Spaceship Crisis Management","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["binary search","data structures","geometry","sortings"]},{"ContestId":1628,"Index":"E","Name":"Groceries in Meteor Town","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["binary search","data structures","dsu","trees"]},{"ContestId":1628,"Index":"D2","Name":"Game on Sum (Hard Version)","Type":"PROGRAMMING","Rating":2400,"Points":750,"Tags":["combinatorics","dp","games","math"]},{"ContestId":1628,"Index":"D1","Name":"Game on Sum (Easy Version)","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["combinatorics","dp","games","math"]},{"ContestId":1628,"Index":"C","Name":"Grid Xor","Type":"PROGRAMMING","Rating":2300,"Points":1250,"Tags":["constructive algorithms","greedy","implementation","interactive","math"]},{"ContestId":1628,"Index":"B","Name":"Peculiar Movie Preferences","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["greedy","strings"]},{"ContestId":1628,"Index":"A","Name":"Meximum Array","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["binary search","constructive algorithms","greedy","implementation","math","two pointers"]},{"ContestId":1627,"Index":"F","Name":"Not Splitting","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["geometry","graphs","greedy","implementation","shortest paths"]},{"ContestId":1627,"Index":"E","Name":"Not Escaping","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["data structures","dp","implementation","shortest paths","two pointers"]},{"ContestId":1627,"Index":"D","Name":"Not Adding","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["brute force","dp","math","number theory"]},{"ContestId":1627,"Index":"C","Name":"Not Assigning","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["constructive algorithms","dfs and similar","number theory","trees"]},{"ContestId":1627,"Index":"B","Name":"Not Sitting","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["games","greedy","sortings"]},{"ContestId":1627,"Index":"A","Name":"Not Shading","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1626,"Index":"F","Name":"A Random Code Problem","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["combinatorics","dp","math","number theory","probabilities"]},{"ContestId":1626,"Index":"E","Name":"Black and White Tree","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dfs and similar","greedy","trees"]},{"ContestId":1626,"Index":"D","Name":"Martial Arts Tournament","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","brute force","greedy","math"]},{"ContestId":1626,"Index":"C","Name":"Monsters And Spells","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","data structures","dp","greedy","implementation","math","two pointers"]},{"ContestId":1626,"Index":"B","Name":"Minor Reduction","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","strings"]},{"ContestId":1626,"Index":"A","Name":"Equidistant Letters","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","sortings"]},{"ContestId":1625,"Index":"E2","Name":"Cats on the Upgrade (hard version)","Type":"PROGRAMMING","Rating":2800,"Points":1250,"Tags":["binary search","data structures","dfs and similar","graphs","trees"]},{"ContestId":1625,"Index":"E1","Name":"Cats on the Upgrade (easy version)","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["brute force","data structures","dfs and similar","divide and conquer","dp","graphs","trees"]},{"ContestId":1625,"Index":"D","Name":"Binary Spiders","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["bitmasks","data structures","implementation","math","sortings","trees"]},{"ContestId":1625,"Index":"C","Name":"Road Optimization","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dp"]},{"ContestId":1625,"Index":"B","Name":"Elementary Particles","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","greedy","sortings"]},{"ContestId":1625,"Index":"A","Name":"Ancient Civilization","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["bitmasks","greedy","math"]},{"ContestId":1624,"Index":"G","Name":"MinOr Tree","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["bitmasks","dfs and similar","dsu","graphs","greedy"]},{"ContestId":1624,"Index":"F","Name":"Interacdive Problem","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","constructive algorithms","interactive"]},{"ContestId":1624,"Index":"E","Name":"Masha-forgetful","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","constructive algorithms","dp","hashing","implementation","strings"]},{"ContestId":1624,"Index":"D","Name":"Palindromes Coloring","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","greedy","sortings","strings"]},{"ContestId":1624,"Index":"C","Name":"Division by Two and Permutation","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","flows","graph matchings","greedy","math"]},{"ContestId":1624,"Index":"B","Name":"Make AP","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation","math"]},{"ContestId":1624,"Index":"A","Name":"Plus One on the Subset","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1623,"Index":"E","Name":"Middle Duplication","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["data structures","dfs and similar","greedy","strings","trees"]},{"ContestId":1623,"Index":"D","Name":"Robot Cleaner Revisit","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["implementation","math","probabilities"]},{"ContestId":1623,"Index":"C","Name":"Balanced Stone Heaps","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["binary search","greedy"]},{"ContestId":1623,"Index":"B","Name":"Game on Ranges","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","dfs and similar","implementation","sortings"]},{"ContestId":1623,"Index":"A","Name":"Robot Cleaner","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":1622,"Index":"F","Name":"Quadratic Set","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["constructive algorithms","hashing","math","number theory"]},{"ContestId":1622,"Index":"E","Name":"Math Test","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["bitmasks","brute force","greedy"]},{"ContestId":1622,"Index":"D","Name":"Shuffle","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["combinatorics","math","two pointers"]},{"ContestId":1622,"Index":"C","Name":"Set or Decrease","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","brute force","greedy","sortings"]},{"ContestId":1622,"Index":"B","Name":"Berland Music","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["data structures","greedy","math","sortings"]},{"ContestId":1622,"Index":"A","Name":"Construct a Rectangle","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["geometry","math"]},{"ContestId":1621,"Index":"I","Name":"Two Sequences","Type":"PROGRAMMING","Rating":3500,"Points":4500,"Tags":["data structures","hashing","string suffix structures"]},{"ContestId":1621,"Index":"H","Name":"Trains and Airplanes","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["dfs and similar","graphs","shortest paths","trees"]},{"ContestId":1621,"Index":"G","Name":"Weighted Increasing Subsequences","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["data structures","dp","math"]},{"ContestId":1621,"Index":"F","Name":"Strange Instructions","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["data structures","greedy","implementation"]},{"ContestId":1621,"Index":"E","Name":"New School","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["binary search","data structures","dp","greedy","implementation","sortings"]},{"ContestId":1621,"Index":"D","Name":"The Winter Hike","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1621,"Index":"C","Name":"Hidden Permutations","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dfs and similar","interactive","math"]},{"ContestId":1621,"Index":"B","Name":"Integers Shop","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["data structures","greedy","implementation"]},{"ContestId":1621,"Index":"A","Name":"Stable Arrangement of Rooks","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":1620,"Index":"G","Name":"Subsequences Galore","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["bitmasks","combinatorics","dp"]},{"ContestId":1620,"Index":"F","Name":"Bipartite Array","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1620,"Index":"E","Name":"Replace the Numbers","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms","data structures","dsu","implementation"]},{"ContestId":1620,"Index":"D","Name":"Exact Change","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":1620,"Index":"C","Name":"BA-String","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","dp","greedy","implementation","math"]},{"ContestId":1620,"Index":"B","Name":"Triangles on a Rectangle","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["geometry","greedy","math"]},{"ContestId":1620,"Index":"A","Name":"Equal or Not Equal","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","dsu","implementation"]},{"ContestId":1619,"Index":"H","Name":"Permutation and Queries","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","data structures","divide and conquer","two pointers"]},{"ContestId":1619,"Index":"G","Name":"Unusual Minesweeper","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","dfs and similar","dsu","greedy","sortings"]},{"ContestId":1619,"Index":"F","Name":"Let's Play the Hat?","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","constructive algorithms","greedy","math"]},{"ContestId":1619,"Index":"E","Name":"MEX and Increments","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","data structures","dp","greedy","implementation","math","sortings"]},{"ContestId":1619,"Index":"D","Name":"New Year's Problem","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","greedy","sortings"]},{"ContestId":1619,"Index":"C","Name":"Wrong Addition","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation"]},{"ContestId":1619,"Index":"B","Name":"Squares and Cubes","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1619,"Index":"A","Name":"Square String?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1618,"Index":"G","Name":"Trader Problem","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","dsu","greedy","sortings"]},{"ContestId":1618,"Index":"F","Name":"Reverse","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["bitmasks","constructive algorithms","dfs and similar","implementation","math","strings"]},{"ContestId":1618,"Index":"E","Name":"Singers' Tour","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1618,"Index":"D","Name":"Array and Operations","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dp","greedy","math"]},{"ContestId":1618,"Index":"C","Name":"Paint the Array","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math"]},{"ContestId":1618,"Index":"B","Name":"Missing Bigram","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1618,"Index":"A","Name":"Polycarp and Sums of Subsequences","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math","sortings"]},{"ContestId":1617,"Index":"E","Name":"Christmas Chocolates","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["dfs and similar","dp","games","graphs","implementation","math","number theory","shortest paths","trees"]},{"ContestId":1617,"Index":"D2","Name":"Too Many Impostors (hard version)","Type":"PROGRAMMING","Rating":2400,"Points":1000,"Tags":["constructive algorithms","implementation","interactive","math"]},{"ContestId":1617,"Index":"D1","Name":"Too Many Impostors (easy version)","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["constructive algorithms","implementation","interactive"]},{"ContestId":1617,"Index":"C","Name":"Paprika and Permutation","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["binary search","greedy","math","sortings"]},{"ContestId":1617,"Index":"B","Name":"GCD Problem","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["brute force","constructive algorithms","math","number theory"]},{"ContestId":1617,"Index":"A","Name":"Forbidden Subsequence","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["constructive algorithms","greedy","sortings","strings"]},{"ContestId":1616,"Index":"H","Name":"Keep XOR Low","Type":"PROGRAMMING","Rating":3000,"Points":4000,"Tags":["bitmasks","combinatorics","data structures","divide and conquer","dp","math"]},{"ContestId":1616,"Index":"G","Name":"Just Add an Edge","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["dfs and similar","dp","graphs"]},{"ContestId":1616,"Index":"F","Name":"Tricolor Triangles","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["brute force","graphs","math","matrices"]},{"ContestId":1616,"Index":"E","Name":"Lexicographically Small Enough","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["brute force","data structures","greedy","strings"]},{"ContestId":1616,"Index":"D","Name":"Keep the Average High","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dp","greedy","math"]},{"ContestId":1616,"Index":"C","Name":"Representative Edges","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["brute force","geometry","implementation","math"]},{"ContestId":1616,"Index":"B","Name":"Mirror in the String","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","strings"]},{"ContestId":1616,"Index":"A","Name":"Integer Diversity","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1615,"Index":"H","Name":"Reindeer Games","Type":"PROGRAMMING","Rating":3000,"Points":4000,"Tags":["binary search","constructive algorithms","data structures","divide and conquer","flows","graphs","shortest paths"]},{"ContestId":1615,"Index":"G","Name":"Maximum Adjacent Pairs","Type":"PROGRAMMING","Rating":3300,"Points":3750,"Tags":["constructive algorithms","graph matchings"]},{"ContestId":1615,"Index":"F","Name":"LEGOndary Grandmaster","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["combinatorics","dp","math"]},{"ContestId":1615,"Index":"E","Name":"Purple Crayon","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["data structures","dfs and similar","games","graphs","greedy","math","sortings","trees"]},{"ContestId":1615,"Index":"D","Name":"X(or)-mas Tree","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["bitmasks","dfs and similar","dsu","graphs","trees"]},{"ContestId":1615,"Index":"C","Name":"Menorah","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["brute force","graphs","greedy","math"]},{"ContestId":1615,"Index":"B","Name":"And It's Non-Zero","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["bitmasks","greedy","math"]},{"ContestId":1615,"Index":"A","Name":"Closing The Gap","Type":"PROGRAMMING","Rating":800,"Points":250,"Tags":["greedy","math"]},{"ContestId":1614,"Index":"E","Name":"Divan and a Cottage","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["binary search","data structures"]},{"ContestId":1614,"Index":"D2","Name":"Divan and Kostomuksha (hard version)","Type":"PROGRAMMING","Rating":2300,"Points":1000,"Tags":["dp","number theory"]},{"ContestId":1614,"Index":"D1","Name":"Divan and Kostomuksha (easy version)","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dp","number theory"]},{"ContestId":1614,"Index":"C","Name":"Divan and bitwise operations","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["bitmasks","combinatorics","constructive algorithms","dp","math"]},{"ContestId":1614,"Index":"B","Name":"Divan and a New Project ","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["constructive algorithms","sortings"]},{"ContestId":1614,"Index":"A","Name":"Divan and a Store","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":1613,"Index":"F","Name":"Tree Coloring","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["combinatorics","divide and conquer","fft"]},{"ContestId":1613,"Index":"E","Name":"Crazy Robot","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dfs and similar","graphs"]},{"ContestId":1613,"Index":"D","Name":"MEX Sequences","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dp","math"]},{"ContestId":1613,"Index":"C","Name":"Poisoned Dagger","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search"]},{"ContestId":1613,"Index":"B","Name":"Absent Remainder","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":1613,"Index":"A","Name":"Long Comparison","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation","math"]},{"ContestId":1612,"Index":"G","Name":"Max Sum Array","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["combinatorics","constructive algorithms","greedy","sortings"]},{"ContestId":1612,"Index":"F","Name":"Armor and Weapons","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["brute force","dp","greedy","shortest paths"]},{"ContestId":1612,"Index":"E","Name":"Messages","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","dp","greedy","probabilities","sortings"]},{"ContestId":1612,"Index":"D","Name":"X-Magic Pair","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["math","number theory"]},{"ContestId":1612,"Index":"C","Name":"Chat Ban","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","math"]},{"ContestId":1612,"Index":"B","Name":"Special Permutation","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1612,"Index":"A","Name":"Distance","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","constructive algorithms"]},{"ContestId":1611,"Index":"G","Name":"Robot and Candies","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","graph matchings","greedy"]},{"ContestId":1611,"Index":"F","Name":"ATM and Students","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","data structures","two pointers"]},{"ContestId":1611,"Index":"E2","Name":"Escape The Maze (hard version)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar","dp","greedy","shortest paths","trees"]},{"ContestId":1611,"Index":"E1","Name":"Escape The Maze (easy version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","greedy","shortest paths","trees","two pointers"]},{"ContestId":1611,"Index":"D","Name":"Weights Assignment For Tree Edges","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","trees"]},{"ContestId":1611,"Index":"C","Name":"Polycarp Recovers the Permutation","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1611,"Index":"B","Name":"Team Composition: Programmers and Mathematicians","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["binary search","constructive algorithms","math"]},{"ContestId":1611,"Index":"A","Name":"Make Even","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1610,"Index":"I","Name":"Mashtali vs AtCoder","Type":"PROGRAMMING","Rating":3100,"Points":4000,"Tags":["games","trees"]},{"ContestId":1610,"Index":"H","Name":"Squid Game","Type":"PROGRAMMING","Rating":3100,"Points":3500,"Tags":["data structures","dfs and similar","greedy","trees"]},{"ContestId":1610,"Index":"G","Name":"AmShZ Wins a Bet","Type":"PROGRAMMING","Rating":3300,"Points":3250,"Tags":["data structures","greedy","hashing"]},{"ContestId":1610,"Index":"F","Name":"Mashtali: a Space Oddysey","Type":"PROGRAMMING","Rating":3000,"Points":2750,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":1610,"Index":"E","Name":"AmShZ and G.O.A.T.","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["binary search","brute force","greedy","implementation","math"]},{"ContestId":1610,"Index":"D","Name":"Not Quite Lee","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":1610,"Index":"C","Name":"Keshi Is Throwing a Party","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","greedy"]},{"ContestId":1610,"Index":"B","Name":"Kalindrome Array","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","two pointers"]},{"ContestId":1610,"Index":"A","Name":"Anti Light's Cell Guessing","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math"]},{"ContestId":1609,"Index":"H","Name":"Pushing Robots","Type":"PROGRAMMING","Rating":3500,"Points":3750,"Tags":[]},{"ContestId":1609,"Index":"G","Name":"A Stroll Around the Matrix","Type":"PROGRAMMING","Rating":3000,"Points":3250,"Tags":["data structures","greedy","math"]},{"ContestId":1609,"Index":"F","Name":"Interesting Sections","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["data structures","divide and conquer","meet-in-the-middle","two pointers"]},{"ContestId":1609,"Index":"E","Name":"William The Oblivious ","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["bitmasks","data structures","dp","matrices"]},{"ContestId":1609,"Index":"D","Name":"Social Network","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["dsu","graphs","greedy","implementation","trees"]},{"ContestId":1609,"Index":"C","Name":"Complex Market Analysis","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["binary search","dp","implementation","number theory","schedules","two pointers"]},{"ContestId":1609,"Index":"B","Name":"William the Vigilant","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":1609,"Index":"A","Name":"Divide and Multiply","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation","math","number theory"]},{"ContestId":1608,"Index":"G","Name":"Alphabetic Tree","Type":"PROGRAMMING","Rating":3500,"Points":2750,"Tags":["binary search","data structures","dfs and similar","hashing","string suffix structures","strings","trees"]},{"ContestId":1608,"Index":"F","Name":"MEX counting","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["combinatorics","dp","implementation"]},{"ContestId":1608,"Index":"E","Name":"The Cells on the Paper","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["binary search","implementation","sortings"]},{"ContestId":1608,"Index":"D","Name":"Dominoes","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["combinatorics","fft","graphs","math","number theory"]},{"ContestId":1608,"Index":"C","Name":"Game Master","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["data structures","dfs and similar","dp","graphs","greedy","two pointers"]},{"ContestId":1608,"Index":"B","Name":"Build the Permutation","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["constructive algorithms","greedy"]},{"ContestId":1608,"Index":"A","Name":"Find Array","Type":"PROGRAMMING","Rating":800,"Points":250,"Tags":["constructive algorithms","math"]},{"ContestId":1607,"Index":"H","Name":"Banquet Preparations 2","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy","sortings","two pointers"]},{"ContestId":1607,"Index":"G","Name":"Banquet Preparations 1","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy"]},{"ContestId":1607,"Index":"F","Name":"Robot on the Board 2","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["brute force","dfs and similar","graphs","implementation"]},{"ContestId":1607,"Index":"E","Name":"Robot on the Board 1","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":1607,"Index":"D","Name":"Blue-Red Permutation","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy","math","sortings"]},{"ContestId":1607,"Index":"C","Name":"Minimum Extraction","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","sortings"]},{"ContestId":1607,"Index":"B","Name":"Odd Grasshopper","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1607,"Index":"A","Name":"Linear Keyboard","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1606,"Index":"F","Name":"Tree Queries","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["brute force","dp","trees"]},{"ContestId":1606,"Index":"E","Name":"Arena","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","dp","math"]},{"ContestId":1606,"Index":"D","Name":"Red-Blue Matrix","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","constructive algorithms","implementation","sortings"]},{"ContestId":1606,"Index":"C","Name":"Banknotes","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","number theory"]},{"ContestId":1606,"Index":"B","Name":"Update Files","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","implementation","math"]},{"ContestId":1606,"Index":"A","Name":"AB Balance","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["strings"]},{"ContestId":1605,"Index":"F","Name":"PalindORme","Type":"PROGRAMMING","Rating":2900,"Points":3500,"Tags":["combinatorics","dp"]},{"ContestId":1605,"Index":"E","Name":"Array Equalizer","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","greedy","implementation","math","number theory","sortings","two pointers"]},{"ContestId":1605,"Index":"D","Name":"Treelabeling","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["bitmasks","constructive algorithms","dfs and similar","games","greedy","implementation","trees"]},{"ContestId":1605,"Index":"C","Name":"Dominant Character","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["brute force","greedy","implementation","strings"]},{"ContestId":1605,"Index":"B","Name":"Reverse Sort","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":1605,"Index":"A","Name":"A.M. Deviation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math","number theory"]},{"ContestId":1604,"Index":"B","Name":"XOR Specia-LIS-t","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":[]},{"ContestId":1604,"Index":"A","Name":"Era","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1603,"Index":"F","Name":"October 18, 2017","Type":"PROGRAMMING","Rating":2700,"Points":3750,"Tags":["combinatorics","dp","implementation","math"]},{"ContestId":1603,"Index":"E","Name":"A Perfect Problem","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["combinatorics","dp","math"]},{"ContestId":1603,"Index":"D","Name":"Artistic Partition","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["divide and conquer","dp","number theory"]},{"ContestId":1603,"Index":"C","Name":"Extreme Extension","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["dp","greedy","math","number theory"]},{"ContestId":1603,"Index":"B","Name":"Moderate Modular Mode","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1603,"Index":"A","Name":"Di-visible Confusion","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1602,"Index":"B","Name":"Divine Array","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":1602,"Index":"A","Name":"Two Subsequences","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1601,"Index":"F","Name":"Two Sorts","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["binary search","dfs and similar","math","meet-in-the-middle"]},{"ContestId":1601,"Index":"E","Name":"Phys Ed Online","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["data structures","dp","greedy"]},{"ContestId":1601,"Index":"D","Name":"Difficult Mountain","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["data structures","dp","greedy","sortings"]},{"ContestId":1601,"Index":"C","Name":"Optimal Insertion","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["data structures","divide and conquer","dp","greedy","sortings"]},{"ContestId":1601,"Index":"B","Name":"Frog Traveler","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["data structures","dfs and similar","dp","graphs","shortest paths","two pointers"]},{"ContestId":1601,"Index":"A","Name":"Array Elimination","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["bitmasks","greedy","math","number theory"]},{"ContestId":1600,"Index":"J","Name":"Robot Factory","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["bitmasks","dfs and similar"]},{"ContestId":1600,"Index":"F","Name":"Party Organization","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["brute force","math","probabilities"]},{"ContestId":1600,"Index":"E","Name":"Array Game","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["games","greedy","two pointers"]},{"ContestId":1599,"Index":"J","Name":"Bob's Beautiful Array","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["bitmasks","brute force","greedy"]},{"ContestId":1599,"Index":"I","Name":"Desert","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","graphs"]},{"ContestId":1599,"Index":"H","Name":"Hidden Fortress","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["interactive","math"]},{"ContestId":1599,"Index":"G","Name":"Shortest path","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["brute force","geometry","math","shortest paths"]},{"ContestId":1599,"Index":"F","Name":"Mars","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["hashing"]},{"ContestId":1599,"Index":"E","Name":"Two Arrays","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["data structures","matrices"]},{"ContestId":1599,"Index":"D","Name":"Bubble Popping","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":1599,"Index":"C","Name":"Bubble Strike","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["combinatorics","math","probabilities","ternary search"]},{"ContestId":1599,"Index":"B","Name":"Restaurant Game","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":[]},{"ContestId":1599,"Index":"A","Name":"Weights","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["constructive algorithms","greedy","two pointers"]},{"ContestId":1598,"Index":"G","Name":"The Sum of Good Numbers","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["hashing","math","string suffix structures","strings"]},{"ContestId":1598,"Index":"F","Name":"RBS","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","bitmasks","brute force","data structures","dp"]},{"ContestId":1598,"Index":"E","Name":"Staircases","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","combinatorics","data structures","dfs and similar","dp","implementation","math"]},{"ContestId":1598,"Index":"D","Name":"Training Session","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["combinatorics","data structures","geometry","implementation","math"]},{"ContestId":1598,"Index":"C","Name":"Delete Two Elements","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["data structures","dp","implementation","math","two pointers"]},{"ContestId":1598,"Index":"B","Name":"Groups","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1598,"Index":"A","Name":"Computer Game","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","dfs and similar","dp","implementation"]},{"ContestId":1594,"Index":"F","Name":"Ideal Farm","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["constructive algorithms","math"]},{"ContestId":1594,"Index":"E2","Name":"Rubik's Cube Coloring (hard version)","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["brute force","dp","implementation","math","trees"]},{"ContestId":1594,"Index":"E1","Name":"Rubik's Cube Coloring (easy version)","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["combinatorics","math"]},{"ContestId":1594,"Index":"D","Name":"The Number of Imposters","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["constructive algorithms","dfs and similar","dp","dsu","graphs"]},{"ContestId":1594,"Index":"C","Name":"Make Them Equal","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["brute force","greedy","math","strings"]},{"ContestId":1594,"Index":"B","Name":"Special Numbers","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["bitmasks","math"]},{"ContestId":1594,"Index":"A","Name":"Consecutive Sum Riddle","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1593,"Index":"G","Name":"Changing Brackets","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms","data structures","dp","greedy"]},{"ContestId":1593,"Index":"F","Name":"Red-Black Number","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dfs and similar","dp","implementation","math","meet-in-the-middle"]},{"ContestId":1593,"Index":"E","Name":"Gardener and Tree","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","data structures","dfs and similar","greedy","implementation","trees"]},{"ContestId":1593,"Index":"D2","Name":"Half of Same","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":1593,"Index":"D1","Name":"All are Same","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math","number theory"]},{"ContestId":1593,"Index":"C","Name":"Save More Mice","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["binary search","greedy","greedy"]},{"ContestId":1593,"Index":"B","Name":"Make it Divisible by 25","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["dfs and similar","dp","greedy","math","math"]},{"ContestId":1593,"Index":"A","Name":"Elections","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1592,"Index":"F2","Name":"Alice and Recoloring 2","Type":"PROGRAMMING","Rating":2800,"Points":1750,"Tags":["constructive algorithms","flows","graph matchings","greedy"]},{"ContestId":1592,"Index":"F1","Name":"Alice and Recoloring 1","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["constructive algorithms","greedy"]},{"ContestId":1592,"Index":"E","Name":"Bored Bakry","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["bitmasks","greedy","math","two pointers"]},{"ContestId":1592,"Index":"D","Name":"Hemose in ICPC ?","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["binary search","dfs and similar","implementation","interactive","math","number theory","trees"]},{"ContestId":1592,"Index":"C","Name":"Bakry and Partitioning","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["bitmasks","constructive algorithms","dfs and similar","dp","graphs","trees"]},{"ContestId":1592,"Index":"B","Name":"Hemose Shopping","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","dsu","math","sortings"]},{"ContestId":1592,"Index":"A","Name":"Gamer Hemose","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["binary search","greedy","math","sortings"]},{"ContestId":1588,"Index":"F","Name":"Jumping Through the Array","Type":"PROGRAMMING","Rating":3500,"Points":3750,"Tags":["binary search","data structures","graphs","two pointers"]},{"ContestId":1586,"Index":"I","Name":"Omkar and Mosaic","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["combinatorics","constructive algorithms","math"]},{"ContestId":1585,"Index":"G","Name":"Poachers","Type":"PROGRAMMING","Rating":2500,"Points":3500,"Tags":["dp","games","graphs","trees"]},{"ContestId":1585,"Index":"F","Name":"Non-equal Neighbours","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["combinatorics","dp","math"]},{"ContestId":1585,"Index":"E","Name":"Frequency Queries","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":1585,"Index":"D","Name":"Yet Another Sorting Problem","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["data structures","math"]},{"ContestId":1585,"Index":"C","Name":"Minimize Distance","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["greedy"]},{"ContestId":1585,"Index":"B","Name":"Array Eversion","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy"]},{"ContestId":1585,"Index":"A","Name":"Life of a Flower","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1584,"Index":"G","Name":"Eligible Segments","Type":"PROGRAMMING","Rating":3200,"Points":3250,"Tags":["geometry"]},{"ContestId":1584,"Index":"F","Name":"Strange LCS","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["bitmasks","dp","graphs","greedy","strings"]},{"ContestId":1584,"Index":"E","Name":"Game with Stones","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["binary search","data structures","games","greedy"]},{"ContestId":1584,"Index":"D","Name":"Guess the Permutation","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["binary search","combinatorics","interactive","math"]},{"ContestId":1584,"Index":"C","Name":"Two Arrays","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","math","sortings"]},{"ContestId":1584,"Index":"B","Name":"Coloring Rectangles","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","math"]},{"ContestId":1584,"Index":"A","Name":"Mathematical Addition","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1583,"Index":"H","Name":"Omkar and Tours","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["data structures","divide and conquer","sortings","trees"]},{"ContestId":1583,"Index":"G","Name":"Omkar and Time Travel","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["data structures","math"]},{"ContestId":1583,"Index":"F","Name":"Defender of Childhood Dreams","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["bitmasks","constructive algorithms","divide and conquer"]},{"ContestId":1583,"Index":"E","Name":"Moment of Bloom","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["constructive algorithms","dfs and similar","graph matchings","graphs","greedy","trees"]},{"ContestId":1583,"Index":"D","Name":"Omkar and the Meaning of Life","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["constructive algorithms","greedy","interactive"]},{"ContestId":1583,"Index":"C","Name":"Omkar and Determination","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["data structures","dp"]},{"ContestId":1583,"Index":"B","Name":"Omkar and Heavenly Tree","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","trees"]},{"ContestId":1583,"Index":"A","Name":"Windblume Ode","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math","number theory"]},{"ContestId":1582,"Index":"G","Name":"Kuzya and Homework","Type":"PROGRAMMING","Rating":2600,"Points":3250,"Tags":["data structures","number theory"]},{"ContestId":1582,"Index":"F2","Name":"Korney Korneevich and XOR (hard version)","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["binary search","brute force","dp","greedy","two pointers"]},{"ContestId":1582,"Index":"F1","Name":"Korney Korneevich and XOR (easy version)","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["bitmasks","dp","greedy"]},{"ContestId":1582,"Index":"E","Name":"Pchelyonok and Segments","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["binary search","data structures","dp","greedy","math"]},{"ContestId":1582,"Index":"D","Name":"Vupsen, Pupsen and 0","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["constructive algorithms","math"]},{"ContestId":1582,"Index":"C","Name":"Grandma Capa Knits a Scarf","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["brute force","data structures","greedy","strings","two pointers"]},{"ContestId":1582,"Index":"B","Name":"Luntik and Subsequences","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["combinatorics","math"]},{"ContestId":1582,"Index":"A","Name":"Luntik and Concerts","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1581,"Index":"B","Name":"Diameter of Graph","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","graphs","greedy","math"]},{"ContestId":1581,"Index":"A","Name":"CQXYM Count Permutations","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["combinatorics","math","number theory"]},{"ContestId":1580,"Index":"F","Name":"Problems for Codeforces","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["combinatorics","fft","math"]},{"ContestId":1580,"Index":"E","Name":"Railway Construction","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["brute force","constructive algorithms","data structures","graphs","shortest paths"]},{"ContestId":1580,"Index":"D","Name":"Subsequence","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["brute force","divide and conquer","dp","greedy","trees"]},{"ContestId":1580,"Index":"C","Name":"Train Maintenance","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["brute force","data structures","implementation"]},{"ContestId":1580,"Index":"B","Name":"Mathematics Curriculum","Type":"PROGRAMMING","Rating":2600,"Points":1000,"Tags":["brute force","combinatorics","dp","trees"]},{"ContestId":1580,"Index":"A","Name":"Portal","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force","data structures","dp","greedy","implementation"]},{"ContestId":1579,"Index":"G","Name":"Minimal Coverage","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp"]},{"ContestId":1579,"Index":"F","Name":"Array Stabilization (AND version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","graphs","math","number theory","shortest paths"]},{"ContestId":1579,"Index":"E2","Name":"Array Optimization by Deque","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1579,"Index":"E1","Name":"Permutation Minimization by Deque","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1579,"Index":"D","Name":"Productive Meeting","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["constructive algorithms","graphs","greedy"]},{"ContestId":1579,"Index":"C","Name":"Ticks","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1579,"Index":"B","Name":"Shifting Sort","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":1579,"Index":"A","Name":"Casimir's String Solitaire","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math","strings"]},{"ContestId":1578,"Index":"M","Name":"The Mind","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["constructive algorithms","interactive","probabilities"]},{"ContestId":1578,"Index":"L","Name":"Labyrinth","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","dsu","greedy"]},{"ContestId":1578,"Index":"K","Name":"Kingdom of Islands","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["brute force","graphs","implementation"]},{"ContestId":1578,"Index":"J","Name":"Just Kingdom","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["brute force","data structures","dfs and similar"]},{"ContestId":1578,"Index":"I","Name":"Interactive Rays","Type":"PROGRAMMING","Rating":3300,"Points":0,"Tags":["geometry","interactive"]},{"ContestId":1578,"Index":"H","Name":"Higher Order Functions","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1578,"Index":"G","Name":"Game of Chance","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":["math","probabilities"]},{"ContestId":1578,"Index":"F","Name":"Framing Pictures","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["geometry"]},{"ContestId":1578,"Index":"E","Name":"Easy Scheduling","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","math"]},{"ContestId":1578,"Index":"D","Name":"Dragon Curve","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":1578,"Index":"C","Name":"Cactus Lady and her Cing","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":[]},{"ContestId":1578,"Index":"B","Name":"Building Forest Trails","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["data structures","dsu"]},{"ContestId":1578,"Index":"A","Name":"Anti-Tetris","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["constructive algorithms","graphs","shortest paths"]},{"ContestId":1576,"Index":"A","Name":"Communication Routing Challenge","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1575,"Index":"M","Name":"Managing Telephone Poles","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","geometry"]},{"ContestId":1575,"Index":"L","Name":"Longest Array Deconstruction","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","divide and conquer","dp","sortings"]},{"ContestId":1575,"Index":"K","Name":"Knitting Batik","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["implementation","math"]},{"ContestId":1575,"Index":"J","Name":"Jeopardy of Dropped Balls","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","brute force","dsu","implementation"]},{"ContestId":1575,"Index":"I","Name":"Illusions of the Desert","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","trees"]},{"ContestId":1575,"Index":"H","Name":"Holiday Wall Ornaments","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","strings"]},{"ContestId":1575,"Index":"G","Name":"GCD Festival","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["math","number theory"]},{"ContestId":1575,"Index":"F","Name":"Finding Expected Value","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["math"]},{"ContestId":1575,"Index":"E","Name":"Eye-Pleasing City Park Tour","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","trees"]},{"ContestId":1575,"Index":"D","Name":"Divisible by Twenty-Five","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","dfs and similar","dp"]},{"ContestId":1575,"Index":"C","Name":"Cyclic Sum","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["data structures","fft","number theory"]},{"ContestId":1575,"Index":"B","Name":"Building an Amusement Park","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","geometry"]},{"ContestId":1575,"Index":"A","Name":"Another Sorting Problem","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["data structures","sortings","strings"]},{"ContestId":1574,"Index":"F","Name":"Occurrences","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["combinatorics","dfs and similar","dp","dsu","fft","graphs"]},{"ContestId":1574,"Index":"E","Name":"Coloring","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["combinatorics","constructive algorithms","implementation","math"]},{"ContestId":1574,"Index":"D","Name":"The Strongest Build","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","brute force","data structures","dfs and similar","graphs","greedy","hashing","implementation"]},{"ContestId":1574,"Index":"C","Name":"Slay the Dragon","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","greedy","sortings","ternary search"]},{"ContestId":1574,"Index":"B","Name":"Combinatorics Homework","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["combinatorics","greedy","math"]},{"ContestId":1574,"Index":"A","Name":"Regular Bracket Sequences","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1573,"Index":"B","Name":"Swaps","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","math","sortings"]},{"ContestId":1573,"Index":"A","Name":"Countdown","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1572,"Index":"F","Name":"Stations","Type":"PROGRAMMING","Rating":3400,"Points":3250,"Tags":["data structures"]},{"ContestId":1572,"Index":"E","Name":"Polygon","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["binary search","dp","geometry"]},{"ContestId":1572,"Index":"D","Name":"Bridge Club","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["flows","graph matchings","graphs","greedy"]},{"ContestId":1572,"Index":"C","Name":"Paint","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["dp","greedy"]},{"ContestId":1572,"Index":"B","Name":"Xor of 3","Type":"PROGRAMMING","Rating":2500,"Points":1250,"Tags":["brute force","constructive algorithms","greedy","two pointers"]},{"ContestId":1572,"Index":"A","Name":"Book","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["binary search","brute force","data structures","dp","graphs","implementation","sortings"]},{"ContestId":1571,"Index":"J","Name":"Two Railroads","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["*special"]},{"ContestId":1571,"Index":"I","Name":"Physical Examination","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["*special","binary search","data structures"]},{"ContestId":1571,"Index":"H","Name":"Laser Beams","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["*special","geometry","probabilities"]},{"ContestId":1571,"Index":"G","Name":"A Battle Against a Dragon","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["*special","data structures","dp"]},{"ContestId":1571,"Index":"F","Name":"Kotlinforces","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special","constructive algorithms","dp"]},{"ContestId":1571,"Index":"E","Name":"Fix the String","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special","bitmasks","dp","greedy"]},{"ContestId":1571,"Index":"D","Name":"Sweepstake","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","brute force","constructive algorithms","implementation","math"]},{"ContestId":1571,"Index":"C","Name":"Rhyme","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1571,"Index":"B","Name":"Epic Novel","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["*special","math"]},{"ContestId":1571,"Index":"A","Name":"Sequence of Comparisons","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["*special"]},{"ContestId":1569,"Index":"F","Name":"Palindromic Hamiltonian Path","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["brute force","dfs and similar","dp","graphs","hashing"]},{"ContestId":1569,"Index":"E","Name":"Playoff Restoration","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["bitmasks","brute force","hashing","implementation","meet-in-the-middle"]},{"ContestId":1569,"Index":"D","Name":"Inconvenient Pairs","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures","implementation","sortings","two pointers"]},{"ContestId":1569,"Index":"C","Name":"Jury Meeting","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":1569,"Index":"B","Name":"Chess Tournament","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1569,"Index":"A","Name":"Balanced Substring","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1567,"Index":"F","Name":"One-Four Overload","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["2-sat","constructive algorithms","dfs and similar","dsu","graphs","implementation"]},{"ContestId":1567,"Index":"E","Name":"Non-Decreasing Dilemma","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["data structures","divide and conquer","math"]},{"ContestId":1567,"Index":"D","Name":"Expression Evaluation Error","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1567,"Index":"C","Name":"Carrying Conundrum","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["bitmasks","combinatorics","dp","math"]},{"ContestId":1567,"Index":"B","Name":"MEXor Mixup","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["bitmasks","greedy"]},{"ContestId":1567,"Index":"A","Name":"Domino Disaster","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1566,"Index":"H","Name":"Xor-quiz","Type":"PROGRAMMING","Rating":3200,"Points":3750,"Tags":["constructive algorithms","dp","interactive","math","number theory"]},{"ContestId":1566,"Index":"G","Name":"Four Vertices","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["constructive algorithms","data structures","graphs","greedy","implementation","shortest paths"]},{"ContestId":1566,"Index":"F","Name":"Points Movement","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures","dp","greedy","implementation","sortings"]},{"ContestId":1566,"Index":"E","Name":"Buds Re-hanging","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","dfs and similar","dp","greedy","trees"]},{"ContestId":1566,"Index":"D2","Name":"Seating Arrangements (hard version) ","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["data structures","greedy","implementation","sortings","two pointers"]},{"ContestId":1566,"Index":"D1","Name":"Seating Arrangements (easy version) ","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["data structures","greedy","sortings"]},{"ContestId":1566,"Index":"C","Name":"MAX-MEX Cut","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["bitmasks","constructive algorithms","dp","greedy"]},{"ContestId":1566,"Index":"B","Name":"MIN-MEX Cut","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["bitmasks","constructive algorithms","dp","greedy"]},{"ContestId":1566,"Index":"A","Name":"Median Maximization","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["binary search","greedy","math"]},{"ContestId":1562,"Index":"F","Name":"Tubular Bells","Type":"PROGRAMMING","Rating":2900,"Points":3500,"Tags":["interactive","math","number theory","probabilities"]},{"ContestId":1562,"Index":"E","Name":"Rescue Niwen!","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["dp","greedy","string suffix structures","strings"]},{"ContestId":1562,"Index":"D2","Name":"Two Hundred Twenty One (hard version)","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["data structures","math"]},{"ContestId":1562,"Index":"D1","Name":"Two Hundred Twenty One (easy version)","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["data structures","dp","math"]},{"ContestId":1562,"Index":"C","Name":"Rings","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["constructive algorithms","math"]},{"ContestId":1562,"Index":"B","Name":"Scenes From a Memory","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["brute force","constructive algorithms","implementation","math","number theory"]},{"ContestId":1562,"Index":"A","Name":"The Miracle and the Sleeper","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1561,"Index":"D1","Name":"Up the Strip (simplified version)","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","data structures","dp","math","number theory"]},{"ContestId":1561,"Index":"C","Name":"Deep Down Below","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["binary search","greedy","sortings"]},{"ContestId":1561,"Index":"A","Name":"Simply Strange Sort","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation","sortings"]},{"ContestId":1560,"Index":"F2","Name":"Nearest Beautiful Number (hard version)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["bitmasks","brute force","constructive algorithms","dfs and similar","dp","greedy"]},{"ContestId":1560,"Index":"F1","Name":"Nearest Beautiful Number (easy version)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","bitmasks","brute force","constructive algorithms","dfs and similar","greedy"]},{"ContestId":1560,"Index":"E","Name":"Polycarp and String Transformation","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","implementation","sortings","strings"]},{"ContestId":1560,"Index":"D","Name":"Make a Power of Two","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy","math","strings"]},{"ContestId":1560,"Index":"C","Name":"Infinity Table","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1560,"Index":"B","Name":"Who's Opposite?","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1560,"Index":"A","Name":"Dislike of Threes","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1559,"Index":"E","Name":"Mocha and Stars","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["combinatorics","dp","fft","math","number theory"]},{"ContestId":1559,"Index":"D2","Name":"Mocha and Diana (Hard Version)","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","greedy","trees","two pointers"]},{"ContestId":1559,"Index":"D1","Name":"Mocha and Diana (Easy Version)","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["brute force","constructive algorithms","dsu","graphs","greedy","trees"]},{"ContestId":1559,"Index":"C","Name":"Mocha and Hiking","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","graphs"]},{"ContestId":1559,"Index":"B","Name":"Mocha and Red and Blue","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["dp","greedy"]},{"ContestId":1559,"Index":"A","Name":"Mocha and Math","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["bitmasks","constructive algorithms","math"]},{"ContestId":1558,"Index":"F","Name":"Strange Sort","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["data structures","sortings"]},{"ContestId":1558,"Index":"E","Name":"Down Below","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["binary search","dfs and similar","graphs","greedy","meet-in-the-middle","shortest paths"]},{"ContestId":1558,"Index":"D","Name":"Top-Notch Insertions","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["combinatorics","data structures"]},{"ContestId":1558,"Index":"C","Name":"Bottom-Tier Reversals","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1558,"Index":"B","Name":"Up the Strip","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["brute force","dp","math","number theory","two pointers"]},{"ContestId":1558,"Index":"A","Name":"Charmed by the Game","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["brute force","math"]},{"ContestId":1557,"Index":"E","Name":"Assiut Chess","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["brute force","constructive algorithms","interactive"]},{"ContestId":1557,"Index":"D","Name":"Ezzat and Grid","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["data structures","dp","greedy"]},{"ContestId":1557,"Index":"C","Name":"Moamen and XOR","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["bitmasks","combinatorics","dp","math","matrices"]},{"ContestId":1557,"Index":"B","Name":"Moamen and k-subarrays","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":1557,"Index":"A","Name":"Ezzat and Two Subsequences","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","math","sortings"]},{"ContestId":1556,"Index":"H","Name":"DIY Tree","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["graphs","greedy","math","probabilities"]},{"ContestId":1556,"Index":"G","Name":"Gates to Another World","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["bitmasks","data structures","dsu","two pointers"]},{"ContestId":1556,"Index":"F","Name":"Sports Betting","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["bitmasks","combinatorics","dp","graphs","math","probabilities"]},{"ContestId":1556,"Index":"E","Name":"Equilibrium","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["data structures","dp","greedy"]},{"ContestId":1556,"Index":"D","Name":"Take a Guess","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["bitmasks","constructive algorithms","interactive","math"]},{"ContestId":1556,"Index":"C","Name":"Compressed Bracket Sequence","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["brute force","implementation"]},{"ContestId":1556,"Index":"B","Name":"Take Your Places!","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":1556,"Index":"A","Name":"A Variety of Operations","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1555,"Index":"F","Name":"Good Graph","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","dsu","graphs","trees"]},{"ContestId":1555,"Index":"E","Name":"Boring Segments","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","sortings","trees","two pointers"]},{"ContestId":1555,"Index":"D","Name":"Say No to Palindromes","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","constructive algorithms","dp","strings"]},{"ContestId":1555,"Index":"C","Name":"Coin Rows","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","constructive algorithms","dp","implementation"]},{"ContestId":1555,"Index":"B","Name":"Two Tables","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force"]},{"ContestId":1555,"Index":"A","Name":"PizzaForces","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","math"]},{"ContestId":1554,"Index":"E","Name":"You","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["dfs and similar","dp","math","number theory"]},{"ContestId":1554,"Index":"D","Name":"Diane","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":1554,"Index":"C","Name":"Mikasa","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["binary search","bitmasks","greedy","implementation"]},{"ContestId":1554,"Index":"B","Name":"Cobb","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["bitmasks","brute force","greedy","math"]},{"ContestId":1554,"Index":"A","Name":"Cherry","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["greedy"]},{"ContestId":1553,"Index":"I","Name":"Stairs","Type":"PROGRAMMING","Rating":3400,"Points":5250,"Tags":["combinatorics","divide and conquer","dp","fft","math"]},{"ContestId":1553,"Index":"H","Name":"XOR and Distance","Type":"PROGRAMMING","Rating":2900,"Points":3750,"Tags":["bitmasks","divide and conquer","trees"]},{"ContestId":1553,"Index":"G","Name":"Common Divisor Graph","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["brute force","constructive algorithms","dsu","graphs","hashing","math","number theory"]},{"ContestId":1553,"Index":"F","Name":"Pairwise Modulo","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["data structures","math"]},{"ContestId":1553,"Index":"E","Name":"Permutation Shift","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["brute force","combinatorics","constructive algorithms","dfs and similar","dsu","graphs","math"]},{"ContestId":1553,"Index":"D","Name":"Backspace","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["dp","greedy","strings","two pointers"]},{"ContestId":1553,"Index":"C","Name":"Penalty","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["bitmasks","brute force","dp","greedy"]},{"ContestId":1553,"Index":"B","Name":"Reverse String","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["brute force","dp","hashing","implementation","strings"]},{"ContestId":1553,"Index":"A","Name":"Digits Sum","Type":"PROGRAMMING","Rating":800,"Points":250,"Tags":["math","number theory"]},{"ContestId":1552,"Index":"I","Name":"Organizing a Music Festival","Type":"PROGRAMMING","Rating":3400,"Points":3750,"Tags":["dfs and similar","math"]},{"ContestId":1552,"Index":"H","Name":"Guess the Perimeter","Type":"PROGRAMMING","Rating":3300,"Points":2750,"Tags":["binary search","interactive","number theory"]},{"ContestId":1552,"Index":"G","Name":"A Serious Referee","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["bitmasks","brute force","dfs and similar","sortings"]},{"ContestId":1552,"Index":"F","Name":"Telepanting","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["binary search","data structures","dp","sortings"]},{"ContestId":1552,"Index":"E","Name":"Colors and Intervals","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["constructive algorithms","data structures","greedy","sortings"]},{"ContestId":1552,"Index":"D","Name":"Array Differentiation","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["bitmasks","brute force","constructive algorithms","dfs and similar","dp","graphs","math"]},{"ContestId":1552,"Index":"C","Name":"Maximize the Intersections","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["combinatorics","constructive algorithms","geometry","greedy","sortings"]},{"ContestId":1552,"Index":"B","Name":"Running for Gold","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["combinatorics","graphs","greedy","sortings"]},{"ContestId":1552,"Index":"A","Name":"Subsequence Permutation","Type":"PROGRAMMING","Rating":800,"Points":250,"Tags":["sortings","strings"]},{"ContestId":1551,"Index":"F","Name":"Equidistant Vertices","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","combinatorics","dfs and similar","dp","trees"]},{"ContestId":1551,"Index":"E","Name":"Fixed Points","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","brute force","dp"]},{"ContestId":1551,"Index":"D2","Name":"Domino (hard version)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":1551,"Index":"D1","Name":"Domino (easy version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1551,"Index":"C","Name":"Interesting Story","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","sortings","strings"]},{"ContestId":1551,"Index":"B2","Name":"Wonderful Coloring - 2","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","constructive algorithms","data structures","greedy"]},{"ContestId":1551,"Index":"B1","Name":"Wonderful Coloring - 1","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","strings"]},{"ContestId":1551,"Index":"A","Name":"Polycarp and Coins","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1550,"Index":"F","Name":"Jumping Around","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["binary search","data structures","divide and conquer","dp","dsu","graphs","shortest paths"]},{"ContestId":1550,"Index":"E","Name":"Stringforces","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["binary search","bitmasks","brute force","dp","strings","two pointers"]},{"ContestId":1550,"Index":"D","Name":"Excellent Arrays","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","combinatorics","constructive algorithms","implementation","math","sortings","two pointers"]},{"ContestId":1550,"Index":"C","Name":"Manhattan Subarrays","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","geometry","greedy","implementation"]},{"ContestId":1550,"Index":"B","Name":"Maximum Cost Deletion","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","math"]},{"ContestId":1550,"Index":"A","Name":"Find The Array","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1549,"Index":"B","Name":"Gregor and the Pawn Game","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["dfs and similar","dp","flows","graph matchings","graphs","greedy","implementation"]},{"ContestId":1549,"Index":"A","Name":"Gregor and Cryptography","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math","number theory"]},{"ContestId":1548,"Index":"E","Name":"Gregor and the Two Painters","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["data structures","divide and conquer","graphs","greedy","math"]},{"ContestId":1548,"Index":"D2","Name":"Gregor and the Odd Cows (Hard)","Type":"PROGRAMMING","Rating":3300,"Points":1000,"Tags":["brute force","geometry","math","number theory"]},{"ContestId":1548,"Index":"D1","Name":"Gregor and the Odd Cows (Easy)","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["bitmasks","geometry","math","number theory"]},{"ContestId":1548,"Index":"C","Name":"The Three Little Pigs","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["combinatorics","dp","fft","math"]},{"ContestId":1548,"Index":"B","Name":"Integers Have Friends","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["binary search","data structures","divide and conquer","math","number theory","two pointers"]},{"ContestId":1548,"Index":"A","Name":"Web of Lies","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","graphs","greedy"]},{"ContestId":1547,"Index":"G","Name":"How Many Paths?","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":1547,"Index":"F","Name":"Array Stabilization (GCD version)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","brute force","data structures","divide and conquer","number theory","two pointers"]},{"ContestId":1547,"Index":"E","Name":"Air Conditioners","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["data structures","dp","implementation","shortest paths","sortings","two pointers"]},{"ContestId":1547,"Index":"D","Name":"Co-growing Sequence","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["bitmasks","constructive algorithms","greedy"]},{"ContestId":1547,"Index":"C","Name":"Pair Programming","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","two pointers"]},{"ContestId":1547,"Index":"B","Name":"Alphabetical Strings","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation","strings"]},{"ContestId":1547,"Index":"A","Name":"Shortest Path with Obstacle","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1546,"Index":"B","Name":"AquaMoon and Stolen String","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["interactive","math"]},{"ContestId":1546,"Index":"A","Name":"AquaMoon and Two Arrays","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":1545,"Index":"F","Name":"AquaMoon and Potatoes","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["brute force","data structures","dp"]},{"ContestId":1545,"Index":"E2","Name":"AquaMoon and Time Stop (hard version)","Type":"PROGRAMMING","Rating":3500,"Points":2000,"Tags":["data structures","dp"]},{"ContestId":1545,"Index":"E1","Name":"AquaMoon and Time Stop (easy version)","Type":"PROGRAMMING","Rating":3500,"Points":2000,"Tags":["data structures","dp"]},{"ContestId":1545,"Index":"D","Name":"AquaMoon and Wrong Coordinate","Type":"PROGRAMMING","Rating":3000,"Points":2250,"Tags":["constructive algorithms","interactive","math"]},{"ContestId":1545,"Index":"C","Name":"AquaMoon and Permutations","Type":"PROGRAMMING","Rating":2800,"Points":1500,"Tags":["2-sat","brute force","combinatorics","constructive algorithms","graph matchings","graphs"]},{"ContestId":1545,"Index":"B","Name":"AquaMoon and Chess","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["combinatorics","math"]},{"ContestId":1545,"Index":"A","Name":"AquaMoon and Strange Sort","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["sortings"]},{"ContestId":1543,"Index":"E","Name":"The Final Pursuit","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["bitmasks","constructive algorithms","divide and conquer","graphs","greedy","math"]},{"ContestId":1543,"Index":"D2","Name":"RPD and Rap Sheet (Hard Version)","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["brute force","constructive algorithms","interactive","math"]},{"ContestId":1543,"Index":"D1","Name":"RPD and Rap Sheet (Easy Version)","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["bitmasks","constructive algorithms","interactive","math"]},{"ContestId":1543,"Index":"C","Name":"Need for Pink Slips","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["bitmasks","brute force","dfs and similar","implementation","math","probabilities"]},{"ContestId":1543,"Index":"B","Name":"Customising the Track","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["combinatorics","greedy","math"]},{"ContestId":1543,"Index":"A","Name":"Exciting Bets","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","math","number theory"]},{"ContestId":1542,"Index":"E2","Name":"Abnormal Permutation Pairs (hard version)","Type":"PROGRAMMING","Rating":2700,"Points":1000,"Tags":["combinatorics","dp","fft","math"]},{"ContestId":1542,"Index":"E1","Name":"Abnormal Permutation Pairs (easy version)","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["combinatorics","dp","fft","math"]},{"ContestId":1542,"Index":"D","Name":"Priority Queue","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["combinatorics","dp","implementation","math","ternary search"]},{"ContestId":1542,"Index":"C","Name":"Strange Function","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["math","number theory"]},{"ContestId":1542,"Index":"B","Name":"Plus and Multiply","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1542,"Index":"A","Name":"Odd Set","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1541,"Index":"B","Name":"Pleasant Pairs","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","implementation","math","number theory"]},{"ContestId":1541,"Index":"A","Name":"Pretty Permutations","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1540,"Index":"E","Name":"Tasty Dishes","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["math","matrices"]},{"ContestId":1540,"Index":"D","Name":"Inverse Inversions","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["binary search","brute force","data structures"]},{"ContestId":1540,"Index":"C2","Name":"Converging Array (Hard Version)","Type":"PROGRAMMING","Rating":2900,"Points":750,"Tags":["dp","math"]},{"ContestId":1540,"Index":"C1","Name":"Converging Array (Easy Version)","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["dp","math"]},{"ContestId":1540,"Index":"B","Name":"Tree Array","Type":"PROGRAMMING","Rating":2300,"Points":1250,"Tags":["brute force","combinatorics","dp","graphs","math","probabilities","trees"]},{"ContestId":1540,"Index":"A","Name":"Great Graphs","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["constructive algorithms","graphs","greedy","shortest paths","sortings"]},{"ContestId":1539,"Index":"F","Name":"Strange Array","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures","greedy","sortings"]},{"ContestId":1539,"Index":"E","Name":"Game with Cards","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["binary search","constructive algorithms","data structures","dp","greedy","implementation"]},{"ContestId":1539,"Index":"D","Name":"PriceFixed","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","greedy","implementation","sortings","two pointers"]},{"ContestId":1539,"Index":"C","Name":"Stable Groups","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["greedy","sortings"]},{"ContestId":1539,"Index":"B","Name":"Love Song","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["dp","implementation","strings"]},{"ContestId":1539,"Index":"A","Name":"Contest Start","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["combinatorics","geometry","greedy","math"]},{"ContestId":1538,"Index":"G","Name":"Gift Set","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","greedy","math","ternary search"]},{"ContestId":1538,"Index":"F","Name":"Interesting Function","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","dp","math","number theory"]},{"ContestId":1538,"Index":"E","Name":"Funny Substrings","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","hashing","implementation","matrices","strings"]},{"ContestId":1538,"Index":"D","Name":"Another Problem About Dividing Numbers","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1538,"Index":"C","Name":"Number of Pairs","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","data structures","math","two pointers"]},{"ContestId":1538,"Index":"B","Name":"Friends and Candies","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1538,"Index":"A","Name":"Stone Game","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","dp","greedy"]},{"ContestId":1537,"Index":"F","Name":"Figure Fixing","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","math"]},{"ContestId":1537,"Index":"E2","Name":"Erase and Extend (Hard Version)","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["binary search","data structures","greedy","hashing","string suffix structures","strings","two pointers"]},{"ContestId":1537,"Index":"E1","Name":"Erase and Extend (Easy Version)","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["binary search","brute force","dp","greedy","hashing","implementation","string suffix structures","strings","two pointers"]},{"ContestId":1537,"Index":"D","Name":"Deleting Divisors","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["games","math","number theory"]},{"ContestId":1537,"Index":"C","Name":"Challenging Cliffs","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1537,"Index":"B","Name":"Bad Boy","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1537,"Index":"A","Name":"Arithmetic Array","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1536,"Index":"F","Name":"Omkar and Akmar","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["chinese remainder theorem","combinatorics","constructive algorithms","fft","games","geometry","math","meet-in-the-middle","string suffix structures"]},{"ContestId":1536,"Index":"E","Name":"Omkar and Forest","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["combinatorics","graphs","math","shortest paths"]},{"ContestId":1536,"Index":"D","Name":"Omkar and Medians","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["data structures","greedy","implementation"]},{"ContestId":1536,"Index":"C","Name":"Diluc and Kaeya","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["data structures","dp","hashing","number theory"]},{"ContestId":1536,"Index":"B","Name":"Prinzessin der Verurteilung","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","constructive algorithms","strings"]},{"ContestId":1536,"Index":"A","Name":"Omkar and Bad Story","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","constructive algorithms"]},{"ContestId":1535,"Index":"F","Name":"String Distance","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["binary search","brute force","data structures","hashing","implementation","strings"]},{"ContestId":1535,"Index":"E","Name":"Gold Transfer","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","data structures","dp","greedy","interactive","trees"]},{"ContestId":1535,"Index":"D","Name":"Playoff Tournament","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","dfs and similar","dp","implementation","trees"]},{"ContestId":1535,"Index":"C","Name":"Unstable String","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","dp","greedy","implementation","strings","two pointers"]},{"ContestId":1535,"Index":"B","Name":"Array Reodering","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","greedy","math","number theory","sortings"]},{"ContestId":1535,"Index":"A","Name":"Fair Playoff","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1534,"Index":"H","Name":"Lost Nodes","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["constructive algorithms","dp","graphs","interactive","sortings","trees"]},{"ContestId":1534,"Index":"G","Name":"A New Beginning","Type":"PROGRAMMING","Rating":3300,"Points":3250,"Tags":["data structures","dp","geometry","sortings"]},{"ContestId":1534,"Index":"F2","Name":"Falling Sand (Hard Version)","Type":"PROGRAMMING","Rating":3000,"Points":1250,"Tags":["dfs and similar","dp","graphs","greedy"]},{"ContestId":1534,"Index":"F1","Name":"Falling Sand (Easy Version)","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["dfs and similar","graphs","greedy"]},{"ContestId":1534,"Index":"E","Name":"Lost Array","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["graphs","greedy","interactive","shortest paths"]},{"ContestId":1534,"Index":"D","Name":"Lost Tree","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["constructive algorithms","interactive","trees"]},{"ContestId":1534,"Index":"C","Name":"Little Alawn's Puzzle","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["combinatorics","dp","dsu","graphs","math"]},{"ContestId":1534,"Index":"B","Name":"Histogram Ugliness","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","implementation","math"]},{"ContestId":1534,"Index":"A","Name":"Colour the Flag","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":1533,"Index":"J","Name":"Pawns","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1533,"Index":"I","Name":"Excursions","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","constructive algorithms","dfs and similar","flows","graph matchings","graphs"]},{"ContestId":1533,"Index":"H","Name":"Submatrices","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","bitmasks","data structures","dp"]},{"ContestId":1533,"Index":"G","Name":"Biome Map","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","constructive algorithms","dfs and similar","graphs"]},{"ContestId":1533,"Index":"F","Name":"Binary String Partition","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","binary search","greedy"]},{"ContestId":1533,"Index":"E","Name":"Chess Team Forming","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","binary search","data structures","greedy"]},{"ContestId":1533,"Index":"D","Name":"String Searching","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","hashing"]},{"ContestId":1533,"Index":"C","Name":"Sweets","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","data structures","implementation"]},{"ContestId":1533,"Index":"B","Name":"Nearest Point Function","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1533,"Index":"A","Name":"Travel to Bertown","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation","math"]},{"ContestId":1532,"Index":"F","Name":"Prefixes and Suffixes","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","strings"]},{"ContestId":1532,"Index":"E","Name":"Good Array","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1532,"Index":"D","Name":"Teams Forming","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","sortings"]},{"ContestId":1532,"Index":"C","Name":"Uniform String","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1532,"Index":"B","Name":"Frog Jumping","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","math"]},{"ContestId":1532,"Index":"A","Name":"A+B (Trial Problem)","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1531,"Index":"E3","Name":"–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ª–∏—è–Ω–∏–µ–º","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","binary search"]},{"ContestId":1531,"Index":"E2","Name":"–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ª–∏—è–Ω–∏–µ–º","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","*special","brute force"]},{"ContestId":1531,"Index":"E1","Name":"–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ª–∏—è–Ω–∏–µ–º","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1531,"Index":"D","Name":"–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ó–∏–Ω–≥–µ—Ä | color","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","*special"]},{"ContestId":1531,"Index":"C","Name":"–°–∏–º–º–µ—Ç—Ä–∏—á–Ω—ã–π –∞–º—Ñ–∏—Ç–µ–∞—Ç—Ä","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","constructive algorithms","dp"]},{"ContestId":1531,"Index":"B2","Name":"–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1531,"Index":"B1","Name":"–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","*special"]},{"ContestId":1531,"Index":"A","Name":"–ó–∏–Ω–≥–µ—Ä | color","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1530,"Index":"H","Name":"Turing's Award","Type":"PROGRAMMING","Rating":3400,"Points":4750,"Tags":["data structures","dp"]},{"ContestId":1530,"Index":"G","Name":"What a Reversal","Type":"PROGRAMMING","Rating":3300,"Points":3750,"Tags":["constructive algorithms"]},{"ContestId":1530,"Index":"F","Name":"Bingo","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["bitmasks","combinatorics","dp","math","probabilities"]},{"ContestId":1530,"Index":"E","Name":"Minimax","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":1530,"Index":"D","Name":"Secret Santa","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","flows","graphs","greedy","math"]},{"ContestId":1530,"Index":"C","Name":"Pursuit","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["binary search","brute force","greedy","sortings"]},{"ContestId":1530,"Index":"B","Name":"Putting Plates","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["constructive algorithms","implementation"]},{"ContestId":1530,"Index":"A","Name":"Binary Decimal","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1529,"Index":"B","Name":"Sifid and Strange Subsequences","Type":"PROGRAMMING","Rating":1100,"Points":1250,"Tags":["greedy","math","sortings"]},{"ContestId":1529,"Index":"A","Name":"Eshag Loves Big Arrays","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1528,"Index":"F","Name":"AmShZ Farm","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["combinatorics","fft","math"]},{"ContestId":1528,"Index":"E","Name":"Mashtali and Hagh Trees","Type":"PROGRAMMING","Rating":2900,"Points":2750,"Tags":["combinatorics","dp","trees"]},{"ContestId":1528,"Index":"D","Name":"It's a bird! No, it's a plane! No, it's AaParsa!","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["constructive algorithms","graphs","shortest paths"]},{"ContestId":1528,"Index":"C","Name":"Trees of Tranquillity","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["data structures","dfs and similar","greedy","trees"]},{"ContestId":1528,"Index":"B","Name":"Kavi on Pairing Duty","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["combinatorics","dp","math"]},{"ContestId":1528,"Index":"A","Name":"Parsa's Humongous Tree","Type":"PROGRAMMING","Rating":1600,"Points":750,"Tags":["dfs and similar","divide and conquer","dp","greedy","trees"]},{"ContestId":1527,"Index":"E","Name":"Partition Game","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["binary search","data structures","divide and conquer","dp"]},{"ContestId":1527,"Index":"D","Name":"MEX Tree","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["combinatorics","dfs and similar","implementation","math","trees"]},{"ContestId":1527,"Index":"C","Name":"Sequence Pair Weight","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["hashing","implementation","math"]},{"ContestId":1527,"Index":"B2","Name":"Palindrome Game (hard version)","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["constructive algorithms","games"]},{"ContestId":1527,"Index":"B1","Name":"Palindrome Game (easy version)","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["constructive algorithms","games"]},{"ContestId":1527,"Index":"A","Name":"And Then There Were K","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["bitmasks"]},{"ContestId":1526,"Index":"F","Name":"Median Queries","Type":"PROGRAMMING","Rating":3000,"Points":3500,"Tags":["constructive algorithms","interactive","probabilities"]},{"ContestId":1526,"Index":"E","Name":"Oolimry and Suffix Array","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["combinatorics","constructive algorithms","math"]},{"ContestId":1526,"Index":"D","Name":"Kill Anton","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["brute force","constructive algorithms","data structures","math","strings"]},{"ContestId":1526,"Index":"C2","Name":"Potions (Hard Version)","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["data structures","greedy"]},{"ContestId":1526,"Index":"C1","Name":"Potions (Easy Version)","Type":"PROGRAMMING","Rating":1500,"Points":750,"Tags":["brute force","data structures","dp","greedy"]},{"ContestId":1526,"Index":"B","Name":"I Hate 1111","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["dp","math","number theory"]},{"ContestId":1526,"Index":"A","Name":"Mean Inequality","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","sortings"]},{"ContestId":1525,"Index":"F","Name":"Goblins And Gnomes","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["brute force","dp","flows","graph matchings"]},{"ContestId":1525,"Index":"E","Name":"Assimilation IV","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","dp","math","probabilities","two pointers"]},{"ContestId":1525,"Index":"D","Name":"Armchairs","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","flows","graph matchings","greedy"]},{"ContestId":1525,"Index":"C","Name":"Robot Collisions","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","greedy","implementation","sortings"]},{"ContestId":1525,"Index":"B","Name":"Permutation Sort","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1525,"Index":"A","Name":"Potion-making","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math","number theory"]},{"ContestId":1523,"Index":"H","Name":"Hopping Around the Array ","Type":"PROGRAMMING","Rating":3500,"Points":3250,"Tags":["data structures","dp"]},{"ContestId":1523,"Index":"G","Name":"Try Booking","Type":"PROGRAMMING","Rating":3200,"Points":3250,"Tags":["data structures","divide and conquer"]},{"ContestId":1523,"Index":"F","Name":"Favorite Game","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["bitmasks","dp"]},{"ContestId":1523,"Index":"E","Name":"Crypto Lights","Type":"PROGRAMMING","Rating":2600,"Points":2250,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":1523,"Index":"D","Name":"Love-Hate","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["bitmasks","brute force","dp","probabilities"]},{"ContestId":1523,"Index":"C","Name":"Compression and Expansion","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","data structures","greedy","implementation","trees"]},{"ContestId":1523,"Index":"B","Name":"Lord of the Values","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":1523,"Index":"A","Name":"Game of Life","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1521,"Index":"E","Name":"Nastia and a Beautiful Matrix","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["binary search","constructive algorithms","dp","greedy"]},{"ContestId":1521,"Index":"D","Name":"Nastia Plays with a Tree","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["constructive algorithms","data structures","dfs and similar","dp","dsu","greedy","implementation","trees"]},{"ContestId":1521,"Index":"C","Name":"Nastia and a Hidden Permutation","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["constructive algorithms","interactive"]},{"ContestId":1521,"Index":"B","Name":"Nastia and a Good Array","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1521,"Index":"A","Name":"Nastia and Nearly Good Numbers","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1520,"Index":"G","Name":"To Go Or Not To Go?","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","dfs and similar","graphs","greedy","implementation","shortest paths"]},{"ContestId":1520,"Index":"F2","Name":"Guess the K-th Zero (Hard version)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","constructive algorithms","data structures","interactive"]},{"ContestId":1520,"Index":"F1","Name":"Guess the K-th Zero (Easy version)","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","interactive"]},{"ContestId":1520,"Index":"E","Name":"Arranging The Sheep","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","math"]},{"ContestId":1520,"Index":"D","Name":"Same Differences","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["data structures","hashing","math"]},{"ContestId":1520,"Index":"C","Name":"Not Adjacent Matrix","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1520,"Index":"B","Name":"Ordinary Numbers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":1520,"Index":"A","Name":"Do Not Be Distracted!","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1519,"Index":"F","Name":"Chests and Keys","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["bitmasks","brute force","dfs and similar","dp","flows"]},{"ContestId":1519,"Index":"E","Name":"Off by One","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["constructive algorithms","dfs and similar","geometry","graphs","sortings","trees"]},{"ContestId":1519,"Index":"D","Name":"Maximum Sum of Products","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","dp","implementation","math","two pointers"]},{"ContestId":1519,"Index":"C","Name":"Berland Regional","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","data structures","greedy","number theory","sortings"]},{"ContestId":1519,"Index":"B","Name":"The Cake Is a Lie","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["dp","math"]},{"ContestId":1519,"Index":"A","Name":"Red and Blue Beans","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1517,"Index":"H","Name":"Fly Around the World","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["dp","geometry"]},{"ContestId":1517,"Index":"G","Name":"Starry Night Camping","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["constructive algorithms","flows","graphs"]},{"ContestId":1517,"Index":"F","Name":"Reunion","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["combinatorics","dp","trees"]},{"ContestId":1517,"Index":"E","Name":"Group Photo","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["binary search","data structures","implementation","two pointers"]},{"ContestId":1517,"Index":"D","Name":"Explorer Space","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["dp","graphs","shortest paths"]},{"ContestId":1517,"Index":"C","Name":"Fillomino 2","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","dfs and similar","greedy","implementation"]},{"ContestId":1517,"Index":"B","Name":"Morning Jogging","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":1517,"Index":"A","Name":"Sum of 2050","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1516,"Index":"E","Name":"Baby Ehab Plays with Permutations","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["combinatorics","dp","math"]},{"ContestId":1516,"Index":"D","Name":"Cut","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","data structures","dp","graphs","number theory","two pointers"]},{"ContestId":1516,"Index":"C","Name":"Baby Ehab Partitions Again","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["bitmasks","constructive algorithms","dp","math"]},{"ContestId":1516,"Index":"B","Name":"AGAGA XOOORRR","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["bitmasks","brute force","dp","greedy"]},{"ContestId":1516,"Index":"A","Name":"Tit for Tat","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1515,"Index":"I","Name":"Phoenix and Diamonds","Type":"PROGRAMMING","Rating":3400,"Points":5000,"Tags":["binary search","data structures","sortings"]},{"ContestId":1515,"Index":"H","Name":"Phoenix and Bits","Type":"PROGRAMMING","Rating":3500,"Points":4250,"Tags":["bitmasks","brute force","data structures","sortings"]},{"ContestId":1515,"Index":"G","Name":"Phoenix and Odometers","Type":"PROGRAMMING","Rating":2700,"Points":3500,"Tags":["dfs and similar","graphs","math","number theory"]},{"ContestId":1515,"Index":"F","Name":"Phoenix and Earthquake","Type":"PROGRAMMING","Rating":2600,"Points":3250,"Tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","trees"]},{"ContestId":1515,"Index":"E","Name":"Phoenix and Computers","Type":"PROGRAMMING","Rating":2200,"Points":2750,"Tags":["combinatorics","dp","math"]},{"ContestId":1515,"Index":"D","Name":"Phoenix and Socks","Type":"PROGRAMMING","Rating":1500,"Points":2000,"Tags":["greedy","sortings","two pointers"]},{"ContestId":1515,"Index":"C","Name":"Phoenix and Towers","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":1515,"Index":"B","Name":"Phoenix and Puzzle","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["brute force","geometry","math","number theory"]},{"ContestId":1515,"Index":"A","Name":"Phoenix and Gold","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1514,"Index":"E","Name":"Baby Ehab's Hyper Apartment","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["binary search","graphs","interactive","sortings","two pointers"]},{"ContestId":1514,"Index":"D","Name":"Cut and Stick","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","data structures","greedy","implementation","sortings"]},{"ContestId":1514,"Index":"C","Name":"Product 1 Modulo N","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["greedy","number theory"]},{"ContestId":1514,"Index":"B","Name":"AND 0, Sum Big","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["bitmasks","combinatorics","math"]},{"ContestId":1514,"Index":"A","Name":"Perfectly Imperfect Array","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math","number theory"]},{"ContestId":1513,"Index":"F","Name":"Swapping Problem","Type":"PROGRAMMING","Rating":2500,"Points":3500,"Tags":["brute force","constructive algorithms","data structures","sortings"]},{"ContestId":1513,"Index":"E","Name":"Cost Equilibrium","Type":"PROGRAMMING","Rating":2300,"Points":2750,"Tags":["combinatorics","constructive algorithms","math","sortings"]},{"ContestId":1513,"Index":"D","Name":"GCD and MST","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","dsu","graphs","greedy","number theory","sortings"]},{"ContestId":1513,"Index":"C","Name":"Add One","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["dp","matrices"]},{"ContestId":1513,"Index":"B","Name":"AND Sequences","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["bitmasks","combinatorics","constructive algorithms","math"]},{"ContestId":1513,"Index":"A","Name":"Array and Peaks","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1512,"Index":"G","Name":"Short Task","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","dp","math","number theory"]},{"ContestId":1512,"Index":"F","Name":"Education","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","dp","greedy","implementation"]},{"ContestId":1512,"Index":"E","Name":"Permutation by Sum","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1512,"Index":"D","Name":"Corrupted Array","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":1512,"Index":"C","Name":"A-B Palindrome","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","implementation","strings"]},{"ContestId":1512,"Index":"B","Name":"Almost Rectangle","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1512,"Index":"A","Name":"Spy Detected!","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1511,"Index":"G","Name":"Chips on a Board","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["bitmasks","brute force","data structures","dp","games","two pointers"]},{"ContestId":1511,"Index":"F","Name":"Chainword","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["brute force","data structures","dp","matrices","string suffix structures","strings"]},{"ContestId":1511,"Index":"E","Name":"Colorings and Dominoes","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","dp","greedy","math"]},{"ContestId":1511,"Index":"D","Name":"Min Cost String","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","constructive algorithms","graphs","greedy","strings"]},{"ContestId":1511,"Index":"C","Name":"Yet Another Card Deck","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","data structures","implementation","trees"]},{"ContestId":1511,"Index":"B","Name":"GCD Length","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1511,"Index":"A","Name":"Review Site","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1510,"Index":"K","Name":"King's Task","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","graphs","implementation"]},{"ContestId":1510,"Index":"J","Name":"Japanese Game","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1510,"Index":"I","Name":"Is It Rated?","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["greedy","interactive","math","probabilities"]},{"ContestId":1510,"Index":"H","Name":"Hard Optimization","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["dp"]},{"ContestId":1510,"Index":"G","Name":"Guide","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":[]},{"ContestId":1510,"Index":"F","Name":"Fiber Shape","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":[]},{"ContestId":1510,"Index":"E","Name":"Equilibrium Point /\\textbackslash/\\textbackslash","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":[]},{"ContestId":1510,"Index":"D","Name":"Digits","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","math","number theory"]},{"ContestId":1510,"Index":"C","Name":"Cactus Not Enough","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["dfs and similar","graph matchings","graphs"]},{"ContestId":1510,"Index":"B","Name":"Button Lock","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["flows","graph matchings","graphs"]},{"ContestId":1510,"Index":"A","Name":"ASCII Automata Art","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":[]},{"ContestId":1509,"Index":"C","Name":"The Sports Festival","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dp","greedy"]},{"ContestId":1509,"Index":"B","Name":"TMT Document","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy"]},{"ContestId":1509,"Index":"A","Name":"Average Height","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":1508,"Index":"F","Name":"Optimal Encoding","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["brute force","data structures"]},{"ContestId":1508,"Index":"E","Name":"Tree Calendar","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["brute force","constructive algorithms","data structures","dfs and similar","sortings","trees"]},{"ContestId":1508,"Index":"D","Name":"Swap Pass","Type":"PROGRAMMING","Rating":3000,"Points":2250,"Tags":["constructive algorithms","geometry","sortings"]},{"ContestId":1508,"Index":"C","Name":"Complete the MST","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["bitmasks","brute force","data structures","dfs and similar","dsu","graphs","greedy","trees"]},{"ContestId":1508,"Index":"B","Name":"Almost Sorted","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["binary search","combinatorics","constructive algorithms","implementation"]},{"ContestId":1508,"Index":"A","Name":"Binary Literature","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["constructive algorithms","greedy","implementation","strings","two pointers"]},{"ContestId":1506,"Index":"G","Name":"Maximize the Remaining String","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","data structures","dp","greedy","strings"]},{"ContestId":1506,"Index":"F","Name":"Triangular Paths","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","graphs","math","shortest paths","sortings"]},{"ContestId":1506,"Index":"E","Name":"Restoring the Permutation","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","implementation"]},{"ContestId":1506,"Index":"D","Name":"Epic Transformation","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":1506,"Index":"C","Name":"Double-ended Strings","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","implementation","strings"]},{"ContestId":1506,"Index":"B","Name":"Partial Replacement","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1506,"Index":"A","Name":"Strange Table","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1505,"Index":"I","Name":"Mysterious language again, seriously?","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special"]},{"ContestId":1505,"Index":"H","Name":"L BREAK into program","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["*special"]},{"ContestId":1505,"Index":"G","Name":"Encoded message","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1505,"Index":"F","Name":"Math","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special","math"]},{"ContestId":1505,"Index":"E","Name":"Cakewalk","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","greedy","implementation","shortest paths"]},{"ContestId":1505,"Index":"D","Name":"Xenolith? Hippodrome?","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","number theory"]},{"ContestId":1505,"Index":"C","Name":"Fibonacci Words","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1505,"Index":"B","Name":"DMCA","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","implementation","number theory"]},{"ContestId":1505,"Index":"A","Name":"Is it rated - 2","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["*special","implementation","interactive"]},{"ContestId":1504,"Index":"B","Name":"Flip the Bits","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1504,"Index":"A","Name":" D√©j√† Vu","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","strings"]},{"ContestId":1503,"Index":"F","Name":"Balance the Cards","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["constructive algorithms","data structures","divide and conquer","geometry","graphs","implementation"]},{"ContestId":1503,"Index":"E","Name":"2-Coloring","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["combinatorics","dp","math"]},{"ContestId":1503,"Index":"D","Name":"Flip the Cards","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["2-sat","constructive algorithms","data structures","greedy","sortings","two pointers"]},{"ContestId":1503,"Index":"C","Name":"Travelling Salesman Problem","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["binary search","data structures","dp","greedy","shortest paths","sortings","two pointers"]},{"ContestId":1503,"Index":"B","Name":"3-Coloring","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","games","interactive"]},{"ContestId":1503,"Index":"A","Name":"Balance the Bits","Type":"PROGRAMMING","Rating":1600,"Points":750,"Tags":["constructive algorithms","greedy"]},{"ContestId":1501,"Index":"B","Name":"Napoleon Cake","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["dp","implementation","sortings"]},{"ContestId":1501,"Index":"A","Name":"Alexey and Train","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1500,"Index":"F","Name":"Cupboards Jumps","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["dp"]},{"ContestId":1500,"Index":"E","Name":"Subset Trick","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["binary search","data structures"]},{"ContestId":1500,"Index":"D","Name":"Tiles for Bathroom","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["data structures","sortings","two pointers"]},{"ContestId":1500,"Index":"C","Name":"Matrix Sorting","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["bitmasks","brute force","constructive algorithms","greedy","two pointers"]},{"ContestId":1500,"Index":"B","Name":"Two chandeliers","Type":"PROGRAMMING","Rating":2200,"Points":750,"Tags":["binary search","brute force","chinese remainder theorem","math","number theory"]},{"ContestId":1500,"Index":"A","Name":"Going Home","Type":"PROGRAMMING","Rating":1800,"Points":750,"Tags":["brute force","hashing","implementation","math"]},{"ContestId":1499,"Index":"G","Name":"Graph Coloring","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["data structures","graphs","interactive"]},{"ContestId":1499,"Index":"F","Name":"Diameter Cuts","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["combinatorics","dfs and similar","dp","trees"]},{"ContestId":1499,"Index":"E","Name":"Chaotic Merge","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["combinatorics","dp","math","strings"]},{"ContestId":1499,"Index":"D","Name":"The Number of Pairs","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","math","number theory"]},{"ContestId":1499,"Index":"C","Name":"Minimum Grid Path","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","data structures","greedy","math"]},{"ContestId":1499,"Index":"B","Name":"Binary Removals","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","dp","greedy","implementation"]},{"ContestId":1499,"Index":"A","Name":"Domino on Windowsill","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["combinatorics","constructive algorithms","math"]},{"ContestId":1498,"Index":"F","Name":"Christmas Game","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["bitmasks","data structures","dfs and similar","dp","games","math","trees"]},{"ContestId":1498,"Index":"E","Name":"Two Houses","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["brute force","graphs","greedy","interactive","sortings"]},{"ContestId":1498,"Index":"D","Name":"Bananas in a Microwave","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["dfs and similar","dp","graphs","implementation"]},{"ContestId":1498,"Index":"C","Name":"Planar Reflections","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["brute force","data structures","dp"]},{"ContestId":1498,"Index":"B","Name":"Box Fitting","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","bitmasks","data structures","greedy"]},{"ContestId":1498,"Index":"A","Name":"GCD Sum","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","math"]},{"ContestId":1497,"Index":"E2","Name":"Square-free division (hard version)","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["data structures","dp","greedy","math","number theory","two pointers"]},{"ContestId":1497,"Index":"E1","Name":"Square-Free Division (easy version)","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["data structures","dp","greedy","math","number theory","two pointers"]},{"ContestId":1497,"Index":"D","Name":"Genius","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["bitmasks","dp","graphs","number theory"]},{"ContestId":1497,"Index":"C2","Name":"k-LCM (hard version)","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1497,"Index":"C1","Name":"k-LCM (easy version)","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["constructive algorithms","math"]},{"ContestId":1497,"Index":"B","Name":"M-arrays","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1497,"Index":"A","Name":"Meximization","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","data structures","greedy","sortings"]},{"ContestId":1496,"Index":"B","Name":"Max and Mex","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["math"]},{"ContestId":1496,"Index":"A","Name":"Split it!","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","constructive algorithms","greedy","strings"]},{"ContestId":1495,"Index":"F","Name":"Squares","Type":"PROGRAMMING","Rating":3300,"Points":3250,"Tags":["constructive algorithms","data structures","dp","graphs","trees"]},{"ContestId":1495,"Index":"E","Name":"Qingshan and Daniel","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["brute force","data structures","greedy","implementation"]},{"ContestId":1495,"Index":"D","Name":"BFS Trees","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["combinatorics","dfs and similar","graphs","math","shortest paths","trees"]},{"ContestId":1495,"Index":"C","Name":"Garden of the Sun","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["constructive algorithms","graphs"]},{"ContestId":1495,"Index":"B","Name":"Let's Go Hiking","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["games","greedy"]},{"ContestId":1495,"Index":"A","Name":"Diamond Miner","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["geometry","greedy","math","sortings"]},{"ContestId":1494,"Index":"F","Name":"Delete The Edges","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["brute force","constructive algorithms","dfs and similar","graphs","implementation"]},{"ContestId":1494,"Index":"E","Name":"A-Z Graph","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["constructive algorithms","data structures","graphs","hashing"]},{"ContestId":1494,"Index":"D","Name":"Dogeforces","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["constructive algorithms","data structures","dfs and similar","divide and conquer","dsu","greedy","sortings","trees"]},{"ContestId":1494,"Index":"C","Name":"1D Sokoban","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","dp","greedy","implementation","two pointers"]},{"ContestId":1494,"Index":"B","Name":"Berland Crossword","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["bitmasks","brute force","greedy","implementation"]},{"ContestId":1494,"Index":"A","Name":"ABC String","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["bitmasks","brute force","implementation"]},{"ContestId":1493,"Index":"F","Name":"Enchanted Matrix","Type":"PROGRAMMING","Rating":2600,"Points":3250,"Tags":["bitmasks","interactive","number theory"]},{"ContestId":1493,"Index":"E","Name":"Enormous XOR","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["bitmasks","constructive algorithms","greedy","math","strings","two pointers"]},{"ContestId":1493,"Index":"D","Name":"GCD of an Array","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["brute force","data structures","hashing","implementation","math","number theory","sortings","two pointers"]},{"ContestId":1493,"Index":"C","Name":"K-beautiful Strings","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["binary search","brute force","constructive algorithms","greedy","strings"]},{"ContestId":1493,"Index":"B","Name":"Planet Lapituletti","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["brute force","implementation"]},{"ContestId":1493,"Index":"A","Name":"Anti-knapsack","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["constructive algorithms","greedy"]},{"ContestId":1492,"Index":"E","Name":"Almost Fault-Tolerant Database","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["brute force","constructive algorithms","dfs and similar","greedy","implementation"]},{"ContestId":1492,"Index":"D","Name":"Genius's Gambit","Type":"PROGRAMMING","Rating":1900,"Points":2250,"Tags":["bitmasks","constructive algorithms","greedy","math"]},{"ContestId":1492,"Index":"C","Name":"Maximum width","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["binary search","data structures","dp","greedy","two pointers"]},{"ContestId":1492,"Index":"B","Name":"Card Deck","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["data structures","greedy","math"]},{"ContestId":1492,"Index":"A","Name":"Three swimmers","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1491,"Index":"I","Name":"Ruler Of The Zoo","Type":"PROGRAMMING","Rating":3500,"Points":5000,"Tags":["brute force","data structures"]},{"ContestId":1491,"Index":"H","Name":"Yuezheng Ling and Dynamic Tree","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["data structures","trees"]},{"ContestId":1491,"Index":"G","Name":"Switch and Flip","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["constructive algorithms","graphs","math"]},{"ContestId":1491,"Index":"F","Name":"Magnets","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["binary search","constructive algorithms","interactive"]},{"ContestId":1491,"Index":"E","Name":"Fib-tree","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["brute force","dfs and similar","divide and conquer","number theory","trees"]},{"ContestId":1491,"Index":"D","Name":"Zookeeper and The Infinite Zoo","Type":"PROGRAMMING","Rating":1800,"Points":1250,"Tags":["bitmasks","constructive algorithms","dp","greedy","math"]},{"ContestId":1491,"Index":"C","Name":"Pekora and Trampoline","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["brute force","data structures","dp","greedy","implementation"]},{"ContestId":1491,"Index":"B","Name":"Minimal Cost","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["brute force","math"]},{"ContestId":1491,"Index":"A","Name":"K-th Largest Value","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","implementation"]},{"ContestId":1490,"Index":"G","Name":"Old Floppy Drive ","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures","math"]},{"ContestId":1490,"Index":"F","Name":"Equalize the Array","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","data structures","greedy","math","sortings"]},{"ContestId":1490,"Index":"E","Name":"Accidental Victory","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","data structures","greedy"]},{"ContestId":1490,"Index":"D","Name":"Permutation Transformation","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["dfs and similar","divide and conquer","implementation"]},{"ContestId":1490,"Index":"C","Name":"Sum of Cubes","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","brute force","brute force","math"]},{"ContestId":1490,"Index":"B","Name":"Balanced Remainders","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":1490,"Index":"A","Name":"Dense Array","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1488,"Index":"J","Name":"Flower Shop","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["*special","data structures","fft","math"]},{"ContestId":1488,"Index":"I","Name":"Demonic Invasion","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["*special","flows"]},{"ContestId":1488,"Index":"H","Name":"Build From Suffixes","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["*special","combinatorics","data structures"]},{"ContestId":1488,"Index":"G","Name":"Painting Numbers","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["*special","data structures","greedy","number theory"]},{"ContestId":1488,"Index":"F","Name":"Dogecoin","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special","*special","binary search","data structures"]},{"ContestId":1488,"Index":"E","Name":"Palindromic Doubles","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special","data structures","dp"]},{"ContestId":1488,"Index":"D","Name":"Problemsolving Marathon","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special","binary search","greedy"]},{"ContestId":1488,"Index":"C","Name":"Two Policemen","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special","binary search","brute force","math"]},{"ContestId":1488,"Index":"B","Name":"RBS Deletion","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","greedy"]},{"ContestId":1488,"Index":"A","Name":"From Zero To Y","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["*special","math"]},{"ContestId":1487,"Index":"G","Name":"String Counting","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["combinatorics","dp","fft","math"]},{"ContestId":1487,"Index":"F","Name":"Ones","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["dp","greedy","shortest paths"]},{"ContestId":1487,"Index":"E","Name":"Cheap Dinner","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","data structures","graphs","greedy","implementation","sortings","two pointers"]},{"ContestId":1487,"Index":"D","Name":"Pythagorean Triples","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","brute force","math","number theory"]},{"ContestId":1487,"Index":"C","Name":"Minimum Ties","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","constructive algorithms","dfs and similar","graphs","greedy","implementation","math"]},{"ContestId":1487,"Index":"B","Name":"Cat Cycle","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["math","number theory"]},{"ContestId":1487,"Index":"A","Name":"Arena","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":1486,"Index":"F","Name":"Pairs of Paths","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["combinatorics","data structures","dfs and similar","dp","trees"]},{"ContestId":1486,"Index":"E","Name":"Paired Payment","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["binary search","brute force","constructive algorithms","dp","flows","graphs","shortest paths"]},{"ContestId":1486,"Index":"D","Name":"Max Median","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["binary search","data structures","dp"]},{"ContestId":1486,"Index":"C2","Name":"Guessing the Greatest (hard version)","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["binary search","interactive"]},{"ContestId":1486,"Index":"C1","Name":"Guessing the Greatest (easy version)","Type":"PROGRAMMING","Rating":1600,"Points":750,"Tags":["binary search","interactive"]},{"ContestId":1486,"Index":"B","Name":"Eastern Exhibition","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","geometry","shortest paths","sortings"]},{"ContestId":1486,"Index":"A","Name":"Shifting Stacks","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1485,"Index":"F","Name":"Copy or Prefix Sum","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["combinatorics","data structures","dp","sortings"]},{"ContestId":1485,"Index":"E","Name":"Move and Swap","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dfs and similar","dp","greedy","trees"]},{"ContestId":1485,"Index":"D","Name":"Multiples and Power Differences","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["constructive algorithms","graphs","math","number theory"]},{"ContestId":1485,"Index":"C","Name":"Floor and Mod","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","brute force","math","number theory"]},{"ContestId":1485,"Index":"B","Name":"Replace and Keep Sorted","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["dp","implementation","math"]},{"ContestId":1485,"Index":"A","Name":"Add and Divide","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","greedy","math","number theory"]},{"ContestId":1482,"Index":"H","Name":"Exam","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["data structures","string suffix structures","trees"]},{"ContestId":1482,"Index":"G","Name":"Vabank","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["binary search","interactive"]},{"ContestId":1482,"Index":"F","Name":"Useful Edges","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["graphs","shortest paths"]},{"ContestId":1482,"Index":"E","Name":"Skyline Photo","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["data structures","divide and conquer","dp"]},{"ContestId":1482,"Index":"D","Name":"Playlist","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["data structures","dsu","implementation","shortest paths"]},{"ContestId":1482,"Index":"C","Name":"Basic Diplomacy","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","constructive algorithms","greedy","implementation"]},{"ContestId":1482,"Index":"B","Name":"Restore Modulo","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["implementation","math"]},{"ContestId":1482,"Index":"A","Name":"Prison Break","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1481,"Index":"F","Name":"AB Tree","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["dp","greedy","trees"]},{"ContestId":1481,"Index":"E","Name":"Sorting Books","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","dp","greedy"]},{"ContestId":1481,"Index":"D","Name":"AB Graph","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["brute force","constructive algorithms","graphs","greedy","implementation"]},{"ContestId":1481,"Index":"C","Name":"Fence Painting","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":1481,"Index":"B","Name":"New Colony","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["brute force","greedy","implementation"]},{"ContestId":1481,"Index":"A","Name":"Space Navigation ","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","strings"]},{"ContestId":1480,"Index":"B","Name":"The Great Hero","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","implementation","sortings"]},{"ContestId":1480,"Index":"A","Name":"Yet Another String Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["games","greedy","strings"]},{"ContestId":1479,"Index":"E","Name":"School Clubs","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["dp","fft","math","number theory","probabilities"]},{"ContestId":1479,"Index":"D","Name":"Odd Mineral Resource","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["binary search","bitmasks","brute force","data structures","probabilities","trees"]},{"ContestId":1479,"Index":"C","Name":"Continuous City","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":1479,"Index":"B2","Name":"Painting the Array II","Type":"PROGRAMMING","Rating":2100,"Points":750,"Tags":["constructive algorithms","data structures","dp","greedy","implementation"]},{"ContestId":1479,"Index":"B1","Name":"Painting the Array I","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["constructive algorithms","data structures","dp","greedy","implementation"]},{"ContestId":1479,"Index":"A","Name":"Searching Local Minimum","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["binary search","interactive","ternary search"]},{"ContestId":1478,"Index":"C","Name":"Nezzar and Symmetric Array","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["implementation","math","sortings"]},{"ContestId":1478,"Index":"B","Name":"Nezzar and Lucky Number","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","dp","greedy","math"]},{"ContestId":1478,"Index":"A","Name":"Nezzar and Colorful Balls","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":1477,"Index":"F","Name":"Nezzar and Chocolate Bars","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["combinatorics","fft","math","probabilities"]},{"ContestId":1477,"Index":"E","Name":"Nezzar and Tournaments","Type":"PROGRAMMING","Rating":3300,"Points":2750,"Tags":["data structures","greedy"]},{"ContestId":1477,"Index":"D","Name":"Nezzar and Hidden Permutations","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":1477,"Index":"C","Name":"Nezzar and Nice Beatmap","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["constructive algorithms","geometry","greedy","math","sortings"]},{"ContestId":1477,"Index":"B","Name":"Nezzar and Binary String","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["data structures","greedy"]},{"ContestId":1477,"Index":"A","Name":"Nezzar and Board","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1476,"Index":"G","Name":"Minimum Difference","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["data structures","hashing","sortings","two pointers"]},{"ContestId":1476,"Index":"F","Name":"Lanterns","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["binary search","data structures","dp"]},{"ContestId":1476,"Index":"E","Name":"Pattern Matching","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["bitmasks","data structures","dfs and similar","graphs","hashing","sortings","strings"]},{"ContestId":1476,"Index":"D","Name":"Journey","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","dp","dsu","implementation"]},{"ContestId":1476,"Index":"C","Name":"Longest Simple Cycle","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dp","graphs","greedy"]},{"ContestId":1476,"Index":"B","Name":"Inflation","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","brute force","greedy","math"]},{"ContestId":1476,"Index":"A","Name":"K-divisible Sum","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["binary search","constructive algorithms","greedy","math"]},{"ContestId":1475,"Index":"G","Name":"Strange Beauty","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dp","math","number theory","sortings"]},{"ContestId":1475,"Index":"F","Name":"Unusual Matrix","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["2-sat","brute force","constructive algorithms"]},{"ContestId":1475,"Index":"E","Name":"Advertising Agency","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["combinatorics","math","sortings"]},{"ContestId":1475,"Index":"D","Name":"Cleaning the Phone","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","dp","sortings","two pointers"]},{"ContestId":1475,"Index":"C","Name":"Ball in Berland","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["combinatorics","graphs","math"]},{"ContestId":1475,"Index":"B","Name":"New Year's Number","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","dp","math"]},{"ContestId":1475,"Index":"A","Name":"Odd Divisor","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math","number theory"]},{"ContestId":1474,"Index":"F","Name":"1 2 3 4 ...","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["dp","math","matrices"]},{"ContestId":1474,"Index":"E","Name":"What Is It?","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["constructive algorithms","greedy"]},{"ContestId":1474,"Index":"D","Name":"Cleaning","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["data structures","dp","greedy","math"]},{"ContestId":1474,"Index":"C","Name":"Array Destruction","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","constructive algorithms","data structures","greedy","implementation","sortings"]},{"ContestId":1474,"Index":"B","Name":"Different Divisors","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["binary search","constructive algorithms","greedy","math","number theory"]},{"ContestId":1474,"Index":"A","Name":"Puzzle From the Future","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1473,"Index":"G","Name":"Tiles","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["combinatorics","dp","fft","math"]},{"ContestId":1473,"Index":"F","Name":"Strange Set","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["flows","math"]},{"ContestId":1473,"Index":"E","Name":"Minimum Path","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["graphs","shortest paths"]},{"ContestId":1473,"Index":"D","Name":"Program","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["data structures","dp","implementation","strings"]},{"ContestId":1473,"Index":"C","Name":"No More Inversions","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1473,"Index":"B","Name":"String LCM","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","math","number theory","strings"]},{"ContestId":1473,"Index":"A","Name":"Replacing Elements","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation","math","sortings"]},{"ContestId":1472,"Index":"G","Name":"Moving to the Capital","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dfs and similar","dp","graphs","shortest paths"]},{"ContestId":1472,"Index":"F","Name":"New Year's Puzzle","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","dp","graph matchings","greedy","sortings"]},{"ContestId":1472,"Index":"E","Name":"Correct Placement","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","data structures","dp","sortings","two pointers"]},{"ContestId":1472,"Index":"D","Name":"Even-Odd Game","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["dp","games","greedy","sortings"]},{"ContestId":1472,"Index":"C","Name":"Long Jumps","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["dp","graphs"]},{"ContestId":1472,"Index":"B","Name":"Fair Division","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["dp","greedy","math"]},{"ContestId":1472,"Index":"A","Name":"Cards for Friends","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1471,"Index":"B","Name":"Strange List","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":1471,"Index":"A","Name":"Strange Partition","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","math","number theory"]},{"ContestId":1470,"Index":"F","Name":"Strange Covering","Type":"PROGRAMMING","Rating":3500,"Points":2500,"Tags":["divide and conquer"]},{"ContestId":1470,"Index":"E","Name":"Strange Permutation","Type":"PROGRAMMING","Rating":3200,"Points":2000,"Tags":["binary search","combinatorics","data structures","dp","graphs","implementation","two pointers"]},{"ContestId":1470,"Index":"D","Name":"Strange Housing","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["constructive algorithms","dfs and similar","graph matchings","graphs","greedy"]},{"ContestId":1470,"Index":"C","Name":"Strange Shuffle","Type":"PROGRAMMING","Rating":2500,"Points":1000,"Tags":["binary search","brute force","constructive algorithms","interactive"]},{"ContestId":1470,"Index":"B","Name":"Strange Definition","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["bitmasks","graphs","hashing","math","number theory"]},{"ContestId":1470,"Index":"A","Name":"Strange Birthday Party","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["binary search","dp","greedy","sortings","two pointers"]},{"ContestId":1469,"Index":"F","Name":"Power Sockets","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["binary search","data structures","greedy"]},{"ContestId":1469,"Index":"E","Name":"A Bit Similar","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["bitmasks","brute force","hashing","string suffix structures","strings","two pointers"]},{"ContestId":1469,"Index":"D","Name":"Ceil Divisions","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","constructive algorithms","math","number theory"]},{"ContestId":1469,"Index":"C","Name":"Building a Fence","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dp","greedy","implementation","two pointers"]},{"ContestId":1469,"Index":"B","Name":"Red and Blue","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1469,"Index":"A","Name":"Regular Bracket Sequence","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1468,"Index":"N","Name":"Waste Sorting","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1468,"Index":"M","Name":"Similar Sets","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","graphs","implementation"]},{"ContestId":1468,"Index":"L","Name":"Prime Divisors Selection","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["binary search","greedy","math","number theory"]},{"ContestId":1468,"Index":"K","Name":"The Robot","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1468,"Index":"J","Name":"Road Reform","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dsu","graphs","greedy"]},{"ContestId":1468,"Index":"I","Name":"Plane Tiling","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["geometry","implementation","math"]},{"ContestId":1468,"Index":"H","Name":"K and Medians","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1468,"Index":"G","Name":"Hobbits","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["binary search","geometry"]},{"ContestId":1468,"Index":"F","Name":"Full Turn","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["geometry","hashing","number theory"]},{"ContestId":1468,"Index":"E","Name":"Four Segments","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1468,"Index":"D","Name":"Firecrackers","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","sortings"]},{"ContestId":1468,"Index":"C","Name":"Berpizza","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1468,"Index":"B","Name":"Bakery","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["data structures","dsu"]},{"ContestId":1468,"Index":"A","Name":"LaIS","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","dp","greedy"]},{"ContestId":1467,"Index":"E","Name":"Distinctive Roots in a Tree","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","dfs and similar","dp","trees"]},{"ContestId":1467,"Index":"D","Name":"Sum of Paths","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["combinatorics","dp","math"]},{"ContestId":1467,"Index":"C","Name":"Three Bags","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1467,"Index":"B","Name":"Hills And Valleys","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":1467,"Index":"A","Name":"Wizard of Orz","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1466,"Index":"I","Name":"The Riddle of the Sphinx","Type":"PROGRAMMING","Rating":3400,"Points":4000,"Tags":["binary search","data structures","data structures","interactive"]},{"ContestId":1466,"Index":"H","Name":"Finding satisfactory solutions","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["combinatorics","dp","graphs","greedy","math"]},{"ContestId":1466,"Index":"G","Name":"Song of the Sirens","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["combinatorics","divide and conquer","hashing","math","string suffix structures","strings"]},{"ContestId":1466,"Index":"F","Name":"Euclid's nightmare","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["bitmasks","dfs and similar","dsu","graphs","greedy","math","sortings"]},{"ContestId":1466,"Index":"E","Name":"Apollo versus Pan","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["bitmasks","brute force","math"]},{"ContestId":1466,"Index":"D","Name":"13th Labour of Heracles","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["data structures","greedy","sortings","trees"]},{"ContestId":1466,"Index":"C","Name":"Canine poetry","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["dp","greedy","strings"]},{"ContestId":1466,"Index":"B","Name":"Last minute enhancements","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["dp","greedy"]},{"ContestId":1466,"Index":"A","Name":"Bovine Dilemma","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","geometry","math"]},{"ContestId":1464,"Index":"F","Name":"My Beautiful Madness","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["data structures","trees"]},{"ContestId":1463,"Index":"F","Name":"Max Correct Set","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["bitmasks","dp","math"]},{"ContestId":1463,"Index":"E","Name":"Plan of Lectures","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["constructive algorithms","dfs and similar","dsu","graphs","implementation","sortings","trees"]},{"ContestId":1463,"Index":"D","Name":"Pairs","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","constructive algorithms","greedy","two pointers"]},{"ContestId":1463,"Index":"C","Name":"Busy Robot","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["implementation"]},{"ContestId":1463,"Index":"B","Name":"Find The Array","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["bitmasks","constructive algorithms","greedy"]},{"ContestId":1463,"Index":"A","Name":"Dungeon","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","math"]},{"ContestId":1462,"Index":"F","Name":"The Treasure of The Segments","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","data structures","greedy"]},{"ContestId":1462,"Index":"E2","Name":"Close Tuples (hard version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","combinatorics","implementation","math","sortings","two pointers"]},{"ContestId":1462,"Index":"E1","Name":"Close Tuples (easy version)","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","combinatorics","math","sortings","two pointers"]},{"ContestId":1462,"Index":"D","Name":"Add to Neighbour and Remove","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","math","number theory"]},{"ContestId":1462,"Index":"C","Name":"Unique Number","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1462,"Index":"B","Name":"Last Year's Substring","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["dp","implementation","strings"]},{"ContestId":1462,"Index":"A","Name":"Favorite Sequence","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","two pointers"]},{"ContestId":1461,"Index":"F","Name":"Mathematical Expression","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1461,"Index":"E","Name":"Water Level","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["brute force","graphs","greedy","implementation","math"]},{"ContestId":1461,"Index":"D","Name":"Divide and Summarize","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","brute force","data structures","divide and conquer","implementation","sortings"]},{"ContestId":1461,"Index":"C","Name":"Random Events","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["dp","math","probabilities"]},{"ContestId":1461,"Index":"B","Name":"Find the Spruce","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","dp","implementation"]},{"ContestId":1461,"Index":"A","Name":"String Generation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1459,"Index":"B","Name":"Move and Turn","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["dp","math"]},{"ContestId":1459,"Index":"A","Name":"Red-Blue Shuffle","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["math","probabilities"]},{"ContestId":1458,"Index":"F","Name":"Range Diameter Sum","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["data structures","trees"]},{"ContestId":1458,"Index":"E","Name":"Nim Shortcuts","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["data structures","games"]},{"ContestId":1458,"Index":"D","Name":"Flip and Reverse","Type":"PROGRAMMING","Rating":3100,"Points":2000,"Tags":["data structures","graphs","greedy"]},{"ContestId":1458,"Index":"C","Name":"Latin Square","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["math","matrices"]},{"ContestId":1458,"Index":"B","Name":"Glass Half Spilled","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["dp"]},{"ContestId":1458,"Index":"A","Name":"Row GCD","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["math","number theory"]},{"ContestId":1456,"Index":"E","Name":"XOR-ranges","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["dp","greedy"]},{"ContestId":1455,"Index":"G","Name":"Forbidden Value","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["data structures","dp"]},{"ContestId":1455,"Index":"F","Name":"String and Operations","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1455,"Index":"E","Name":"Four Points","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","constructive algorithms","flows","geometry","greedy","implementation","math","ternary search"]},{"ContestId":1455,"Index":"D","Name":"Sequence and Swaps","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dp","greedy","sortings"]},{"ContestId":1455,"Index":"C","Name":"Ping-pong","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","games","math"]},{"ContestId":1455,"Index":"B","Name":"Jumps","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1455,"Index":"A","Name":"Strange Functions","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math","number theory"]},{"ContestId":1454,"Index":"F","Name":"Array Partition","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","data structures","greedy","two pointers"]},{"ContestId":1454,"Index":"E","Name":"Number of Simple Paths","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["combinatorics","dfs and similar","graphs","trees"]},{"ContestId":1454,"Index":"D","Name":"Number into Sequence","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1454,"Index":"C","Name":"Sequence Transformation","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1454,"Index":"B","Name":"Unique Bid Auction","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1454,"Index":"A","Name":"Special Permutation","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","probabilities"]},{"ContestId":1453,"Index":"F","Name":"Even Harder","Type":"PROGRAMMING","Rating":2700,"Points":3500,"Tags":["dp"]},{"ContestId":1453,"Index":"E","Name":"Dog Snacks","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["binary search","dfs and similar","dp","greedy","trees"]},{"ContestId":1453,"Index":"D","Name":"Checkpoints","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["brute force","constructive algorithms","greedy","math","probabilities"]},{"ContestId":1453,"Index":"C","Name":"Triangles","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["greedy","implementation"]},{"ContestId":1453,"Index":"B","Name":"Suffix Operations","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":1453,"Index":"A","Name":"Cancel the Trains","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1452,"Index":"G","Name":"Game On Tree","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","dfs and similar","greedy","trees"]},{"ContestId":1452,"Index":"F","Name":"Divide Powers","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1452,"Index":"E","Name":"Two Editorials","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["brute force","dp","greedy","sortings","two pointers"]},{"ContestId":1452,"Index":"D","Name":"Radio Towers","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["combinatorics","dp","math"]},{"ContestId":1452,"Index":"C","Name":"Two Brackets","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1452,"Index":"B","Name":"Toy Blocks","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","greedy","math","sortings"]},{"ContestId":1452,"Index":"A","Name":"Robot Program","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1451,"Index":"F","Name":"Nullify The Matrix","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["constructive algorithms","games"]},{"ContestId":1451,"Index":"E2","Name":"Bitwise Queries (Hard Version)","Type":"PROGRAMMING","Rating":2300,"Points":1000,"Tags":["bitmasks","constructive algorithms","interactive","math"]},{"ContestId":1451,"Index":"E1","Name":"Bitwise Queries (Easy Version)","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["bitmasks","constructive algorithms","interactive","math"]},{"ContestId":1451,"Index":"D","Name":"Circle Game","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["games","geometry","math"]},{"ContestId":1451,"Index":"C","Name":"String Equality","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["dp","greedy","hashing","implementation","strings"]},{"ContestId":1451,"Index":"B","Name":"Non-Substring Subsequence","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["dp","greedy","implementation","strings"]},{"ContestId":1451,"Index":"A","Name":"Subtract or Divide","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1450,"Index":"H2","Name":"Multithreading (Hard Version)","Type":"PROGRAMMING","Rating":3300,"Points":1750,"Tags":["combinatorics","implementation","math"]},{"ContestId":1450,"Index":"H1","Name":"Multithreading (Easy Version)","Type":"PROGRAMMING","Rating":2900,"Points":2750,"Tags":["combinatorics","fft","math"]},{"ContestId":1450,"Index":"G","Name":"Communism","Type":"PROGRAMMING","Rating":3500,"Points":3750,"Tags":["bitmasks","dp","trees"]},{"ContestId":1450,"Index":"F","Name":"The Struggling Contestant","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["constructive algorithms","greedy"]},{"ContestId":1450,"Index":"E","Name":"Capitalism","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["constructive algorithms","dfs and similar","graphs","shortest paths"]},{"ContestId":1450,"Index":"D","Name":"Rating Compression","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["binary search","data structures","greedy","implementation","two pointers"]},{"ContestId":1450,"Index":"C2","Name":"Errich-Tac-Toe (Hard Version)","Type":"PROGRAMMING","Rating":2300,"Points":750,"Tags":["constructive algorithms","math"]},{"ContestId":1450,"Index":"C1","Name":"Errich-Tac-Toe (Easy Version)","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":1450,"Index":"B","Name":"Balls of Steel","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["brute force","geometry","greedy"]},{"ContestId":1450,"Index":"A","Name":"Avoid Trygub","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","sortings"]},{"ContestId":1447,"Index":"B","Name":"Numbers Box","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1447,"Index":"A","Name":"Add Candies","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1446,"Index":"F","Name":"Line Distance","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["binary search","data structures","geometry"]},{"ContestId":1446,"Index":"E","Name":"Long Recovery","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["constructive algorithms","dfs and similar"]},{"ContestId":1446,"Index":"D2","Name":"Frequency Problem (Hard Version)","Type":"PROGRAMMING","Rating":3000,"Points":750,"Tags":["data structures","greedy","two pointers"]},{"ContestId":1446,"Index":"D1","Name":"Frequency Problem (Easy Version)","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["data structures","greedy"]},{"ContestId":1446,"Index":"C","Name":"Xor Tree","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["binary search","bitmasks","data structures","divide and conquer","dp","trees"]},{"ContestId":1446,"Index":"B","Name":"Catching Cheaters","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dp","strings"]},{"ContestId":1446,"Index":"A","Name":"Knapsack","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":1445,"Index":"B","Name":"Elimination","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1445,"Index":"A","Name":"Array Rearrangment","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":1444,"Index":"E","Name":"Finding the Vertex","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["brute force","dfs and similar","dp","interactive","trees"]},{"ContestId":1444,"Index":"D","Name":"Rectangular Polyline","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["constructive algorithms","dp","geometry"]},{"ContestId":1444,"Index":"C","Name":"Team-Building","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["data structures","dfs and similar","dsu","graphs"]},{"ContestId":1444,"Index":"B","Name":"Divide and Sum","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["combinatorics","math","sortings"]},{"ContestId":1444,"Index":"A","Name":"Division","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","math","number theory"]},{"ContestId":1443,"Index":"E","Name":"Long Permutation","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["brute force","math","two pointers"]},{"ContestId":1443,"Index":"C","Name":"The Delivery Dilemma","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["binary search","greedy","sortings"]},{"ContestId":1443,"Index":"B","Name":"Saving the City","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["dp","greedy","math","sortings"]},{"ContestId":1443,"Index":"A","Name":"Kids Seating","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1442,"Index":"F","Name":"Differentiating Games","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["games","interactive"]},{"ContestId":1442,"Index":"E","Name":"Black, White and Grey Tree","Type":"PROGRAMMING","Rating":3000,"Points":1750,"Tags":["binary search","constructive algorithms","dfs and similar","dp","greedy","trees"]},{"ContestId":1442,"Index":"D","Name":"Sum","Type":"PROGRAMMING","Rating":2800,"Points":1750,"Tags":["data structures","divide and conquer","dp","greedy"]},{"ContestId":1442,"Index":"C","Name":"Graph Transpositions","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["dfs and similar","graphs","greedy","shortest paths"]},{"ContestId":1442,"Index":"B","Name":"Identify the Operations","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["combinatorics","data structures","dsu","greedy","implementation"]},{"ContestId":1442,"Index":"A","Name":"Extreme Subtraction","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1440,"Index":"B","Name":"Sum of Medians","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1440,"Index":"A","Name":"Buy the String","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":1439,"Index":"E","Name":"Cheat and Win","Type":"PROGRAMMING","Rating":3500,"Points":2500,"Tags":["bitmasks","data structures","games","trees"]},{"ContestId":1439,"Index":"D","Name":"INOI Final Contests","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["combinatorics","dp","fft"]},{"ContestId":1439,"Index":"C","Name":"Greedy Shopping","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["binary search","data structures","divide and conquer","greedy","implementation"]},{"ContestId":1439,"Index":"B","Name":"Graph Subset Problem","Type":"PROGRAMMING","Rating":2600,"Points":1250,"Tags":["constructive algorithms","data structures","graphs"]},{"ContestId":1439,"Index":"A2","Name":"Binary Table (Hard Version)","Type":"PROGRAMMING","Rating":1900,"Points":500,"Tags":["constructive algorithms","graphs","greedy","implementation"]},{"ContestId":1439,"Index":"A1","Name":"Binary Table (Easy Version)","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1438,"Index":"F","Name":"Olha and Igor","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["interactive","probabilities","trees"]},{"ContestId":1438,"Index":"E","Name":"Yurii Can Do Everything","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["binary search","bitmasks","brute force","constructive algorithms","divide and conquer","two pointers"]},{"ContestId":1438,"Index":"D","Name":"Powerful Ksenia","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["bitmasks","constructive algorithms","math"]},{"ContestId":1438,"Index":"C","Name":"Engineer Artem","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["2-sat","chinese remainder theorem","constructive algorithms","fft","flows"]},{"ContestId":1438,"Index":"B","Name":"Valerii Against Everyone","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["constructive algorithms","data structures","greedy","sortings"]},{"ContestId":1438,"Index":"A","Name":"Specific Tastes of Andre ","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1437,"Index":"G","Name":"Death DBMS","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","string suffix structures","strings","trees"]},{"ContestId":1437,"Index":"F","Name":"Emotional Fishermen","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["combinatorics","dp","math","two pointers"]},{"ContestId":1437,"Index":"E","Name":"Make It Increasing","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","constructive algorithms","data structures","dp","implementation"]},{"ContestId":1437,"Index":"D","Name":"Minimal Height Tree","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["graphs","greedy","shortest paths","trees"]},{"ContestId":1437,"Index":"C","Name":"Chef Monocarp","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","flows","graph matchings","greedy","math","sortings"]},{"ContestId":1437,"Index":"B","Name":"Reverse Binary Strings","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1437,"Index":"A","Name":"Marketing Scheme","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","constructive algorithms","greedy","math"]},{"ContestId":1436,"Index":"F","Name":"Sum Over Subsets","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["combinatorics","math","number theory"]},{"ContestId":1436,"Index":"E","Name":"Complicated Computations","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","data structures","two pointers"]},{"ContestId":1436,"Index":"D","Name":"Bandit in a City","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","dfs and similar","graphs","greedy","trees"]},{"ContestId":1436,"Index":"C","Name":"Binary Search","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["binary search","combinatorics"]},{"ContestId":1436,"Index":"B","Name":"Prime Square","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":1436,"Index":"A","Name":"Reorder","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1434,"Index":"E","Name":"A Convex Game","Type":"PROGRAMMING","Rating":3500,"Points":2500,"Tags":["dsu","games"]},{"ContestId":1433,"Index":"G","Name":"Reducing Delivery Cost","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","graphs","shortest paths"]},{"ContestId":1433,"Index":"F","Name":"Zero Remainder Sum ","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp"]},{"ContestId":1433,"Index":"E","Name":"Two Round Dances","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":1433,"Index":"D","Name":"Districts Connection","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","dfs and similar"]},{"ContestId":1433,"Index":"C","Name":"Dominant Piranha","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1433,"Index":"B","Name":"Yet Another Bookshelf","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1433,"Index":"A","Name":"Boring Apartments","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1431,"Index":"J","Name":"Zero-XOR Array","Type":"PROGRAMMING","Rating":3400,"Points":0,"Tags":["*special","dp"]},{"ContestId":1431,"Index":"I","Name":"Cyclic Shifts","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["*special","strings"]},{"ContestId":1431,"Index":"H","Name":"Rogue-like Game","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["*special","brute force","greedy","two pointers"]},{"ContestId":1431,"Index":"G","Name":"Number Deletion Game","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special","dp","games","greedy"]},{"ContestId":1431,"Index":"F","Name":"Neural Network Problem","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special","binary search","greedy"]},{"ContestId":1431,"Index":"E","Name":"Chess Match","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":1431,"Index":"D","Name":"Used Markers","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","greedy"]},{"ContestId":1431,"Index":"C","Name":"Black Friday","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1431,"Index":"B","Name":"Polycarp and the Language of Gods","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","implementation","two pointers"]},{"ContestId":1431,"Index":"A","Name":"Selling Hamburgers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["*special"]},{"ContestId":1430,"Index":"G","Name":"Yet Another DAG Problem","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["bitmasks","dfs and similar","dp","flows","graphs","math"]},{"ContestId":1430,"Index":"F","Name":"Realistic Gameplay","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1430,"Index":"E","Name":"String Reversal","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","greedy","strings"]},{"ContestId":1430,"Index":"D","Name":"String Deletion","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","data structures","greedy","two pointers"]},{"ContestId":1430,"Index":"C","Name":"Numbers on Whiteboard","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms","data structures","greedy","implementation","math"]},{"ContestId":1430,"Index":"B","Name":"Barrels","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":1430,"Index":"A","Name":"Number of Apartments","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":1428,"Index":"H","Name":"Rotary Laser Lock","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["binary search","interactive"]},{"ContestId":1428,"Index":"G2","Name":"Lucky Numbers (Hard Version)","Type":"PROGRAMMING","Rating":3000,"Points":750,"Tags":["dp","greedy"]},{"ContestId":1428,"Index":"G1","Name":"Lucky Numbers (Easy Version)","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["dp","greedy"]},{"ContestId":1428,"Index":"F","Name":"Fruit Sequences","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["binary search","data structures","divide and conquer","dp","two pointers"]},{"ContestId":1428,"Index":"E","Name":"Carrots for Rabbits","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["binary search","data structures","greedy","math","sortings"]},{"ContestId":1428,"Index":"D","Name":"Bouncing Boomerangs","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1428,"Index":"C","Name":"ABBB","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","data structures","greedy","strings"]},{"ContestId":1428,"Index":"B","Name":"Belted Rooms","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["graphs","implementation"]},{"ContestId":1428,"Index":"A","Name":"Box is Pull","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1427,"Index":"H","Name":"Prison Break","Type":"PROGRAMMING","Rating":3500,"Points":4500,"Tags":["binary search","games","geometry","ternary search"]},{"ContestId":1427,"Index":"G","Name":"One Billion Shades of Grey","Type":"PROGRAMMING","Rating":3300,"Points":2250,"Tags":["flows","graphs"]},{"ContestId":1427,"Index":"F","Name":"Boring Card Game","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["data structures","greedy","trees"]},{"ContestId":1427,"Index":"E","Name":"Xum","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["bitmasks","constructive algorithms","math","matrices","number theory"]},{"ContestId":1427,"Index":"D","Name":"Unshuffling a Deck","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":1427,"Index":"C","Name":"The Hard Work of Paparazzi","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["dp"]},{"ContestId":1427,"Index":"B","Name":"Chess Cheater","Type":"PROGRAMMING","Rating":1400,"Points":750,"Tags":["greedy","implementation","sortings"]},{"ContestId":1427,"Index":"A","Name":"Avoiding Zero","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math","sortings"]},{"ContestId":1426,"Index":"F","Name":"Number of Subsequences","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["combinatorics","dp","strings"]},{"ContestId":1426,"Index":"E","Name":"Rock, Paper, Scissors","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","constructive algorithms","flows","greedy","math"]},{"ContestId":1426,"Index":"D","Name":"Non-zero Segments","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","data structures","greedy","sortings"]},{"ContestId":1426,"Index":"C","Name":"Increase and Copy","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","constructive algorithms","math"]},{"ContestId":1426,"Index":"B","Name":"Symmetric Matrix","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":1426,"Index":"A","Name":"Floor Number","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1425,"Index":"I","Name":"Impressive Harvesting of The Orchard","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["data structures"]},{"ContestId":1425,"Index":"H","Name":"Huge Boxes of Animal Toys","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1425,"Index":"F","Name":"Flamingoes of Mystery","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["interactive"]},{"ContestId":1425,"Index":"E","Name":"Excitation of Atoms","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1425,"Index":"D","Name":"Danger of Mad Snakes","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["combinatorics","dp","math"]},{"ContestId":1425,"Index":"C","Name":"Captain of Knights","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["math"]},{"ContestId":1425,"Index":"B","Name":"Blue and Red of Our Faculty!","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["divide and conquer","dp"]},{"ContestId":1425,"Index":"A","Name":"Arena of Greed","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["games","greedy"]},{"ContestId":1424,"Index":"M","Name":"Ancient Language","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["graphs","sortings"]},{"ContestId":1424,"Index":"G","Name":"Years","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["data structures","sortings"]},{"ContestId":1423,"Index":"N","Name":"BubbleSquare Tokens","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":[]},{"ContestId":1423,"Index":"M","Name":"Milutin's Plums","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["interactive"]},{"ContestId":1423,"Index":"L","Name":"Light switches","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["meet-in-the-middle"]},{"ContestId":1423,"Index":"K","Name":"Lonely Numbers","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","math","number theory","two pointers"]},{"ContestId":1423,"Index":"J","Name":"Bubble Cup hypothesis","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["bitmasks","constructive algorithms","dp","math"]},{"ContestId":1423,"Index":"I","Name":"Lookup Tables","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["bitmasks"]},{"ContestId":1423,"Index":"H","Name":"Virus","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","divide and conquer","dsu","graphs"]},{"ContestId":1423,"Index":"G","Name":"Growing flowers","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":["data structures"]},{"ContestId":1423,"Index":"F","Name":"Coins","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["math"]},{"ContestId":1423,"Index":"E","Name":"5G Antenna Towers","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["geometry"]},{"ContestId":1423,"Index":"D","Name":"Does anyone else hate the wind?","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":[]},{"ContestId":1423,"Index":"C","Name":"Du≈°an's Railway","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":["divide and conquer","graphs","trees"]},{"ContestId":1423,"Index":"B","Name":"Valuable Paper","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","flows","graph matchings","graphs"]},{"ContestId":1423,"Index":"A","Name":"Wakanda Forever","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":[]},{"ContestId":1422,"Index":"F","Name":"Boring Queries","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["data structures","math","number theory"]},{"ContestId":1422,"Index":"E","Name":"Minlexes","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["dp","greedy","implementation","strings"]},{"ContestId":1422,"Index":"D","Name":"Returning Home","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["graphs","shortest paths","sortings"]},{"ContestId":1422,"Index":"C","Name":"Bargain","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["combinatorics","dp","math"]},{"ContestId":1422,"Index":"B","Name":"Nice Matrix","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["greedy","implementation","math"]},{"ContestId":1422,"Index":"A","Name":"Fence","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["geometry","math"]},{"ContestId":1421,"Index":"E","Name":"Swedish Heroes","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["brute force","dp","implementation"]},{"ContestId":1421,"Index":"D","Name":"Hexagons","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["brute force","constructive algorithms","greedy","implementation","math","shortest paths"]},{"ContestId":1421,"Index":"C","Name":"Palindromifier","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","strings"]},{"ContestId":1421,"Index":"B","Name":"Putting Bricks in the Wall","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":1421,"Index":"A","Name":"XORwice","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["bitmasks","greedy","math"]},{"ContestId":1420,"Index":"E","Name":"Battle Lemmings","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["dp","greedy"]},{"ContestId":1420,"Index":"D","Name":"Rescue Nibel!","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["combinatorics","data structures","sortings"]},{"ContestId":1420,"Index":"C2","Name":"Pok√©mon Army (hard version)","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["data structures","divide and conquer","dp","greedy","implementation"]},{"ContestId":1420,"Index":"C1","Name":"Pok√©mon Army (easy version)","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1420,"Index":"B","Name":"Rock and Lever","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["bitmasks","math"]},{"ContestId":1420,"Index":"A","Name":"Cubes Sorting","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math","sortings"]},{"ContestId":1419,"Index":"F","Name":"Rain of Fire","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["binary search","data structures","dfs and similar","dsu","graphs","implementation"]},{"ContestId":1419,"Index":"E","Name":"Decryption","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["constructive algorithms","implementation","math","number theory"]},{"ContestId":1419,"Index":"D2","Name":"Sage's Birthday (hard version)","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","brute force","constructive algorithms","greedy","sortings","two pointers"]},{"ContestId":1419,"Index":"D1","Name":"Sage's Birthday (easy version)","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["binary search","constructive algorithms","greedy","sortings"]},{"ContestId":1419,"Index":"C","Name":"Killjoy","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["greedy","implementation","math"]},{"ContestId":1419,"Index":"B","Name":"Stairs","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["brute force","constructive algorithms","greedy","implementation","math"]},{"ContestId":1419,"Index":"A","Name":"Digit Game","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["games","greedy","implementation"]},{"ContestId":1418,"Index":"G","Name":"Three Occurrences","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","divide and conquer","hashing","two pointers"]},{"ContestId":1418,"Index":"F","Name":"Equal Product","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["data structures","math","number theory","two pointers"]},{"ContestId":1418,"Index":"E","Name":"Expected Damage","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","combinatorics","probabilities"]},{"ContestId":1418,"Index":"D","Name":"Trash Problem","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1418,"Index":"C","Name":"Mortal Kombat Tower","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dp","graphs","greedy","shortest paths"]},{"ContestId":1418,"Index":"B","Name":"Negative Prefixes","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1418,"Index":"A","Name":"Buying Torches","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["math"]},{"ContestId":1417,"Index":"B","Name":"Two Arrays","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","math","sortings"]},{"ContestId":1417,"Index":"A","Name":"Copy-paste","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1416,"Index":"F","Name":"Showing Off","Type":"PROGRAMMING","Rating":3300,"Points":2750,"Tags":["flows","graph matchings","greedy","implementation"]},{"ContestId":1416,"Index":"E","Name":"Split","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["binary search","data structures","dp","greedy"]},{"ContestId":1416,"Index":"D","Name":"Graph and Queries","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["data structures","dsu","graphs","implementation","trees"]},{"ContestId":1416,"Index":"C","Name":"XOR Inverse","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["bitmasks","data structures","divide and conquer","dp","greedy","math","sortings","strings","trees"]},{"ContestId":1416,"Index":"B","Name":"Make Them Equal","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1416,"Index":"A","Name":"k-Amazing Numbers","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["binary search","data structures","implementation","two pointers"]},{"ContestId":1415,"Index":"F","Name":"Cakes for Clones","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["dp"]},{"ContestId":1415,"Index":"E","Name":"New Game Plus!","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1415,"Index":"D","Name":"XOR-gun","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["bitmasks","brute force","constructive algorithms"]},{"ContestId":1415,"Index":"C","Name":"Bouncing Ball","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["brute force","dp","implementation"]},{"ContestId":1415,"Index":"B","Name":"Repainting Street","Type":"PROGRAMMING","Rating":1100,"Points":1250,"Tags":["brute force","brute force","greedy"]},{"ContestId":1415,"Index":"A","Name":"Prison Break","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","math"]},{"ContestId":1413,"Index":"F","Name":"Roads and Ramen","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["data structures","trees"]},{"ContestId":1413,"Index":"E","Name":"Solo mid Oracle","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["greedy","math","ternary search"]},{"ContestId":1413,"Index":"D","Name":"Shurikens","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["data structures","greedy","implementation"]},{"ContestId":1413,"Index":"C","Name":"Perform Easily","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["binary search","brute force","dp","implementation","sortings","two pointers"]},{"ContestId":1413,"Index":"B","Name":"A New Technique","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation"]},{"ContestId":1413,"Index":"A","Name":"Finding Sasuke","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1411,"Index":"G","Name":"No Game No Life","Type":"PROGRAMMING","Rating":2700,"Points":3250,"Tags":["bitmasks","games","math","matrices"]},{"ContestId":1411,"Index":"F","Name":"The Thorny Path","Type":"PROGRAMMING","Rating":3000,"Points":2750,"Tags":["greedy","math"]},{"ContestId":1411,"Index":"E","Name":"Poman Numbers","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["bitmasks","greedy","math","strings"]},{"ContestId":1411,"Index":"D","Name":"Grime Zoo","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["brute force","greedy","implementation","strings"]},{"ContestId":1411,"Index":"C","Name":"Peaceful Rooks","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":1411,"Index":"B","Name":"Fair Numbers","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["brute force","number theory"]},{"ContestId":1411,"Index":"A","Name":"In-game Chat","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1409,"Index":"F","Name":"Subsequences of Length Two","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","strings"]},{"ContestId":1409,"Index":"E","Name":"Two Platforms","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","dp","sortings","two pointers"]},{"ContestId":1409,"Index":"D","Name":"Decrease the Sum of Digits","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","math"]},{"ContestId":1409,"Index":"C","Name":"Yet Another Array Restoration","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":1409,"Index":"B","Name":"Minimum Product","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1409,"Index":"A","Name":"Yet Another Two Integers Problem","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1408,"Index":"I","Name":"Bitwise Magic","Type":"PROGRAMMING","Rating":3200,"Points":3750,"Tags":["dp","math"]},{"ContestId":1408,"Index":"H","Name":"Rainbow Triples","Type":"PROGRAMMING","Rating":3300,"Points":3750,"Tags":["binary search","data structures","flows","greedy"]},{"ContestId":1408,"Index":"G","Name":"Clusterization Counting","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["combinatorics","dp","dsu","fft","graphs","trees"]},{"ContestId":1408,"Index":"F","Name":"Two Different","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["constructive algorithms","divide and conquer"]},{"ContestId":1408,"Index":"E","Name":"Avoid Rainbow Cycles","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","dsu","graphs","greedy","sortings","trees"]},{"ContestId":1408,"Index":"D","Name":"Searchlights","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","brute force","data structures","dp","implementation","sortings","two pointers"]},{"ContestId":1408,"Index":"C","Name":"Discrete Acceleration","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["binary search","dp","implementation","math","two pointers"]},{"ContestId":1408,"Index":"B","Name":"Arrays Sum","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1408,"Index":"A","Name":"Circle Coloring","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":1407,"Index":"E","Name":"Egor in the Republic of Dagestan","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["constructive algorithms","dfs and similar","dp","graphs","greedy","shortest paths"]},{"ContestId":1407,"Index":"D","Name":"Discrete Centrifugal Jumps","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["data structures","dp","graphs"]},{"ContestId":1407,"Index":"C","Name":"Chocolate Bunny","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","interactive","math","two pointers"]},{"ContestId":1407,"Index":"B","Name":"Big Vova","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","greedy","math","number theory"]},{"ContestId":1407,"Index":"A","Name":"Ahahahahahahahaha","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1406,"Index":"E","Name":"Deleting Numbers","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["interactive","math","number theory"]},{"ContestId":1406,"Index":"D","Name":"Three Sequences","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["constructive algorithms","data structures","greedy","math"]},{"ContestId":1406,"Index":"C","Name":"Link Cut Centroids","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"ContestId":1406,"Index":"B","Name":"Maximum Product","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","dp","greedy","implementation","sortings"]},{"ContestId":1406,"Index":"A","Name":"Subset Mex","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":1405,"Index":"B","Name":"Array Cancellation","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":1405,"Index":"A","Name":"Permutation Forgery","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":1404,"Index":"E","Name":"Bricks","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["flows","graph matchings","graphs"]},{"ContestId":1404,"Index":"D","Name":"Game of Pairs","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["constructive algorithms","dfs and similar","interactive","math","number theory"]},{"ContestId":1404,"Index":"C","Name":"Fixed Point Removal","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["binary search","constructive algorithms","data structures","greedy","two pointers"]},{"ContestId":1404,"Index":"B","Name":"Tree Tag","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["dfs and similar","dp","games","trees"]},{"ContestId":1404,"Index":"A","Name":"Balanced Bitstring","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1403,"Index":"C","Name":"Chess Rush","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["*special","combinatorics","dp","implementation","math"]},{"ContestId":1403,"Index":"B","Name":"Spring cleaning","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special","data structures","dfs and similar","graphs","trees"]},{"ContestId":1403,"Index":"A","Name":"The Potion of Great Power","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["*special","2-sat","binary search","data structures","graphs","interactive","sortings","two pointers"]},{"ContestId":1402,"Index":"C","Name":"Star Trek","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["*special","combinatorics","dfs and similar","dp","games","graphs","matrices","trees"]},{"ContestId":1402,"Index":"B","Name":"Roads","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["*special","geometry","sortings"]},{"ContestId":1402,"Index":"A","Name":"Fancy Fence","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","data structures","dsu","implementation","math","sortings"]},{"ContestId":1401,"Index":"F","Name":"Reverse and Swap","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","bitmasks","data structures"]},{"ContestId":1401,"Index":"E","Name":"Divide Square","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","geometry","implementation","sortings"]},{"ContestId":1401,"Index":"D","Name":"Maximum Distributed Tree","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["dfs and similar","dp","greedy","implementation","math","number theory","sortings","trees"]},{"ContestId":1401,"Index":"C","Name":"Mere Array","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["constructive algorithms","math","number theory","sortings"]},{"ContestId":1401,"Index":"B","Name":"Ternary Sequence","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1401,"Index":"A","Name":"Distance and Axis","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1400,"Index":"G","Name":"Mercenaries","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["bitmasks","brute force","combinatorics","dp","dsu","math","two pointers"]},{"ContestId":1400,"Index":"F","Name":"x-prime Substrings","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["brute force","dfs and similar","dp","string suffix structures","strings"]},{"ContestId":1400,"Index":"E","Name":"Clear the Multiset","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","divide and conquer","dp","greedy"]},{"ContestId":1400,"Index":"D","Name":"Zigzags","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","combinatorics","data structures","math","two pointers"]},{"ContestId":1400,"Index":"C","Name":"Binary String Reconstruction","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["2-sat","brute force","constructive algorithms","greedy"]},{"ContestId":1400,"Index":"B","Name":"RPG Protagonist","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1400,"Index":"A","Name":"String Similarity","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","strings"]},{"ContestId":1399,"Index":"F","Name":"Yet Another Segments Subset","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","dp","graphs","sortings"]},{"ContestId":1399,"Index":"E2","Name":"Weights Division (hard version)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","dfs and similar","greedy","sortings","trees","two pointers"]},{"ContestId":1399,"Index":"E1","Name":"Weights Division (easy version)","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","dfs and similar","greedy","trees"]},{"ContestId":1399,"Index":"D","Name":"Binary String To Subsequences","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","data structures","greedy","implementation"]},{"ContestId":1399,"Index":"C","Name":"Boats Competition","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","greedy","two pointers"]},{"ContestId":1399,"Index":"B","Name":"Gifts Fixing","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1399,"Index":"A","Name":"Remove Smallest","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1398,"Index":"G","Name":"Running Competition","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["bitmasks","fft","math","number theory"]},{"ContestId":1398,"Index":"F","Name":"Controversial Rounds","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["binary search","data structures","dp","greedy","two pointers"]},{"ContestId":1398,"Index":"E","Name":"Two Types of Spells","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","data structures","greedy","implementation","math","sortings"]},{"ContestId":1398,"Index":"D","Name":"Colored Rectangles","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","greedy","sortings"]},{"ContestId":1398,"Index":"C","Name":"Good Subarrays","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","dp","math"]},{"ContestId":1398,"Index":"B","Name":"Substring Removal Game","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["games","greedy","sortings"]},{"ContestId":1398,"Index":"A","Name":"Bad Triangle","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["geometry","math"]},{"ContestId":1397,"Index":"B","Name":"Power Sequence","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","math","number theory","sortings"]},{"ContestId":1397,"Index":"A","Name":"Juggling Letters","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","strings"]},{"ContestId":1396,"Index":"E","Name":"Distance Matching","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["constructive algorithms","dfs and similar","trees"]},{"ContestId":1396,"Index":"D","Name":"Rainbow Rectangles","Type":"PROGRAMMING","Rating":3300,"Points":2250,"Tags":["data structures","sortings","two pointers"]},{"ContestId":1396,"Index":"C","Name":"Monster Invaders","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["dp","greedy","implementation"]},{"ContestId":1396,"Index":"B","Name":"Stoned Game","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["brute force","constructive algorithms","games","greedy"]},{"ContestId":1396,"Index":"A","Name":"Multiples of Length","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["constructive algorithms","greedy","number theory"]},{"ContestId":1395,"Index":"C","Name":"Boboniu and Bit Operations","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["bitmasks","brute force","dp","greedy"]},{"ContestId":1395,"Index":"B","Name":"Boboniu Plays Chess","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["constructive algorithms"]},{"ContestId":1395,"Index":"A","Name":"Boboniu Likes to Color Balls","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","math"]},{"ContestId":1394,"Index":"E","Name":"Boboniu and Banknote Collection","Type":"PROGRAMMING","Rating":3500,"Points":2500,"Tags":["strings"]},{"ContestId":1394,"Index":"D","Name":"Boboniu and Jianghu","Type":"PROGRAMMING","Rating":2800,"Points":1750,"Tags":["dp","greedy","sortings","trees"]},{"ContestId":1394,"Index":"C","Name":"Boboniu and String","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["binary search","geometry","ternary search"]},{"ContestId":1394,"Index":"B","Name":"Boboniu Walks on Graph","Type":"PROGRAMMING","Rating":2300,"Points":1000,"Tags":["brute force","dfs and similar","graphs","hashing"]},{"ContestId":1394,"Index":"A","Name":"Boboniu Chats with Du","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["dp","greedy","sortings","two pointers"]},{"ContestId":1393,"Index":"E2","Name":"Twilight and Ancient Scroll (harder version)","Type":"PROGRAMMING","Rating":3200,"Points":1500,"Tags":["dp","hashing","implementation","string suffix structures","strings","two pointers"]},{"ContestId":1393,"Index":"E1","Name":"Twilight and Ancient Scroll (easier version)","Type":"PROGRAMMING","Rating":2800,"Points":1500,"Tags":["dp","hashing","implementation","string suffix structures","strings"]},{"ContestId":1393,"Index":"D","Name":"Rarity and New Dress","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["dfs and similar","dp","implementation","shortest paths"]},{"ContestId":1393,"Index":"C","Name":"Pinkie Pie Eats Patty-cakes","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","greedy","math","sortings"]},{"ContestId":1393,"Index":"B","Name":"Applejack and Storages","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms","data structures","greedy","implementation"]},{"ContestId":1393,"Index":"A","Name":"Rainbow Dash, Fluttershy and Chess Coloring","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1392,"Index":"I","Name":"Kevin and Grid","Type":"PROGRAMMING","Rating":3300,"Points":4000,"Tags":["fft","graphs","math"]},{"ContestId":1392,"Index":"H","Name":"ZS Shuffles Cards","Type":"PROGRAMMING","Rating":3000,"Points":3500,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":1392,"Index":"G","Name":"Omkar and Pies","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["bitmasks","dfs and similar","dp","math","shortest paths"]},{"ContestId":1392,"Index":"F","Name":"Omkar and Landslide","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","constructive algorithms","data structures","greedy","math"]},{"ContestId":1392,"Index":"E","Name":"Omkar and Duck","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["bitmasks","constructive algorithms","interactive","math"]},{"ContestId":1392,"Index":"D","Name":"Omkar and Bed Wars","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dp","greedy"]},{"ContestId":1392,"Index":"C","Name":"Omkar and Waterslide","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1392,"Index":"B","Name":"Omkar and Infinity Clock","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["implementation","math"]},{"ContestId":1392,"Index":"A","Name":"Omkar and Password","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1391,"Index":"E","Name":"Pairs of Pairs","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"ContestId":1391,"Index":"D","Name":"505","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["bitmasks","brute force","constructive algorithms","dp","greedy","implementation"]},{"ContestId":1391,"Index":"C","Name":"Cyclic Permutations ","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["combinatorics","dp","graphs","math"]},{"ContestId":1391,"Index":"B","Name":"Fix You","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["brute force","greedy","implementation"]},{"ContestId":1391,"Index":"A","Name":"Suborrays","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1389,"Index":"G","Name":"Directing Edges","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":1389,"Index":"F","Name":"Bicolored Segments","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","dp","graph matchings","sortings"]},{"ContestId":1389,"Index":"E","Name":"Calendar Ambiguity","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["math","number theory"]},{"ContestId":1389,"Index":"D","Name":"Segment Intersections","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":1389,"Index":"C","Name":"Good String","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","dp","greedy","two pointers"]},{"ContestId":1389,"Index":"B","Name":"Array Walk","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","dp","greedy"]},{"ContestId":1389,"Index":"A","Name":"LCM Problem","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","greedy","math","number theory"]},{"ContestId":1388,"Index":"E","Name":"Uncle Bogdan and Projections","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["data structures","geometry","sortings"]},{"ContestId":1388,"Index":"D","Name":"Captain Flint and Treasure","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["data structures","dfs and similar","graphs","greedy","implementation","trees"]},{"ContestId":1388,"Index":"C","Name":"Uncle Bogdan and Country Happiness","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dfs and similar","greedy","math","trees"]},{"ContestId":1388,"Index":"B","Name":"Captain Flint and a Long Voyage","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1388,"Index":"A","Name":"Captain Flint and Crew Recruitment","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["brute force","greedy","math","number theory"]},{"ContestId":1387,"Index":"C","Name":"Viruses","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["*special","dp","shortest paths","string suffix structures"]},{"ContestId":1387,"Index":"B2","Name":"Village (Maximum)","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["*special","dfs and similar","trees"]},{"ContestId":1387,"Index":"B1","Name":"Village (Minimum)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special","dp","greedy","trees"]},{"ContestId":1387,"Index":"A","Name":"Graph","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special","binary search","dfs and similar","dp","math","ternary search"]},{"ContestId":1386,"Index":"C","Name":"Joker","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["*special","bitmasks","data structures","divide and conquer","dsu"]},{"ContestId":1386,"Index":"B","Name":"Mixture","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["*special","data structures","geometry","math","sortings"]},{"ContestId":1386,"Index":"A","Name":"Colors","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["*special","binary search","constructive algorithms","interactive"]},{"ContestId":1385,"Index":"G","Name":"Columns Swaps","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["2-sat","dfs and similar","dsu","graphs","implementation"]},{"ContestId":1385,"Index":"F","Name":"Removing Leaves","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","greedy","implementation","trees"]},{"ContestId":1385,"Index":"E","Name":"Directing Edges","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":1385,"Index":"D","Name":"a-Good String","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["bitmasks","brute force","divide and conquer","dp","implementation"]},{"ContestId":1385,"Index":"C","Name":"Make It Good","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy"]},{"ContestId":1385,"Index":"B","Name":"Restore the Permutation by Merger","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":1385,"Index":"A","Name":"Three Pairwise Maximums","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1384,"Index":"B2","Name":"Koa and the Beach (Hard Version)","Type":"PROGRAMMING","Rating":2200,"Points":750,"Tags":["constructive algorithms","dp","greedy","implementation"]},{"ContestId":1384,"Index":"B1","Name":"Koa and the Beach (Easy Version)","Type":"PROGRAMMING","Rating":1900,"Points":500,"Tags":["brute force","dp","greedy"]},{"ContestId":1384,"Index":"A","Name":"Common Prefixes","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":1383,"Index":"F","Name":"Special Edges","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["flows","graphs"]},{"ContestId":1383,"Index":"E","Name":"Strange Operation","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["combinatorics","data structures","dp"]},{"ContestId":1383,"Index":"D","Name":"Rearrange","Type":"PROGRAMMING","Rating":2800,"Points":1750,"Tags":["brute force","constructive algorithms","graphs","greedy","sortings"]},{"ContestId":1383,"Index":"C","Name":"String Transformation 2","Type":"PROGRAMMING","Rating":3100,"Points":1750,"Tags":["bitmasks","dp","graphs","trees"]},{"ContestId":1383,"Index":"B","Name":"GameGame","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["bitmasks","constructive algorithms","dp","games","greedy","math"]},{"ContestId":1383,"Index":"A","Name":"String Transformation 1","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dsu","graphs","greedy","sortings","strings","trees","two pointers"]},{"ContestId":1382,"Index":"B","Name":"Sequential Nim","Type":"PROGRAMMING","Rating":1100,"Points":1250,"Tags":["dp","games"]},{"ContestId":1382,"Index":"A","Name":"Common Subsequence","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":1381,"Index":"E","Name":"Origami","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["geometry","math","sortings"]},{"ContestId":1381,"Index":"D","Name":"The Majestic Brown Tree Snake","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["dfs and similar","dp","greedy","trees","two pointers"]},{"ContestId":1381,"Index":"C","Name":"Mastermind","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["constructive algorithms","graph matchings","greedy","implementation","sortings","two pointers"]},{"ContestId":1381,"Index":"B","Name":"Unmerge","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dp"]},{"ContestId":1381,"Index":"A2","Name":"Prefix Flip (Hard Version)","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["constructive algorithms","data structures","implementation","strings","two pointers"]},{"ContestId":1381,"Index":"A1","Name":"Prefix Flip (Easy Version)","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","data structures","strings"]},{"ContestId":1380,"Index":"G","Name":"Circular Dungeon","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["greedy","math","probabilities"]},{"ContestId":1380,"Index":"F","Name":"Strange Addition","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","dp","matrices"]},{"ContestId":1380,"Index":"E","Name":"Merging Towers","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","dsu","implementation","trees"]},{"ContestId":1380,"Index":"D","Name":"Berserk And Fireball","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","greedy","implementation","math","two pointers"]},{"ContestId":1380,"Index":"C","Name":"Create The Teams","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","dp","greedy","implementation","sortings"]},{"ContestId":1380,"Index":"B","Name":"Universal Solution","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy"]},{"ContestId":1380,"Index":"A","Name":"Three Indices","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","data structures"]},{"ContestId":1379,"Index":"F2","Name":"Chess Strikes Back (hard version)","Type":"PROGRAMMING","Rating":2800,"Points":1500,"Tags":["data structures","divide and conquer"]},{"ContestId":1379,"Index":"F1","Name":"Chess Strikes Back (easy version)","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["binary search","data structures"]},{"ContestId":1379,"Index":"E","Name":"Inverse Genealogy","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["constructive algorithms","divide and conquer","dp","math","trees"]},{"ContestId":1379,"Index":"D","Name":"New Passenger Trams","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["binary search","brute force","data structures","sortings","two pointers"]},{"ContestId":1379,"Index":"C","Name":"Choosing flowers","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["binary search","brute force","data structures","dfs and similar","dp","greedy","sortings","two pointers"]},{"ContestId":1379,"Index":"B","Name":"Dubious Cyrpto","Type":"PROGRAMMING","Rating":1500,"Points":750,"Tags":["binary search","brute force","math","number theory"]},{"ContestId":1379,"Index":"A","Name":"Acacius and String","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","implementation","strings"]},{"ContestId":1375,"Index":"I","Name":"Cubic Lattice","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["geometry","math","matrices","number theory"]},{"ContestId":1375,"Index":"H","Name":"Set Merging","Type":"PROGRAMMING","Rating":3300,"Points":2750,"Tags":["constructive algorithms","divide and conquer"]},{"ContestId":1375,"Index":"G","Name":"Tree Modification","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["brute force","constructive algorithms","dfs and similar","graph matchings","graphs","trees"]},{"ContestId":1375,"Index":"F","Name":"Integer Game","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["constructive algorithms","games","interactive","math"]},{"ContestId":1375,"Index":"E","Name":"Inversion SwapSort","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":1375,"Index":"D","Name":"Replace by MEX","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["brute force","constructive algorithms","sortings"]},{"ContestId":1375,"Index":"C","Name":"Element Extermination","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":1375,"Index":"B","Name":"Neighbor Grid","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["constructive algorithms","greedy"]},{"ContestId":1375,"Index":"A","Name":"Sign Flipping","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1374,"Index":"F","Name":"Cyclic Shifts Sorting","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","constructive algorithms","implementation","sortings"]},{"ContestId":1374,"Index":"E2","Name":"Reading Books (hard version)","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","greedy","implementation","sortings","ternary search","two pointers"]},{"ContestId":1374,"Index":"E1","Name":"Reading Books (easy version)","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","greedy","sortings"]},{"ContestId":1374,"Index":"D","Name":"Zero Remainder Array","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["math","sortings","two pointers"]},{"ContestId":1374,"Index":"C","Name":"Move Brackets","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","strings"]},{"ContestId":1374,"Index":"B","Name":"Multiply by 2, divide by 6","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1374,"Index":"A","Name":"Required Remainder","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1373,"Index":"G","Name":"Pawns","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","divide and conquer","greedy"]},{"ContestId":1373,"Index":"F","Name":"Network Coverage","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","constructive algorithms","data structures","greedy"]},{"ContestId":1373,"Index":"E","Name":"Sum of Digits","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","constructive algorithms","dp","greedy"]},{"ContestId":1373,"Index":"D","Name":"Maximum Sum on Even Positions","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["divide and conquer","dp","greedy","implementation"]},{"ContestId":1373,"Index":"C","Name":"Pluses and Minuses","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["math"]},{"ContestId":1373,"Index":"B","Name":"01 Game","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["games"]},{"ContestId":1373,"Index":"A","Name":"Donut Shops","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","implementation","math"]},{"ContestId":1372,"Index":"F","Name":"Omkar and Modes","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["binary search","divide and conquer","interactive"]},{"ContestId":1372,"Index":"E","Name":"Omkar and Last Floor","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["dp","greedy","two pointers"]},{"ContestId":1372,"Index":"D","Name":"Omkar and Circle","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["brute force","dp","games","greedy"]},{"ContestId":1372,"Index":"C","Name":"Omkar and Baseball","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","math"]},{"ContestId":1372,"Index":"B","Name":"Omkar and Last Class of Math","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","math","number theory"]},{"ContestId":1372,"Index":"A","Name":"Omkar and Completion","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1371,"Index":"F","Name":"Raging Thunder","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["data structures","divide and conquer","implementation"]},{"ContestId":1371,"Index":"E2","Name":"Asterism (Hard Version)","Type":"PROGRAMMING","Rating":2300,"Points":1250,"Tags":["binary search","combinatorics","dp","math","number theory","sortings"]},{"ContestId":1371,"Index":"E1","Name":"Asterism (Easy Version)","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["binary search","brute force","combinatorics","math","number theory","sortings"]},{"ContestId":1371,"Index":"D","Name":"Grid-00100","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1371,"Index":"C","Name":"A Cookie for You","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["greedy","implementation","math"]},{"ContestId":1371,"Index":"B","Name":"Magical Calendar","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["math"]},{"ContestId":1371,"Index":"A","Name":"Magical Sticks","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1370,"Index":"F2","Name":"The Hidden Pair (Hard Version)","Type":"PROGRAMMING","Rating":2700,"Points":1250,"Tags":["binary search","dfs and similar","graphs","interactive","shortest paths","trees"]},{"ContestId":1370,"Index":"F1","Name":"The Hidden Pair (Easy Version)","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["binary search","dfs and similar","graphs","interactive","shortest paths","trees"]},{"ContestId":1370,"Index":"E","Name":"Binary Subsequence Rotation","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["binary search","constructive algorithms","data structures","greedy"]},{"ContestId":1370,"Index":"D","Name":"Odd-Even Subsequence","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","dp","dsu","greedy","implementation"]},{"ContestId":1370,"Index":"C","Name":"Number Game","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["games","math","number theory"]},{"ContestId":1370,"Index":"B","Name":"GCD Compression","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1370,"Index":"A","Name":"Maximum GCD","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","math","number theory"]},{"ContestId":1369,"Index":"F","Name":"BareLee","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["dfs and similar","dp","games"]},{"ContestId":1369,"Index":"E","Name":"DeadLee","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","dfs and similar","greedy","implementation","sortings"]},{"ContestId":1369,"Index":"D","Name":"TediousLee","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dp","graphs","greedy","math","trees"]},{"ContestId":1369,"Index":"C","Name":"RationalLee","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy","math","sortings","two pointers"]},{"ContestId":1369,"Index":"B","Name":"AccurateLee","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","implementation","strings"]},{"ContestId":1369,"Index":"A","Name":"FashionabLee","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["geometry","math"]},{"ContestId":1368,"Index":"H2","Name":"Breadboard Capacity (hard version)","Type":"PROGRAMMING","Rating":3500,"Points":1500,"Tags":[]},{"ContestId":1368,"Index":"H1","Name":"Breadboard Capacity (easy version)","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["dp","flows","greedy"]},{"ContestId":1368,"Index":"G","Name":"Shifting Dominoes","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["data structures","geometry","graphs","trees"]},{"ContestId":1368,"Index":"F","Name":"Lamps on a Circle","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["games","implementation","interactive","math"]},{"ContestId":1368,"Index":"E","Name":"Ski Accidents","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["constructive algorithms","graphs","greedy"]},{"ContestId":1368,"Index":"D","Name":"AND, OR and square sum","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["bitmasks","greedy","math"]},{"ContestId":1368,"Index":"C","Name":"Even Picture","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":1368,"Index":"B","Name":"Codeforces Subsequences","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","constructive algorithms","greedy","math","strings"]},{"ContestId":1368,"Index":"A","Name":"C+=","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":1367,"Index":"F2","Name":"Flying Sort (Hard Version)","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","data structures","dp","greedy","sortings","two pointers"]},{"ContestId":1367,"Index":"F1","Name":"Flying Sort (Easy Version)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","greedy","two pointers"]},{"ContestId":1367,"Index":"E","Name":"Necklace Assembly","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","dfs and similar","dp","graphs","greedy","number theory"]},{"ContestId":1367,"Index":"D","Name":"Task On The Board","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","greedy","implementation","sortings"]},{"ContestId":1367,"Index":"C","Name":"Social Distance","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1367,"Index":"B","Name":"Even Array","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1367,"Index":"A","Name":"Short Substrings","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1366,"Index":"G","Name":"Construct the String","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","dp","strings"]},{"ContestId":1366,"Index":"F","Name":"Jog Around The Graph","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["binary search","dp","geometry","graphs"]},{"ContestId":1366,"Index":"E","Name":"Two Arrays","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","brute force","combinatorics","constructive algorithms","dp","two pointers"]},{"ContestId":1366,"Index":"D","Name":"Two Divisors","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1366,"Index":"C","Name":"Palindromic Paths","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","math"]},{"ContestId":1366,"Index":"B","Name":"Shuffle","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["math","two pointers"]},{"ContestId":1366,"Index":"A","Name":"Shovels and Swords","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","greedy","math"]},{"ContestId":1365,"Index":"G","Name":"Secure Password","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["bitmasks","combinatorics","constructive algorithms","interactive","math"]},{"ContestId":1365,"Index":"F","Name":"Swaps Again","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["constructive algorithms","implementation","sortings"]},{"ContestId":1365,"Index":"E","Name":"Maximum Subsequence Value","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["brute force","constructive algorithms"]},{"ContestId":1365,"Index":"D","Name":"Solve The Maze","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","implementation","shortest paths"]},{"ContestId":1365,"Index":"C","Name":"Rotation Matching","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["constructive algorithms","data structures","greedy","implementation"]},{"ContestId":1365,"Index":"B","Name":"Trouble Sort","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["constructive algorithms","implementation"]},{"ContestId":1365,"Index":"A","Name":"Matrix Game","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["games","greedy","implementation"]},{"ContestId":1364,"Index":"E","Name":"X-OR","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["bitmasks","constructive algorithms","divide and conquer","interactive","probabilities"]},{"ContestId":1364,"Index":"D","Name":"Ehab's Last Corollary","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["constructive algorithms","dfs and similar","graphs","greedy","implementation","trees"]},{"ContestId":1364,"Index":"C","Name":"Ehab and Prefix MEXs","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":1364,"Index":"B","Name":"Most socially-distanced subsequence","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","two pointers"]},{"ContestId":1364,"Index":"A","Name":"XXXXX","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["brute force","data structures","number theory","two pointers"]},{"ContestId":1363,"Index":"F","Name":"Rotating Substrings","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["dp","strings"]},{"ContestId":1363,"Index":"E","Name":"Tree Shuffling","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["dfs and similar","dp","greedy","trees"]},{"ContestId":1363,"Index":"D","Name":"Guess The Maximums","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","implementation","interactive","math"]},{"ContestId":1363,"Index":"C","Name":"Game On Leaves","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["games","trees"]},{"ContestId":1363,"Index":"B","Name":"Subsequence Hate","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":1363,"Index":"A","Name":"Odd Selection","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":1362,"Index":"C","Name":"Johnny and Another Rating Drop","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["bitmasks","greedy","math"]},{"ContestId":1362,"Index":"B","Name":"Johnny and His Hobbies","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["bitmasks","brute force"]},{"ContestId":1362,"Index":"A","Name":"Johnny and Ancient Computer","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":1361,"Index":"F","Name":"Johnny and New Toy","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["data structures","implementation","math"]},{"ContestId":1361,"Index":"E","Name":"James and the Chase","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["dfs and similar","graphs","probabilities","trees"]},{"ContestId":1361,"Index":"D","Name":"Johnny and James","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["greedy","implementation","math","trees"]},{"ContestId":1361,"Index":"C","Name":"Johnny and Megan's Necklace","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["binary search","bitmasks","constructive algorithms","dfs and similar","dsu","graphs"]},{"ContestId":1361,"Index":"B","Name":"Johnny and Grandmaster","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["greedy","implementation","math","sortings"]},{"ContestId":1361,"Index":"A","Name":"Johnny and Contribution","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["constructive algorithms","graphs","greedy","sortings"]},{"ContestId":1360,"Index":"H","Name":"Binary Median","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","bitmasks","brute force","constructive algorithms"]},{"ContestId":1360,"Index":"G","Name":"A/B Matrix","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1360,"Index":"F","Name":"Spy-string","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["bitmasks","brute force","constructive algorithms","dp","hashing","strings"]},{"ContestId":1360,"Index":"E","Name":"Polygon","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dp","graphs","implementation","shortest paths"]},{"ContestId":1360,"Index":"D","Name":"Buying Shovels","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["math","number theory"]},{"ContestId":1360,"Index":"C","Name":"Similar Pairs","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","graph matchings","greedy","sortings"]},{"ContestId":1360,"Index":"B","Name":"Honest Coach","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1360,"Index":"A","Name":"Minimal Square","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1359,"Index":"F","Name":"RC Kaboom Show","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["binary search","brute force","data structures","geometry","math"]},{"ContestId":1359,"Index":"E","Name":"Modular Stability","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["combinatorics","math","number theory"]},{"ContestId":1359,"Index":"D","Name":"Yet Another Yet Another Task","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","dp","implementation","two pointers"]},{"ContestId":1359,"Index":"C","Name":"Mixing Water","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","math"]},{"ContestId":1359,"Index":"B","Name":"New Theatre Square","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","dp","greedy","implementation","two pointers"]},{"ContestId":1359,"Index":"A","Name":"Berland Poker","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1358,"Index":"F","Name":"Tasty Cookie","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["binary search","constructive algorithms","greedy","implementation"]},{"ContestId":1358,"Index":"E","Name":"Are You Fired?","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms","data structures","greedy","implementation"]},{"ContestId":1358,"Index":"D","Name":"The Best Vacation","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["binary search","brute force","greedy","implementation","two pointers"]},{"ContestId":1358,"Index":"C","Name":"Celex Update","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["math"]},{"ContestId":1358,"Index":"B","Name":"Maria Breaks the Self-isolation","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["greedy","sortings"]},{"ContestId":1358,"Index":"A","Name":"Park Lighting","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1357,"Index":"E2","Name":"Root of quantum Fourier transform","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"E1","Name":"Power of quantum Fourier transform","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"D5","Name":"Quantum Classification - Dataset 7","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"D4","Name":"Quantum Classification - Dataset 6","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"D3","Name":"Quantum Classification - Dataset 5","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"D2","Name":"Quantum Classification - Dataset 4","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"D1","Name":"Quantum Classification - Dataset 3","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"C2","Name":"Prepare superposition of basis states with the same parity","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"C1","Name":"Prepare superposition of basis states with 0s","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"B2","Name":"\"Is the number divisible by 3?\" oracle","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"B1","Name":"\"Is the bit string balanced?\" oracle","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"A7","Name":"Distinguish Y, XZ, -Y and -XZ","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"A6","Name":"Distinguish four Pauli gates","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"A5","Name":"Distinguish Rz(Œ∏) from Ry(Œ∏)","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"A4","Name":"Distinguish Rz from R1","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"A3","Name":"Distinguish H from X","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"A2","Name":"Distinguish I, CNOTs and SWAP","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1357,"Index":"A1","Name":"Figure out direction of CNOT","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1356,"Index":"D2","Name":"Quantum Classification - 2","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1356,"Index":"D1","Name":"Quantum Classification - 1","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1356,"Index":"C","Name":"Prepare state |01‚ü© + |10‚ü© + |11‚ü©","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1356,"Index":"B2","Name":"Decrement","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1356,"Index":"B1","Name":"Increment","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1356,"Index":"A5","Name":"Distinguish Z from -Z","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1356,"Index":"A4","Name":"Distinguish I ‚äó X from CNOT","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1356,"Index":"A3","Name":"Distinguish Z from S","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1356,"Index":"A2","Name":"Distinguish I from Z","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1356,"Index":"A1","Name":"Distinguish I from X","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1355,"Index":"F","Name":"Guess Divisors Count","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["constructive algorithms","interactive","number theory"]},{"ContestId":1355,"Index":"E","Name":"Restorer Distance","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","greedy","math","sortings","ternary search"]},{"ContestId":1355,"Index":"D","Name":"Game With Array","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","math"]},{"ContestId":1355,"Index":"C","Name":"Count Triangles","Type":"PROGRAMMING","Rating":1800,"Points":1250,"Tags":["binary search","implementation","math","two pointers"]},{"ContestId":1355,"Index":"B","Name":"Young Explorers","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["dp","greedy","sortings"]},{"ContestId":1355,"Index":"A","Name":"Sequence with Digits","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["brute force","implementation","math"]},{"ContestId":1354,"Index":"G","Name":"Find a Gift","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["binary search","interactive","probabilities"]},{"ContestId":1354,"Index":"F","Name":"Summoning Minions","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["constructive algorithms","dp","flows","graph matchings","greedy","sortings"]},{"ContestId":1354,"Index":"E","Name":"Graph Coloring","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dfs and similar","dp","graphs"]},{"ContestId":1354,"Index":"D","Name":"Multiset","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures"]},{"ContestId":1354,"Index":"C2","Name":"Not So Simple Polygon Embedding","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","brute force","geometry","math"]},{"ContestId":1354,"Index":"C1","Name":"Simple Polygon Embedding","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","geometry","math","ternary search"]},{"ContestId":1354,"Index":"B","Name":"Ternary String","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search","dp","implementation","two pointers"]},{"ContestId":1354,"Index":"A","Name":"Alarm Clock","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1353,"Index":"F","Name":"Decreasing Heights","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","dp"]},{"ContestId":1353,"Index":"E","Name":"K-periodic Garland","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","dp","greedy"]},{"ContestId":1353,"Index":"D","Name":"Constructing the Array","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["constructive algorithms","data structures","sortings"]},{"ContestId":1353,"Index":"C","Name":"Board Moves","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["math"]},{"ContestId":1353,"Index":"B","Name":"Two Arrays And Swaps","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1353,"Index":"A","Name":"Most Unstable Array","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1352,"Index":"G","Name":"Special Permutation","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1352,"Index":"F","Name":"Binary String Reconstruction","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","dfs and similar","math"]},{"ContestId":1352,"Index":"E","Name":"Special Elements","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","implementation","two pointers"]},{"ContestId":1352,"Index":"D","Name":"Alice, Bob and Candies","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation"]},{"ContestId":1352,"Index":"C","Name":"K-th Not Divisible by n","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search","math"]},{"ContestId":1352,"Index":"B","Name":"Same Parity Summands","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1352,"Index":"A","Name":"Sum of Round Numbers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1351,"Index":"C","Name":"Skier","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["data structures","implementation"]},{"ContestId":1351,"Index":"B","Name":"Square?","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["brute force","implementation","math"]},{"ContestId":1351,"Index":"A","Name":"A+B (Trial Problem)","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1350,"Index":"B","Name":"Orac and Models","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["dp","math","number theory"]},{"ContestId":1350,"Index":"A","Name":"Orac and Factors","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math"]},{"ContestId":1349,"Index":"F2","Name":"Slime and Sequences (Hard Version)","Type":"PROGRAMMING","Rating":3500,"Points":1750,"Tags":["dp","fft","math"]},{"ContestId":1349,"Index":"F1","Name":"Slime and Sequences (Easy Version)","Type":"PROGRAMMING","Rating":3100,"Points":1750,"Tags":["dp","fft","math"]},{"ContestId":1349,"Index":"E","Name":"Slime and Hats","Type":"PROGRAMMING","Rating":3500,"Points":2500,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1349,"Index":"D","Name":"Slime and Biscuits","Type":"PROGRAMMING","Rating":3200,"Points":2000,"Tags":["math","probabilities"]},{"ContestId":1349,"Index":"C","Name":"Orac and Game of Life","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["dfs and similar","graphs","implementation","shortest paths"]},{"ContestId":1349,"Index":"B","Name":"Orac and Medians","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1349,"Index":"A","Name":"Orac and LCM","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["data structures","math","number theory"]},{"ContestId":1348,"Index":"F","Name":"Phoenix and Memory","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["data structures","dfs and similar","graphs","greedy"]},{"ContestId":1348,"Index":"E","Name":"Phoenix and Berries","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["brute force","dp","greedy","math"]},{"ContestId":1348,"Index":"D","Name":"Phoenix and Science","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","constructive algorithms","greedy","implementation","math"]},{"ContestId":1348,"Index":"C","Name":"Phoenix and Distribution","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","greedy","sortings","strings"]},{"ContestId":1348,"Index":"B","Name":"Phoenix and Beauty","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms","data structures","greedy","sortings"]},{"ContestId":1348,"Index":"A","Name":"Phoenix and Balance","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":1346,"Index":"I","Name":"Pac-Man 2.0","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["*special","dp"]},{"ContestId":1346,"Index":"H","Name":"Game with Segments","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["*special","data structures","games"]},{"ContestId":1346,"Index":"G","Name":"Two IP Cameras","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special","math","number theory"]},{"ContestId":1346,"Index":"F","Name":"Dune II: Battle For Arrakis","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special","data structures","greedy","math"]},{"ContestId":1346,"Index":"E","Name":"Magic Tricks","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special","dp","graphs"]},{"ContestId":1346,"Index":"D","Name":"Constructing the Dungeon","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","graphs","greedy"]},{"ContestId":1346,"Index":"C","Name":"Spring Cleaning","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","greedy","sortings"]},{"ContestId":1346,"Index":"B","Name":"Boot Camp","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","greedy"]},{"ContestId":1346,"Index":"A","Name":"Color Revolution","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["*special","math"]},{"ContestId":1345,"Index":"B","Name":"Card Constructions","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["binary search","brute force","dp","math"]},{"ContestId":1345,"Index":"A","Name":"Puzzle Pieces","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1344,"Index":"F","Name":"Piet's Palette","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["matrices"]},{"ContestId":1344,"Index":"E","Name":"Train Tracks","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["data structures","trees"]},{"ContestId":1344,"Index":"D","Name":"R√©sum√© Review","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["binary search","greedy","math"]},{"ContestId":1344,"Index":"C","Name":"Quantifier Question","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["dfs and similar","dp","graphs","math"]},{"ContestId":1344,"Index":"B","Name":"Monopole Magnets","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["constructive algorithms","dfs and similar","dsu","graphs"]},{"ContestId":1344,"Index":"A","Name":"Hilbert's Hotel","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["math","number theory","sortings"]},{"ContestId":1343,"Index":"F","Name":"Restore the Permutation by Sorted Segments","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","constructive algorithms","data structures","greedy","implementation"]},{"ContestId":1343,"Index":"E","Name":"Weights Distributing","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","graphs","greedy","shortest paths","sortings"]},{"ContestId":1343,"Index":"D","Name":"Constant Palindrome Sum","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","data structures","greedy","two pointers"]},{"ContestId":1343,"Index":"C","Name":"Alternating Subsequence","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["dp","greedy","two pointers"]},{"ContestId":1343,"Index":"B","Name":"Balanced Array","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1343,"Index":"A","Name":"Candies","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","math"]},{"ContestId":1342,"Index":"F","Name":"Make It Ascending","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["bitmasks","brute force","dp"]},{"ContestId":1342,"Index":"E","Name":"Placing Rooks","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["combinatorics","fft","math"]},{"ContestId":1342,"Index":"D","Name":"Multiple Testcases","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","constructive algorithms","data structures","greedy","sortings","two pointers"]},{"ContestId":1342,"Index":"C","Name":"Yet Another Counting Problem","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["math","number theory"]},{"ContestId":1342,"Index":"B","Name":"Binary Period","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","strings"]},{"ContestId":1342,"Index":"A","Name":"Road To Zero","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","math"]},{"ContestId":1341,"Index":"B","Name":"Nastya and Door","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1341,"Index":"A","Name":"Nastya and Rice","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math"]},{"ContestId":1340,"Index":"F","Name":"Nastya and CBS","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["brute force","data structures","hashing"]},{"ContestId":1340,"Index":"E","Name":"Nastya and Bees","Type":"PROGRAMMING","Rating":3000,"Points":2250,"Tags":["graphs","interactive","probabilities"]},{"ContestId":1340,"Index":"D","Name":"Nastya and Time Machine","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"ContestId":1340,"Index":"C","Name":"Nastya and Unexpected Guest","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["dfs and similar","dp","graphs","shortest paths"]},{"ContestId":1340,"Index":"B","Name":"Nastya and Scoreboard","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["bitmasks","dp","graphs","greedy"]},{"ContestId":1340,"Index":"A","Name":"Nastya and Strange Generator","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","data structures","greedy","implementation"]},{"ContestId":1339,"Index":"B","Name":"Sorted Adjacent Differences","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["constructive algorithms","sortings"]},{"ContestId":1339,"Index":"A","Name":"Filling Diamonds","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","dp","implementation","math"]},{"ContestId":1338,"Index":"E","Name":"JYPnation","Type":"PROGRAMMING","Rating":3500,"Points":2750,"Tags":["graphs"]},{"ContestId":1338,"Index":"D","Name":"Nested Rubber Bands","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["constructive algorithms","dfs and similar","dp","math","trees"]},{"ContestId":1338,"Index":"C","Name":"Perfect Triples","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["bitmasks","brute force","constructive algorithms","divide and conquer","math"]},{"ContestId":1338,"Index":"B","Name":"Edge Weight Assignment","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["bitmasks","constructive algorithms","dfs and similar","greedy","math","trees"]},{"ContestId":1338,"Index":"A","Name":"Powered Addition","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["greedy","math"]},{"ContestId":1337,"Index":"B","Name":"Kana and Dragon Quest game","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","implementation","math"]},{"ContestId":1337,"Index":"A","Name":"Ichihime and Triangle","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1336,"Index":"F","Name":"Journey","Type":"PROGRAMMING","Rating":3500,"Points":3250,"Tags":["data structures","divide and conquer","graphs","trees"]},{"ContestId":1336,"Index":"E2","Name":"Chiori and Doll Picking (hard version)","Type":"PROGRAMMING","Rating":3500,"Points":1500,"Tags":["bitmasks","brute force","combinatorics","math"]},{"ContestId":1336,"Index":"E1","Name":"Chiori and Doll Picking (easy version)","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["bitmasks","brute force","combinatorics","math"]},{"ContestId":1336,"Index":"D","Name":"Yui and Mahjong Set","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["constructive algorithms","interactive"]},{"ContestId":1336,"Index":"C","Name":"Kaavi and Magic Spell","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["dp","strings"]},{"ContestId":1336,"Index":"B","Name":"Xenia and Colorful Gems","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["binary search","greedy","math","sortings","two pointers"]},{"ContestId":1336,"Index":"A","Name":"Linova and Kingdom","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["dfs and similar","dp","greedy","sortings","trees"]},{"ContestId":1335,"Index":"F","Name":"Robots on a Grid","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","dfs and similar","dsu","graphs","greedy","matrices"]},{"ContestId":1335,"Index":"E2","Name":"Three Blocks Palindrome (hard version)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","data structures","dp","two pointers"]},{"ContestId":1335,"Index":"E1","Name":"Three Blocks Palindrome (easy version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","brute force","data structures","dp","two pointers"]},{"ContestId":1335,"Index":"D","Name":"Anti-Sudoku","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["constructive algorithms","implementation"]},{"ContestId":1335,"Index":"C","Name":"Two Teams Composing","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","greedy","implementation","sortings"]},{"ContestId":1335,"Index":"B","Name":"Construct the String","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1335,"Index":"A","Name":"Candies and Two Sisters","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1334,"Index":"G","Name":"Substring Search","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["bitmasks","brute force","fft"]},{"ContestId":1334,"Index":"F","Name":"Strange Function","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["binary search","data structures","dp","greedy"]},{"ContestId":1334,"Index":"E","Name":"Divisor Paths","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["combinatorics","graphs","greedy","math","number theory"]},{"ContestId":1334,"Index":"D","Name":"Minimum Euler Cycle","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","graphs","greedy","implementation"]},{"ContestId":1334,"Index":"C","Name":"Circle of Monsters","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","constructive algorithms","greedy","math"]},{"ContestId":1334,"Index":"B","Name":"Middle Class","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1334,"Index":"A","Name":"Level Statistics","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","math"]},{"ContestId":1333,"Index":"F","Name":"Kate and imperfection","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["greedy","implementation","math","number theory","sortings","two pointers"]},{"ContestId":1333,"Index":"E","Name":"Road to 1600","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["brute force","constructive algorithms"]},{"ContestId":1333,"Index":"D","Name":"Challenges in school ‚Ññ41","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["brute force","constructive algorithms","games","graphs","greedy","implementation","sortings"]},{"ContestId":1333,"Index":"C","Name":"Eugene and an array","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["binary search","data structures","implementation","two pointers"]},{"ContestId":1333,"Index":"B","Name":"Kind Anton","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["greedy","implementation"]},{"ContestId":1333,"Index":"A","Name":"Little Artem","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":1332,"Index":"G","Name":"No Monotone Triples","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["data structures"]},{"ContestId":1332,"Index":"F","Name":"Independent Set","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["dfs and similar","dp","trees"]},{"ContestId":1332,"Index":"E","Name":"Height All the Same","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["combinatorics","constructive algorithms","math","matrices"]},{"ContestId":1332,"Index":"D","Name":"Walk on Matrix","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["bitmasks","constructive algorithms","math"]},{"ContestId":1332,"Index":"C","Name":"K-Complete Word","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["dfs and similar","dsu","greedy","implementation","strings"]},{"ContestId":1332,"Index":"B","Name":"Composite Coloring","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","constructive algorithms","greedy","math","number theory"]},{"ContestId":1332,"Index":"A","Name":"Exercising Walk","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":1331,"Index":"H","Name":"It's showtime","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1331,"Index":"G","Name":"Lingua Romana","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1331,"Index":"F","Name":"Elementary!","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","brute force","dp","strings"]},{"ContestId":1331,"Index":"E","Name":"Jordan Smiley","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","dfs and similar","geometry","implementation"]},{"ContestId":1331,"Index":"D","Name":"Again?","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1331,"Index":"C","Name":"...And after happily lived ever they","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","bitmasks"]},{"ContestId":1331,"Index":"B","Name":"Limericks","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","math","number theory"]},{"ContestId":1331,"Index":"A","Name":"Is it rated?","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1330,"Index":"B","Name":"Dreamoon Likes Permutations","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","math"]},{"ContestId":1330,"Index":"A","Name":"Dreamoon and Ranking Collection","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":1329,"Index":"E","Name":"Dreamoon Loves AA","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["binary search","greedy"]},{"ContestId":1329,"Index":"D","Name":"Dreamoon Likes Strings","Type":"PROGRAMMING","Rating":3100,"Points":2000,"Tags":["constructive algorithms","data structures"]},{"ContestId":1329,"Index":"C","Name":"Drazil Likes Heap","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["constructive algorithms","data structures","greedy","implementation"]},{"ContestId":1329,"Index":"B","Name":"Dreamoon Likes Sequences","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["bitmasks","combinatorics","math"]},{"ContestId":1329,"Index":"A","Name":"Dreamoon Likes Coloring","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1328,"Index":"F","Name":"Make k Equal","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy"]},{"ContestId":1328,"Index":"E","Name":"Tree Queries","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":1328,"Index":"D","Name":"Carousel","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","dp","graphs","greedy","math"]},{"ContestId":1328,"Index":"C","Name":"Ternary XOR","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1328,"Index":"B","Name":"K-th Beautiful String","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","brute force","combinatorics","implementation","math"]},{"ContestId":1328,"Index":"A","Name":"Divisibility Problem","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1327,"Index":"G","Name":"Letters and Question Marks","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["bitmasks","dp","string suffix structures"]},{"ContestId":1327,"Index":"F","Name":"AND Segments","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["bitmasks","combinatorics","data structures","dp","two pointers"]},{"ContestId":1327,"Index":"E","Name":"Count The Blocks","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["combinatorics","dp","math"]},{"ContestId":1327,"Index":"D","Name":"Infinite Path","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","dfs and similar","graphs","math","number theory"]},{"ContestId":1327,"Index":"C","Name":"Game with Chips","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["constructive algorithms","implementation"]},{"ContestId":1327,"Index":"B","Name":"Princesses and Princes","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","graphs","greedy"]},{"ContestId":1327,"Index":"A","Name":"Sum of Odd Integers","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math"]},{"ContestId":1326,"Index":"G","Name":"Spiderweb Trees","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["dp","geometry","trees"]},{"ContestId":1326,"Index":"F2","Name":"Wise Men (Hard Version)","Type":"PROGRAMMING","Rating":3200,"Points":1500,"Tags":["bitmasks","dp","math"]},{"ContestId":1326,"Index":"F1","Name":"Wise Men (Easy Version)","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["bitmasks","brute force","dp","meet-in-the-middle"]},{"ContestId":1326,"Index":"E","Name":"Bombs","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","two pointers"]},{"ContestId":1326,"Index":"D2","Name":"Prefix-Suffix Palindrome (Hard version)","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["binary search","greedy","hashing","string suffix structures","strings"]},{"ContestId":1326,"Index":"D1","Name":"Prefix-Suffix Palindrome (Easy version)","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["hashing","string suffix structures","strings"]},{"ContestId":1326,"Index":"C","Name":"Permutation Partitions","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["combinatorics","greedy","math"]},{"ContestId":1326,"Index":"B","Name":"Maximums","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["implementation","math"]},{"ContestId":1326,"Index":"A","Name":"Bad Ugly Numbers","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","number theory"]},{"ContestId":1325,"Index":"F","Name":"Ehab's Last Theorem","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"ContestId":1325,"Index":"E","Name":"Ehab's REAL Number Theory Problem","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["brute force","dfs and similar","graphs","number theory","shortest paths"]},{"ContestId":1325,"Index":"D","Name":"Ehab the Xorcist","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["bitmasks","constructive algorithms","greedy","number theory"]},{"ContestId":1325,"Index":"C","Name":"Ehab and Path-etic MEXs","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"ContestId":1325,"Index":"B","Name":"CopyCopyCopyCopyCopy","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["greedy","implementation"]},{"ContestId":1325,"Index":"A","Name":"EhAb AnD gCd","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","number theory"]},{"ContestId":1324,"Index":"F","Name":"Maximum White Subtree","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":1324,"Index":"E","Name":"Sleeping Schedule","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dp","implementation"]},{"ContestId":1324,"Index":"D","Name":"Pair of Topics","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","data structures","sortings","two pointers"]},{"ContestId":1324,"Index":"C","Name":"Frog Jumps","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","data structures","dfs and similar","greedy","implementation"]},{"ContestId":1324,"Index":"B","Name":"Yet Another Palindrome Problem","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","strings"]},{"ContestId":1324,"Index":"A","Name":"Yet Another Tetris Problem","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation","number theory"]},{"ContestId":1323,"Index":"B","Name":"Count Subrectangles","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","greedy","implementation"]},{"ContestId":1323,"Index":"A","Name":"Even Subset Sum Problem","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","dp","greedy","implementation"]},{"ContestId":1322,"Index":"F","Name":"Assigning Fares","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["dp","trees"]},{"ContestId":1322,"Index":"E","Name":"Median Mountain Range","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["data structures"]},{"ContestId":1322,"Index":"D","Name":"Reality Show","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["bitmasks","dp"]},{"ContestId":1322,"Index":"C","Name":"Instant Noodles","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["graphs","hashing","math","number theory"]},{"ContestId":1322,"Index":"B","Name":"Present","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["binary search","bitmasks","constructive algorithms","data structures","math","sortings"]},{"ContestId":1322,"Index":"A","Name":"Unusual Competitions","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["greedy"]},{"ContestId":1321,"Index":"C","Name":"Remove Adjacent","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["brute force","constructive algorithms","greedy","strings"]},{"ContestId":1321,"Index":"A","Name":"Contest for Robots","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy"]},{"ContestId":1320,"Index":"F","Name":"Blocks and Sensors","Type":"PROGRAMMING","Rating":3500,"Points":2500,"Tags":["brute force"]},{"ContestId":1320,"Index":"E","Name":"Treeland and Viruses","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["data structures","dfs and similar","dp","shortest paths","trees"]},{"ContestId":1320,"Index":"D","Name":"Reachable Strings","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["data structures","hashing","strings"]},{"ContestId":1320,"Index":"C","Name":"World of Darkraft: Battle for Azathoth","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["brute force","data structures","sortings"]},{"ContestId":1320,"Index":"B","Name":"Navigation System","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dfs and similar","graphs","shortest paths"]},{"ContestId":1320,"Index":"A","Name":"Journey Planning","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["data structures","dp","greedy","math","sortings"]},{"ContestId":1316,"Index":"F","Name":"Battalion Strength","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["data structures","divide and conquer","probabilities"]},{"ContestId":1316,"Index":"E","Name":"Team Building","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["bitmasks","dp","greedy","sortings"]},{"ContestId":1316,"Index":"D","Name":"Nash Matrix","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["constructive algorithms","dfs and similar","graphs","implementation"]},{"ContestId":1316,"Index":"C","Name":"Primitive Primes","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["constructive algorithms","math","ternary search"]},{"ContestId":1316,"Index":"B","Name":"String Modification","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","constructive algorithms","implementation","sortings","strings"]},{"ContestId":1316,"Index":"A","Name":"Grade Allocation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1315,"Index":"C","Name":"Restoring Permutation","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["greedy"]},{"ContestId":1315,"Index":"B","Name":"Homecoming","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","dp","greedy","strings"]},{"ContestId":1315,"Index":"A","Name":"Dead Pixel","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1313,"Index":"E","Name":"Concatenation with intersection","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["data structures","hashing","strings","two pointers"]},{"ContestId":1313,"Index":"D","Name":"Happy New Year","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["bitmasks","dp","implementation"]},{"ContestId":1313,"Index":"C2","Name":"Skyscrapers (hard version)","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["data structures","dp","greedy"]},{"ContestId":1313,"Index":"C1","Name":"Skyscrapers (easy version)","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","data structures","dp","greedy"]},{"ContestId":1313,"Index":"B","Name":"Different Rules","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1313,"Index":"A","Name":"Fast Food Restaurant","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","greedy","implementation"]},{"ContestId":1312,"Index":"G","Name":"Autocompletion","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","dfs and similar","dp"]},{"ContestId":1312,"Index":"F","Name":"Attack on Red Kingdom","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["games","two pointers"]},{"ContestId":1312,"Index":"E","Name":"Array Shrinking","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1312,"Index":"D","Name":"Count the Arrays","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":1312,"Index":"C","Name":"Adding Powers","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["bitmasks","greedy","implementation","math","number theory","ternary search"]},{"ContestId":1312,"Index":"B","Name":"Bogosort","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms","sortings"]},{"ContestId":1312,"Index":"A","Name":"Two Regular Polygons","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["geometry","greedy","math","number theory"]},{"ContestId":1311,"Index":"F","Name":"Moving Points","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","divide and conquer","implementation","sortings"]},{"ContestId":1311,"Index":"E","Name":"Construct the Binary Tree","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","constructive algorithms","trees"]},{"ContestId":1311,"Index":"D","Name":"Three Integers","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","math"]},{"ContestId":1311,"Index":"C","Name":"Perform the Combo","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force"]},{"ContestId":1311,"Index":"B","Name":"WeirdSort","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["dfs and similar","sortings"]},{"ContestId":1311,"Index":"A","Name":"Add Odd or Subtract Even","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation","math"]},{"ContestId":1310,"Index":"F","Name":"Bad Cryptography","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["math","number theory"]},{"ContestId":1310,"Index":"E","Name":"Strange Function","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["dp"]},{"ContestId":1310,"Index":"D","Name":"Tourism","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["dp","graphs","probabilities"]},{"ContestId":1310,"Index":"C","Name":"Au Pont Rouge","Type":"PROGRAMMING","Rating":2800,"Points":1500,"Tags":["binary search","dp","strings"]},{"ContestId":1310,"Index":"B","Name":"Double Elimination","Type":"PROGRAMMING","Rating":2500,"Points":1000,"Tags":["dp","implementation"]},{"ContestId":1310,"Index":"A","Name":"Recommendations","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["data structures","greedy","sortings"]},{"ContestId":1307,"Index":"G","Name":"Cow and Exercise","Type":"PROGRAMMING","Rating":3100,"Points":3500,"Tags":["flows","graphs","shortest paths"]},{"ContestId":1307,"Index":"F","Name":"Cow and Vacation","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["dfs and similar","dsu","trees"]},{"ContestId":1307,"Index":"E","Name":"Cow and Treats","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["binary search","combinatorics","dp","greedy","implementation","math"]},{"ContestId":1307,"Index":"D","Name":"Cow and Fields","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","data structures","dfs and similar","graphs","greedy","shortest paths","sortings"]},{"ContestId":1307,"Index":"C","Name":"Cow and Message","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["brute force","dp","math","strings"]},{"ContestId":1307,"Index":"B","Name":"Cow and Friend","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["geometry","greedy","math"]},{"ContestId":1307,"Index":"A","Name":"Cow and Haybales","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1305,"Index":"H","Name":"Kuroni the Private Tutor","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["binary search","greedy"]},{"ContestId":1305,"Index":"G","Name":"Kuroni and Antihype","Type":"PROGRAMMING","Rating":3500,"Points":3250,"Tags":["bitmasks","brute force","dp","dsu","graphs"]},{"ContestId":1305,"Index":"F","Name":"Kuroni and the Punishment","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["math","number theory","probabilities"]},{"ContestId":1305,"Index":"E","Name":"Kuroni and the Score Distribution","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1305,"Index":"D","Name":"Kuroni and the Celebration","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["constructive algorithms","dfs and similar","interactive","trees"]},{"ContestId":1305,"Index":"C","Name":"Kuroni and Impossible Calculation","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["brute force","combinatorics","math","number theory"]},{"ContestId":1305,"Index":"B","Name":"Kuroni and Simple Strings","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","greedy","strings","two pointers"]},{"ContestId":1305,"Index":"A","Name":"Kuroni and the Gifts","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","constructive algorithms","greedy","sortings"]},{"ContestId":1304,"Index":"F2","Name":"Animal Observation (hard version)","Type":"PROGRAMMING","Rating":2400,"Points":1000,"Tags":["data structures","dp","greedy"]},{"ContestId":1304,"Index":"F1","Name":"Animal Observation (easy version)","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["data structures","dp"]},{"ContestId":1304,"Index":"E","Name":"1-Trees and Queries","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["data structures","dfs and similar","shortest paths","trees"]},{"ContestId":1304,"Index":"D","Name":"Shortest and Longest LIS","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["constructive algorithms","graphs","greedy","two pointers"]},{"ContestId":1304,"Index":"C","Name":"Air Conditioner","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["dp","greedy","implementation","sortings","two pointers"]},{"ContestId":1304,"Index":"B","Name":"Longest Palindrome","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","constructive algorithms","greedy","implementation","strings"]},{"ContestId":1304,"Index":"A","Name":"Two Rabbits","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1303,"Index":"G","Name":"Sum of Prefix Sums","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","divide and conquer","geometry","trees"]},{"ContestId":1303,"Index":"F","Name":"Number of Components","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dsu","implementation"]},{"ContestId":1303,"Index":"E","Name":"Erase Subsequences","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","strings"]},{"ContestId":1303,"Index":"D","Name":"Fill The Bag","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["bitmasks","greedy"]},{"ContestId":1303,"Index":"C","Name":"Perfect Keyboard","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dfs and similar","greedy","implementation"]},{"ContestId":1303,"Index":"B","Name":"National Project","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["math"]},{"ContestId":1303,"Index":"A","Name":"Erasing Zeroes","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1302,"Index":"J","Name":"Keep talking and nobody explodes -- hard","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1302,"Index":"I","Name":"Deja vu","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1302,"Index":"H","Name":"Who needs suffix structures?","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1302,"Index":"G","Name":"Keep talking and nobody explodes -- medium","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1302,"Index":"F","Name":"Keep talking and nobody explodes -- easy","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["bitmasks","brute force","expression parsing"]},{"ContestId":1302,"Index":"E","Name":"Amazing bitset","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1302,"Index":"D","Name":"Dijkstra","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1302,"Index":"C","Name":"Segment tree or Fenwick?","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["data structures"]},{"ContestId":1302,"Index":"B","Name":"DAG","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1302,"Index":"A","Name":"Nash equilibrium","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1301,"Index":"F","Name":"Super Jaber","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["dfs and similar","graphs","implementation","shortest paths"]},{"ContestId":1301,"Index":"E","Name":"Nanosoft","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["binary search","data structures","dp","implementation"]},{"ContestId":1301,"Index":"D","Name":"Time to Run","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["constructive algorithms","graphs","implementation"]},{"ContestId":1301,"Index":"C","Name":"Ayoub's function","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["binary search","combinatorics","greedy","math","strings"]},{"ContestId":1301,"Index":"B","Name":"Motarack's Birthday","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","greedy","ternary search"]},{"ContestId":1301,"Index":"A","Name":"Three Strings","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1300,"Index":"B","Name":"Assigning to Classes","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["greedy","implementation","sortings"]},{"ContestId":1300,"Index":"A","Name":"Non-zero","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":1299,"Index":"E","Name":"So Mean","Type":"PROGRAMMING","Rating":3400,"Points":2250,"Tags":["interactive","math"]},{"ContestId":1299,"Index":"D","Name":"Around the World","Type":"PROGRAMMING","Rating":3000,"Points":1750,"Tags":["bitmasks","combinatorics","dfs and similar","dp","graphs","graphs","math","trees"]},{"ContestId":1299,"Index":"C","Name":"Water Balance","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["data structures","geometry","greedy"]},{"ContestId":1299,"Index":"B","Name":"Aerodynamic","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["geometry"]},{"ContestId":1299,"Index":"A","Name":"Anu Has a Function","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","greedy","math"]},{"ContestId":1297,"Index":"I","Name":"Falling Blocks","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","data structures"]},{"ContestId":1297,"Index":"H","Name":"Paint the String","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","dp","strings"]},{"ContestId":1297,"Index":"G","Name":"M-numbers","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","dp","math"]},{"ContestId":1297,"Index":"F","Name":"Movie Fan","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","data structures","greedy","implementation","sortings"]},{"ContestId":1297,"Index":"E","Name":"Modernization of Treeland","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","dfs and similar","trees"]},{"ContestId":1297,"Index":"D","Name":"Bonus Distribution ","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","binary search","greedy","sortings"]},{"ContestId":1297,"Index":"C","Name":"Dream Team","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","greedy"]},{"ContestId":1297,"Index":"B","Name":"Cartoons","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation","sortings"]},{"ContestId":1297,"Index":"A","Name":"Likes Display","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1296,"Index":"F","Name":"Berland Beauty","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["constructive algorithms","dfs and similar","greedy","sortings","trees"]},{"ContestId":1296,"Index":"E2","Name":"String Coloring (hard version)","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","dp"]},{"ContestId":1296,"Index":"E1","Name":"String Coloring (easy version)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","dp","graphs","greedy","sortings"]},{"ContestId":1296,"Index":"D","Name":"Fight with Monsters","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1296,"Index":"C","Name":"Yet Another Walking Robot","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1296,"Index":"B","Name":"Food Buying","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1296,"Index":"A","Name":"Array with Odd Sum","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1295,"Index":"F","Name":"Good Contest","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["combinatorics","dp","probabilities"]},{"ContestId":1295,"Index":"E","Name":"Permutation Separation","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","divide and conquer"]},{"ContestId":1295,"Index":"D","Name":"Same GCDs","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["math","number theory"]},{"ContestId":1295,"Index":"C","Name":"Obtain The String","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dp","greedy","strings"]},{"ContestId":1295,"Index":"B","Name":"Infinite Prefixes","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["math","strings"]},{"ContestId":1295,"Index":"A","Name":"Display The Number","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy"]},{"ContestId":1294,"Index":"F","Name":"Three Paths on a Tree","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dfs and similar","dp","greedy","trees"]},{"ContestId":1294,"Index":"E","Name":"Obtain a Permutation","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["greedy","implementation","math"]},{"ContestId":1294,"Index":"D","Name":"MEX maximizing","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","greedy","implementation","math"]},{"ContestId":1294,"Index":"C","Name":"Product of Three Numbers","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy","math","number theory"]},{"ContestId":1294,"Index":"B","Name":"Collecting Packages","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":1294,"Index":"A","Name":"Collecting Coins","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1293,"Index":"B","Name":"JOE is on TV!","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["combinatorics","greedy","math"]},{"ContestId":1293,"Index":"A","Name":"ConneR and the A.R.C. Markland-N","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["binary search","brute force","implementation"]},{"ContestId":1292,"Index":"F","Name":"Nora's Toy Boxes","Type":"PROGRAMMING","Rating":3500,"Points":2750,"Tags":["bitmasks","combinatorics","dp"]},{"ContestId":1292,"Index":"E","Name":"Rin and The Unknown Flower","Type":"PROGRAMMING","Rating":3500,"Points":2250,"Tags":["constructive algorithms","greedy","interactive","math"]},{"ContestId":1292,"Index":"D","Name":"Chaotic V.","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["dp","graphs","greedy","math","number theory","trees"]},{"ContestId":1292,"Index":"C","Name":"Xenon's Attack on the Gangs","Type":"PROGRAMMING","Rating":2300,"Points":1250,"Tags":["combinatorics","dfs and similar","dp","greedy","trees"]},{"ContestId":1292,"Index":"B","Name":"Aroma's Search","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["brute force","constructive algorithms","geometry","greedy","implementation"]},{"ContestId":1292,"Index":"A","Name":"NEKO's Maze Game","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["data structures","dsu","implementation"]},{"ContestId":1291,"Index":"F","Name":"Coffee Varieties (easy version)","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["graphs","interactive"]},{"ContestId":1291,"Index":"B","Name":"Array Sharpening","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1291,"Index":"A","Name":"Even But Not Even","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","math","strings"]},{"ContestId":1290,"Index":"F","Name":"Making Shapes","Type":"PROGRAMMING","Rating":3500,"Points":3250,"Tags":["dp"]},{"ContestId":1290,"Index":"E","Name":"Cartesian Tree ","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["data structures"]},{"ContestId":1290,"Index":"D","Name":"Coffee Varieties (hard version)","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["constructive algorithms","graphs","interactive"]},{"ContestId":1290,"Index":"C","Name":"Prefix Enlightenment","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":1290,"Index":"B","Name":"Irreducible Anagrams","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["binary search","constructive algorithms","data structures","strings","two pointers"]},{"ContestId":1290,"Index":"A","Name":"Mind Control","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["brute force","data structures","implementation"]},{"ContestId":1288,"Index":"F","Name":"Red-Blue Graph","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["constructive algorithms","flows"]},{"ContestId":1288,"Index":"E","Name":"Messenger Simulator","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures"]},{"ContestId":1288,"Index":"D","Name":"Minimax Problem","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","bitmasks","dp"]},{"ContestId":1288,"Index":"C","Name":"Two Arrays","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["combinatorics","dp"]},{"ContestId":1288,"Index":"B","Name":"Yet Another Meme Problem","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math"]},{"ContestId":1288,"Index":"A","Name":"Deadline","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["binary search","brute force","math","ternary search"]},{"ContestId":1287,"Index":"B","Name":"Hyperset","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","data structures","implementation"]},{"ContestId":1287,"Index":"A","Name":"Angry Students","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1286,"Index":"F","Name":"Harry The Potter","Type":"PROGRAMMING","Rating":3100,"Points":2750,"Tags":["brute force","constructive algorithms","dp","fft","implementation","math"]},{"ContestId":1286,"Index":"E","Name":"Fedya the Potter Strikes Back","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["data structures","strings"]},{"ContestId":1286,"Index":"D","Name":"LCC","Type":"PROGRAMMING","Rating":3100,"Points":1750,"Tags":["data structures","math","matrices","probabilities"]},{"ContestId":1286,"Index":"C2","Name":"Madhouse (Hard version)","Type":"PROGRAMMING","Rating":2800,"Points":1000,"Tags":["brute force","constructive algorithms","hashing","interactive","math"]},{"ContestId":1286,"Index":"C1","Name":"Madhouse (Easy version)","Type":"PROGRAMMING","Rating":2400,"Points":750,"Tags":["brute force","constructive algorithms","interactive","math"]},{"ContestId":1286,"Index":"B","Name":"Numbers on Tree","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["constructive algorithms","data structures","dfs and similar","graphs","greedy","trees"]},{"ContestId":1286,"Index":"A","Name":"Garland","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["dp","greedy","sortings"]},{"ContestId":1285,"Index":"F","Name":"Classical?","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["binary search","combinatorics","number theory"]},{"ContestId":1285,"Index":"E","Name":"Delete a Segment","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["brute force","constructive algorithms","data structures","dp","graphs","sortings","trees","two pointers"]},{"ContestId":1285,"Index":"D","Name":"Dr. Evil Underscores","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["bitmasks","brute force","dfs and similar","divide and conquer","dp","greedy","strings","trees"]},{"ContestId":1285,"Index":"C","Name":"Fadi and LCM","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["brute force","math","number theory"]},{"ContestId":1285,"Index":"B","Name":"Just Eat It!","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["dp","greedy","implementation"]},{"ContestId":1285,"Index":"A","Name":"Mezo Playing Zoma","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1284,"Index":"G","Name":"Seollal","Type":"PROGRAMMING","Rating":3300,"Points":4000,"Tags":["graphs"]},{"ContestId":1284,"Index":"F","Name":"New Year and Social Network","Type":"PROGRAMMING","Rating":3200,"Points":4000,"Tags":["data structures","graph matchings","graphs","math","trees"]},{"ContestId":1284,"Index":"E","Name":"New Year and Castle Construction","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["combinatorics","geometry","math","sortings"]},{"ContestId":1284,"Index":"D","Name":"New Year and Conference","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["binary search","data structures","hashing","sortings"]},{"ContestId":1284,"Index":"C","Name":"New Year and Permutation","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["combinatorics","math"]},{"ContestId":1284,"Index":"B","Name":"New Year and Ascent Sequence","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["binary search","combinatorics","data structures","dp","implementation","sortings"]},{"ContestId":1284,"Index":"A","Name":"New Year and Naming","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1283,"Index":"F","Name":"DIY Garland","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms","greedy","trees"]},{"ContestId":1283,"Index":"E","Name":"New Year Parties","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1283,"Index":"D","Name":"Christmas Trees","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["graphs","greedy","shortest paths"]},{"ContestId":1283,"Index":"C","Name":"Friends and Gifts","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","data structures","math"]},{"ContestId":1283,"Index":"B","Name":"Candies Division","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1283,"Index":"A","Name":"Minutes Before the New Year","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1282,"Index":"E","Name":"The Cake Is a Lie","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["constructive algorithms","data structures","dfs and similar","graphs"]},{"ContestId":1282,"Index":"D","Name":"Enchanted Artifact","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["constructive algorithms","interactive","strings"]},{"ContestId":1282,"Index":"C","Name":"Petya and Exam","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["greedy","sortings","two pointers"]},{"ContestId":1282,"Index":"B2","Name":"K for the Price of One (Hard Version)","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["dp","greedy","sortings"]},{"ContestId":1282,"Index":"B1","Name":"K for the Price of One (Easy Version)","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["dp","greedy","sortings"]},{"ContestId":1282,"Index":"A","Name":"Temporarily unavailable","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":1281,"Index":"B","Name":"Azamon Web Services","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["greedy"]},{"ContestId":1281,"Index":"A","Name":"Suffix Three","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1280,"Index":"F","Name":"Intergalactic Sliding Puzzle","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["combinatorics","constructive algorithms","math"]},{"ContestId":1280,"Index":"E","Name":"Kirchhoff's Current Loss","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["math"]},{"ContestId":1280,"Index":"D","Name":"Miss Punyverse","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["dp","greedy","trees"]},{"ContestId":1280,"Index":"C","Name":"Jeremy Bearimy","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dfs and similar","graphs","greedy","trees"]},{"ContestId":1280,"Index":"B","Name":"Beingawesomeism","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["implementation","math"]},{"ContestId":1280,"Index":"A","Name":"Cut and Paste","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["implementation","math"]},{"ContestId":1279,"Index":"F","Name":"New Year and Handle Change","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["binary search","dp"]},{"ContestId":1279,"Index":"E","Name":"New Year Permutations","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["combinatorics","dp"]},{"ContestId":1279,"Index":"D","Name":"Santa's Bot","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["combinatorics","math","probabilities"]},{"ContestId":1279,"Index":"C","Name":"Stack of Presents","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1279,"Index":"B","Name":"Verse For Santa","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","brute force","implementation"]},{"ContestId":1279,"Index":"A","Name":"New Year Garland","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1278,"Index":"F","Name":"Cards","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["combinatorics","dp","math","number theory","probabilities"]},{"ContestId":1278,"Index":"E","Name":"Tests for problem D","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms","dfs and similar","divide and conquer","trees"]},{"ContestId":1278,"Index":"D","Name":"Segment Tree","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","dsu","graphs","trees"]},{"ContestId":1278,"Index":"C","Name":"Berry Jam","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["data structures","dp","greedy","implementation"]},{"ContestId":1278,"Index":"B","Name":"A and B","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","math"]},{"ContestId":1278,"Index":"A","Name":"Shuffle Hashing","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","implementation","strings"]},{"ContestId":1277,"Index":"D","Name":"Let's Play the Words?","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["data structures","hashing","implementation","math"]},{"ContestId":1277,"Index":"B","Name":"Make Them Odd","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","number theory"]},{"ContestId":1277,"Index":"A","Name":"Happy Birthday, Polycarp!","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":1276,"Index":"F","Name":"Asterisk Substrings","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["string suffix structures"]},{"ContestId":1276,"Index":"E","Name":"Four Stones","Type":"PROGRAMMING","Rating":3500,"Points":2250,"Tags":["constructive algorithms"]},{"ContestId":1276,"Index":"D","Name":"Tree Elimination","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["dp","trees"]},{"ContestId":1276,"Index":"C","Name":"Beautiful Rectangle","Type":"PROGRAMMING","Rating":2300,"Points":1250,"Tags":["brute force","combinatorics","constructive algorithms","data structures","greedy","math"]},{"ContestId":1276,"Index":"B","Name":"Two Fairs","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["combinatorics","dfs and similar","dsu","graphs"]},{"ContestId":1276,"Index":"A","Name":"As Simple as One and Two","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["dp","greedy"]},{"ContestId":1275,"Index":"F","Name":"–®–∞—Ä–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–æ–≤","Type":"PROGRAMMING","Rating":0,"Points":3000,"Tags":["*special","binary search","interactive"]},{"ContestId":1275,"Index":"E3","Name":"–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":["*special"]},{"ContestId":1275,"Index":"E2","Name":"–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":["*special"]},{"ContestId":1275,"Index":"E1","Name":"–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Å—É–º–º–∞","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":["*special"]},{"ContestId":1275,"Index":"D","Name":"Storage2","Type":"PROGRAMMING","Rating":0,"Points":2000,"Tags":["*special"]},{"ContestId":1275,"Index":"C","Name":"#define –ó–∞–¥–∞—á–∞ B ...","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":["*special"]},{"ContestId":1275,"Index":"B","Name":"Code Review","Type":"PROGRAMMING","Rating":0,"Points":250,"Tags":["*special"]},{"ContestId":1275,"Index":"A","Name":"–°–∫—Ä—ã—Ç—ã–π –¥—Ä—É–≥","Type":"PROGRAMMING","Rating":0,"Points":250,"Tags":["*special"]},{"ContestId":1272,"Index":"F","Name":"Two Bracket Sequences","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","strings","two pointers"]},{"ContestId":1272,"Index":"E","Name":"Nearest Opposite Parity","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar","graphs","shortest paths"]},{"ContestId":1272,"Index":"D","Name":"Remove One Element","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","dp"]},{"ContestId":1272,"Index":"C","Name":"Yet Another Broken Keyboard","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["combinatorics","dp","implementation"]},{"ContestId":1272,"Index":"B","Name":"Snow Walking Robot","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1272,"Index":"A","Name":"Three Friends","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","greedy","math","sortings"]},{"ContestId":1271,"Index":"F","Name":"Divide The Students","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["brute force"]},{"ContestId":1271,"Index":"E","Name":"Common Number","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["binary search","combinatorics","dp","math"]},{"ContestId":1271,"Index":"D","Name":"Portals","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["data structures","dp","greedy","implementation","sortings"]},{"ContestId":1271,"Index":"C","Name":"Shawarma Tent","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["brute force","geometry","greedy","implementation"]},{"ContestId":1271,"Index":"B","Name":"Blocks","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1271,"Index":"A","Name":"Suits","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","math"]},{"ContestId":1270,"Index":"I","Name":"Xor on Figures","Type":"PROGRAMMING","Rating":3500,"Points":4500,"Tags":["constructive algorithms","fft","math"]},{"ContestId":1270,"Index":"H","Name":"Number of Components","Type":"PROGRAMMING","Rating":3300,"Points":4000,"Tags":["data structures"]},{"ContestId":1270,"Index":"G","Name":"Subset with Zero Sum","Type":"PROGRAMMING","Rating":2700,"Points":3750,"Tags":["constructive algorithms","dfs and similar","graphs","math"]},{"ContestId":1270,"Index":"F","Name":"Awesome Substrings","Type":"PROGRAMMING","Rating":2600,"Points":3250,"Tags":["math","strings"]},{"ContestId":1270,"Index":"E","Name":"Divide Points","Type":"PROGRAMMING","Rating":2300,"Points":2750,"Tags":["constructive algorithms","geometry","math"]},{"ContestId":1270,"Index":"D","Name":"Strange Device","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms","interactive","math","sortings"]},{"ContestId":1270,"Index":"C","Name":"Make Good","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["bitmasks","constructive algorithms","math"]},{"ContestId":1270,"Index":"B","Name":"Interesting Subarray","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1270,"Index":"A","Name":"Card Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["games","greedy","math"]},{"ContestId":1269,"Index":"B","Name":"Modulo Equality","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","sortings"]},{"ContestId":1269,"Index":"A","Name":"Equation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","math"]},{"ContestId":1268,"Index":"E","Name":"Happy Cactus","Type":"PROGRAMMING","Rating":3400,"Points":2750,"Tags":["dp"]},{"ContestId":1268,"Index":"D","Name":"Invertation in Tournament","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["brute force","divide and conquer","graphs","math"]},{"ContestId":1268,"Index":"C","Name":"K Integers","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["binary search","data structures"]},{"ContestId":1268,"Index":"B","Name":"Domino for Young","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["dp","greedy","math"]},{"ContestId":1268,"Index":"A","Name":"Long Beautiful Integer","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["constructive algorithms","greedy","implementation","strings"]},{"ContestId":1267,"Index":"L","Name":"Lexicography","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","strings"]},{"ContestId":1267,"Index":"K","Name":"Key Storage","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":1267,"Index":"J","Name":"Just Arrange the Icons","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["greedy","implementation","math"]},{"ContestId":1267,"Index":"I","Name":"Intriguing Selection","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["brute force","constructive algorithms","implementation","interactive","sortings"]},{"ContestId":1267,"Index":"H","Name":"Help BerLine","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1267,"Index":"G","Name":"Game Relics","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["math","probabilities"]},{"ContestId":1267,"Index":"F","Name":"Foolpr√ºf Security","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["graphs"]},{"ContestId":1267,"Index":"E","Name":"Elections","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["greedy"]},{"ContestId":1267,"Index":"D","Name":"DevOps Best Practices","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1267,"Index":"C","Name":"Cactus Revenge","Type":"PROGRAMMING","Rating":3500,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1267,"Index":"B","Name":"Balls of Buma","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":[]},{"ContestId":1267,"Index":"A","Name":"Apprentice Learning Trajectory","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":[]},{"ContestId":1266,"Index":"H","Name":"Red-Blue Graph","Type":"PROGRAMMING","Rating":3400,"Points":4000,"Tags":["dp","graphs","math","matrices","meet-in-the-middle"]},{"ContestId":1266,"Index":"G","Name":"Permutation Concatenation","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["string suffix structures"]},{"ContestId":1266,"Index":"F","Name":"Almost Same Distance","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["dfs and similar","graphs"]},{"ContestId":1266,"Index":"E","Name":"Spaceship Solitaire","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["data structures","greedy","implementation"]},{"ContestId":1266,"Index":"D","Name":"Decreasing Debts","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["constructive algorithms","data structures","graphs","greedy","implementation","math","two pointers"]},{"ContestId":1266,"Index":"C","Name":"Diverse Matrix","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["constructive algorithms","greedy","math","number theory"]},{"ContestId":1266,"Index":"B","Name":"Dice Tower","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["constructive algorithms","math"]},{"ContestId":1266,"Index":"A","Name":"Competitive Programmer","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["chinese remainder theorem","math"]},{"ContestId":1265,"Index":"E","Name":"Beautiful Mirrors","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["data structures","dp","math","probabilities"]},{"ContestId":1265,"Index":"B","Name":"Beautiful Numbers","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["data structures","implementation","math","two pointers"]},{"ContestId":1265,"Index":"A","Name":"Beautiful String","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1264,"Index":"F","Name":"Beautiful Fibonacci Problem","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["constructive algorithms","number theory"]},{"ContestId":1264,"Index":"E","Name":"Beautiful League","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["constructive algorithms","flows","graph matchings"]},{"ContestId":1264,"Index":"D2","Name":"Beautiful Bracket Sequence (hard version)","Type":"PROGRAMMING","Rating":2900,"Points":1000,"Tags":["combinatorics","probabilities"]},{"ContestId":1264,"Index":"D1","Name":"Beautiful Bracket Sequence (easy version)","Type":"PROGRAMMING","Rating":2600,"Points":1000,"Tags":["combinatorics","dp","probabilities"]},{"ContestId":1264,"Index":"C","Name":"Beautiful Mirrors with queries","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["data structures","probabilities"]},{"ContestId":1264,"Index":"B","Name":"Beautiful Sequence","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":1264,"Index":"A","Name":"Beautiful Regional Contest","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1263,"Index":"F","Name":"Economic Difficulties","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["data structures","dfs and similar","dp","flows","graphs","trees"]},{"ContestId":1263,"Index":"E","Name":"Editor","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["data structures","implementation"]},{"ContestId":1263,"Index":"D","Name":"Secret Passwords","Type":"PROGRAMMING","Rating":1500,"Points":1750,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":1263,"Index":"C","Name":"Everyone is a Winner!","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["binary search","math","meet-in-the-middle","number theory"]},{"ContestId":1263,"Index":"B","Name":"PIN Codes","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["greedy","implementation"]},{"ContestId":1263,"Index":"A","Name":"Sweet Problem","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["math"]},{"ContestId":1261,"Index":"F","Name":"Xor-Set","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["bitmasks","divide and conquer","math"]},{"ContestId":1260,"Index":"F","Name":"Colored Tree","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","trees"]},{"ContestId":1260,"Index":"E","Name":"Tournament","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","dp","greedy"]},{"ContestId":1260,"Index":"D","Name":"A Game with Traps","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","dp","greedy","sortings"]},{"ContestId":1260,"Index":"C","Name":"Infinite Fence","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["greedy","math","number theory"]},{"ContestId":1260,"Index":"B","Name":"Obtain Two Zeroes","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","math"]},{"ContestId":1260,"Index":"A","Name":"Heating","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["math"]},{"ContestId":1257,"Index":"G","Name":"Divisor Set","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["divide and conquer","fft","greedy","math","number theory"]},{"ContestId":1257,"Index":"F","Name":"Make Them Similar","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["bitmasks","brute force","hashing","meet-in-the-middle"]},{"ContestId":1257,"Index":"E","Name":"The Contest","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","dp","greedy"]},{"ContestId":1257,"Index":"D","Name":"Yet Another Monster Killing Problem","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","data structures","dp","greedy","sortings","two pointers"]},{"ContestId":1257,"Index":"C","Name":"Dominated Subarray","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","implementation","sortings","strings","two pointers"]},{"ContestId":1257,"Index":"B","Name":"Magic Stick","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["math"]},{"ContestId":1257,"Index":"A","Name":"Two Rival Students","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","math"]},{"ContestId":1256,"Index":"F","Name":"Equalizing Two Strings","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","sortings","strings"]},{"ContestId":1256,"Index":"E","Name":"Yet Another Division Into Teams","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp","greedy","sortings"]},{"ContestId":1256,"Index":"D","Name":"Binary String Minimizing","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy"]},{"ContestId":1256,"Index":"C","Name":"Platforms Jumping","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["greedy"]},{"ContestId":1256,"Index":"B","Name":"Minimize the Permutation","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy"]},{"ContestId":1256,"Index":"A","Name":"Payment Without Change","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["math"]},{"ContestId":1255,"Index":"C","Name":"League of Leesins","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1255,"Index":"B","Name":"Fridge Lockers","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["graphs","implementation"]},{"ContestId":1255,"Index":"A","Name":"Changing Volume","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1254,"Index":"E","Name":"Send Tree to Charlie","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["combinatorics","dfs and similar","dsu","trees"]},{"ContestId":1254,"Index":"D","Name":"Tree Queries","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["data structures","probabilities","trees"]},{"ContestId":1254,"Index":"C","Name":"Point Ordering","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["constructive algorithms","geometry","interactive","math"]},{"ContestId":1254,"Index":"B2","Name":"Send Boxes to Alice (Hard Version)","Type":"PROGRAMMING","Rating":2100,"Points":750,"Tags":["constructive algorithms","greedy","math","number theory","ternary search","two pointers"]},{"ContestId":1254,"Index":"B1","Name":"Send Boxes to Alice (Easy Version)","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["constructive algorithms","greedy","math","number theory","ternary search","two pointers"]},{"ContestId":1254,"Index":"A","Name":"Feeding Chicken","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1253,"Index":"F","Name":"Cheap Robot","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["binary search","dsu","graphs","shortest paths","trees"]},{"ContestId":1253,"Index":"E","Name":"Antenna Coverage","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["data structures","dp","greedy","sortings"]},{"ContestId":1253,"Index":"D","Name":"Harmonious Graph","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","sortings"]},{"ContestId":1253,"Index":"C","Name":"Sweets Eating","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["dp","greedy","math","sortings"]},{"ContestId":1253,"Index":"B","Name":"Silly Mistake","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1253,"Index":"A","Name":"Single Push","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":1252,"Index":"L","Name":"Road Construction","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["flows","graphs"]},{"ContestId":1252,"Index":"K","Name":"Addition Robot","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","math","matrices"]},{"ContestId":1252,"Index":"J","Name":"Tiling Terrace","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["brute force","dp"]},{"ContestId":1252,"Index":"I","Name":"Mission Possible","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":[]},{"ContestId":1252,"Index":"H","Name":"Twin Buildings","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1252,"Index":"G","Name":"Performance Review","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures"]},{"ContestId":1252,"Index":"F","Name":"Regular Forestation","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["hashing","trees"]},{"ContestId":1252,"Index":"E","Name":"Songwriter","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy","two pointers"]},{"ContestId":1252,"Index":"D","Name":"Find String in a Grid","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["data structures","dp","strings","trees"]},{"ContestId":1252,"Index":"C","Name":"Even Path","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1252,"Index":"B","Name":"Cleaning Robots","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","trees"]},{"ContestId":1252,"Index":"A","Name":"Copying Homework","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":[]},{"ContestId":1251,"Index":"F","Name":"Red-White Fence","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["combinatorics","fft"]},{"ContestId":1251,"Index":"E2","Name":"Voting (Hard Version)","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","data structures","greedy"]},{"ContestId":1251,"Index":"E1","Name":"Voting (Easy Version)","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","dp","greedy"]},{"ContestId":1251,"Index":"D","Name":"Salary Changing","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","greedy","sortings"]},{"ContestId":1251,"Index":"C","Name":"Minimize The Integer","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy","two pointers"]},{"ContestId":1251,"Index":"B","Name":"Binary Palindromes","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","strings"]},{"ContestId":1251,"Index":"A","Name":"Broken Keyboard","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","strings","two pointers"]},{"ContestId":1250,"Index":"N","Name":"Wires","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dfs and similar","graphs","greedy"]},{"ContestId":1250,"Index":"M","Name":"SmartGarden","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["constructive algorithms","divide and conquer"]},{"ContestId":1250,"Index":"L","Name":"Divide The Students","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","greedy","math"]},{"ContestId":1250,"Index":"K","Name":"Projectors","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["flows","graphs"]},{"ContestId":1250,"Index":"J","Name":"The Parade","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","greedy"]},{"ContestId":1250,"Index":"I","Name":"Show Must Go On","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["binary search","brute force","greedy","shortest paths"]},{"ContestId":1250,"Index":"H","Name":"Happy Birthday","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["math"]},{"ContestId":1250,"Index":"G","Name":"Discarding Game","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","greedy","two pointers"]},{"ContestId":1250,"Index":"F","Name":"Data Center","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1250,"Index":"E","Name":"The Coronation","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["graphs","implementation"]},{"ContestId":1250,"Index":"D","Name":"Conference Problem","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["dp"]},{"ContestId":1250,"Index":"C","Name":"Trip to Saint Petersburg","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures"]},{"ContestId":1250,"Index":"B","Name":"The Feast and the Bus","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","constructive algorithms","greedy","math"]},{"ContestId":1250,"Index":"A","Name":"Berstagram","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["implementation"]},{"ContestId":1249,"Index":"F","Name":"Maximum Weight Subset","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","trees"]},{"ContestId":1249,"Index":"E","Name":"By Elevator or Stairs?","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dp","shortest paths"]},{"ContestId":1249,"Index":"D2","Name":"Too Many Segments (hard version)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","greedy","sortings"]},{"ContestId":1249,"Index":"D1","Name":"Too Many Segments (easy version)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["greedy"]},{"ContestId":1249,"Index":"C2","Name":"Good Numbers (hard version)","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","greedy","math","meet-in-the-middle"]},{"ContestId":1249,"Index":"C1","Name":"Good Numbers (easy version)","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","greedy","implementation"]},{"ContestId":1249,"Index":"B2","Name":"Books Exchange (hard version)","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dfs and similar","dsu","math"]},{"ContestId":1249,"Index":"B1","Name":"Books Exchange (easy version)","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["dsu","math"]},{"ContestId":1249,"Index":"A","Name":"Yet Another Dividing into Teams","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1248,"Index":"D1","Name":"The World Is Just a Programming Task (Easy Version)","Type":"PROGRAMMING","Rating":2000,"Points":750,"Tags":["brute force","dp","greedy","implementation"]},{"ContestId":1248,"Index":"B","Name":"Grow The Tree","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","math","sortings"]},{"ContestId":1248,"Index":"A","Name":"Integer Points","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["geometry","math"]},{"ContestId":1246,"Index":"F","Name":"Cursor Distance","Type":"PROGRAMMING","Rating":3500,"Points":3250,"Tags":[]},{"ContestId":1245,"Index":"F","Name":"Daniel and Spring Cleaning","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["bitmasks","brute force","combinatorics","dp"]},{"ContestId":1245,"Index":"E","Name":"Hyakugoku and Ladders","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["dp","probabilities","shortest paths"]},{"ContestId":1245,"Index":"D","Name":"Shichikuji and Power Grid","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["dsu","graphs","greedy","shortest paths","trees"]},{"ContestId":1245,"Index":"C","Name":"Constanze's Machine","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["dp"]},{"ContestId":1245,"Index":"B","Name":"Restricted RPS","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1245,"Index":"A","Name":"Good ol' Numbers Coloring","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["math","number theory"]},{"ContestId":1244,"Index":"G","Name":"Running in Pairs","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1244,"Index":"F","Name":"Chips","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1244,"Index":"E","Name":"Minimizing Difference","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["binary search","constructive algorithms","greedy","sortings","ternary search","two pointers"]},{"ContestId":1244,"Index":"D","Name":"Paint the Tree","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["brute force","constructive algorithms","dp","graphs","implementation","trees"]},{"ContestId":1244,"Index":"C","Name":"The Football Season","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["brute force","math","number theory"]},{"ContestId":1244,"Index":"B","Name":"Rooms and Staircases","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":1244,"Index":"A","Name":"Pens and Pencils","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1243,"Index":"B2","Name":"Character Swap (Hard Version)","Type":"PROGRAMMING","Rating":1600,"Points":750,"Tags":["strings"]},{"ContestId":1243,"Index":"B1","Name":"Character Swap (Easy Version)","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["strings"]},{"ContestId":1243,"Index":"A","Name":"Maximum Square","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1242,"Index":"E","Name":"Planar Perimeter","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["constructive algorithms","graphs"]},{"ContestId":1242,"Index":"D","Name":"Number Discovery","Type":"PROGRAMMING","Rating":3400,"Points":2000,"Tags":["math"]},{"ContestId":1242,"Index":"C","Name":"Sum Balance","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["bitmasks","dfs and similar","dp","graphs"]},{"ContestId":1242,"Index":"B","Name":"0-1 MST","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["dfs and similar","dsu","graphs","sortings"]},{"ContestId":1242,"Index":"A","Name":"Tile Painting","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1240,"Index":"F","Name":"Football","Type":"PROGRAMMING","Rating":3100,"Points":2750,"Tags":["graphs"]},{"ContestId":1239,"Index":"F","Name":"Swiper, no swiping!","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["graphs","implementation"]},{"ContestId":1239,"Index":"E","Name":"Turtle","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["dp","implementation"]},{"ContestId":1239,"Index":"D","Name":"Catowice City","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["2-sat","dfs and similar","graph matchings","graphs"]},{"ContestId":1239,"Index":"C","Name":"Queue in the Train","Type":"PROGRAMMING","Rating":2300,"Points":1250,"Tags":["data structures","greedy","implementation"]},{"ContestId":1239,"Index":"B","Name":"The World Is Just a Programming Task (Hard Version)","Type":"PROGRAMMING","Rating":2500,"Points":1250,"Tags":["implementation"]},{"ContestId":1239,"Index":"A","Name":"Ivan the Fool and the Probability Theory","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["combinatorics","dp","math"]},{"ContestId":1238,"Index":"G","Name":"Adilbek and the Watering System","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","greedy","sortings"]},{"ContestId":1238,"Index":"F","Name":"The Maximum Subtree","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":1238,"Index":"E","Name":"Keyboard Purchase","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["bitmasks","dp"]},{"ContestId":1238,"Index":"D","Name":"AB-string","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","combinatorics","dp","strings"]},{"ContestId":1238,"Index":"C","Name":"Standard Free2play","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dp","greedy","math"]},{"ContestId":1238,"Index":"B","Name":"Kill `Em All","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1238,"Index":"A","Name":"Prime Subtraction","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math","number theory"]},{"ContestId":1237,"Index":"H","Name":"Balanced Reversals","Type":"PROGRAMMING","Rating":3300,"Points":4000,"Tags":["constructive algorithms"]},{"ContestId":1237,"Index":"G","Name":"Balanced Distribution","Type":"PROGRAMMING","Rating":3500,"Points":3750,"Tags":["data structures","dp","greedy"]},{"ContestId":1237,"Index":"F","Name":"Balanced Domino Placements","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["combinatorics","dp"]},{"ContestId":1237,"Index":"E","Name":"Balanced Binary Search Trees","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["dp","math"]},{"ContestId":1237,"Index":"D","Name":"Balanced Playlist","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","data structures","implementation"]},{"ContestId":1237,"Index":"C2","Name":"Balanced Removals (Harder)","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["binary search","constructive algorithms","divide and conquer","greedy","implementation","sortings"]},{"ContestId":1237,"Index":"C1","Name":"Balanced Removals (Easier)","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["constructive algorithms","geometry","greedy"]},{"ContestId":1237,"Index":"B","Name":"Balanced Tunnel","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["data structures","sortings","two pointers"]},{"ContestId":1237,"Index":"A","Name":"Balanced Rating Changes","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","math"]},{"ContestId":1236,"Index":"F","Name":"Alice and the Cactus","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["dfs and similar","graphs","math","probabilities"]},{"ContestId":1236,"Index":"E","Name":"Alice and the Unfair Game","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["binary search","data structures","dp","dsu"]},{"ContestId":1236,"Index":"D","Name":"Alice and the Doll","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["brute force","data structures","greedy","implementation"]},{"ContestId":1236,"Index":"C","Name":"Labs","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1236,"Index":"B","Name":"Alice and the List of Presents","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["combinatorics","math"]},{"ContestId":1236,"Index":"A","Name":"Stones","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","math"]},{"ContestId":1234,"Index":"F","Name":"Yet Another Substring Reverse","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["bitmasks","dp"]},{"ContestId":1234,"Index":"E","Name":"Special Permutations","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["math"]},{"ContestId":1234,"Index":"D","Name":"Distinct Characters Queries","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures"]},{"ContestId":1234,"Index":"C","Name":"Pipes","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dp","implementation"]},{"ContestId":1234,"Index":"B2","Name":"Social Network (hard version)","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1234,"Index":"B1","Name":"Social Network (easy version)","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":1234,"Index":"A","Name":"Equalize Prices Again","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1231,"Index":"E","Name":"Middle-Out","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":1231,"Index":"C","Name":"Increasing Matrix","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy"]},{"ContestId":1230,"Index":"B","Name":"Ania and Minimizing","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["greedy","implementation"]},{"ContestId":1230,"Index":"A","Name":"Dawid and Bags of Candies","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":1228,"Index":"F","Name":"One Node is Gone","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["constructive algorithms","implementation","trees"]},{"ContestId":1228,"Index":"E","Name":"Another Filling the Grid","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["combinatorics","dp","math"]},{"ContestId":1228,"Index":"D","Name":"Complete Tripartite","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["brute force","constructive algorithms","graphs","hashing","implementation"]},{"ContestId":1228,"Index":"C","Name":"Primes and Multiplication","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["math","number theory"]},{"ContestId":1228,"Index":"B","Name":"Filling the Grid","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","math"]},{"ContestId":1228,"Index":"A","Name":"Distinct Digits","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":1227,"Index":"G","Name":"Not Same","Type":"PROGRAMMING","Rating":2600,"Points":3250,"Tags":["constructive algorithms"]},{"ContestId":1227,"Index":"F2","Name":"Wrong Answer on test 233 (Hard Version)","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["combinatorics","math"]},{"ContestId":1227,"Index":"F1","Name":"Wrong Answer on test 233 (Easy Version)","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["dp"]},{"ContestId":1227,"Index":"E","Name":"Arson In Berland Forest","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["binary search","graphs","graphs","shortest paths"]},{"ContestId":1227,"Index":"D2","Name":"Optimal Subsequences (Hard Version)","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["data structures","greedy"]},{"ContestId":1227,"Index":"D1","Name":"Optimal Subsequences (Easy Version)","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["data structures","greedy"]},{"ContestId":1227,"Index":"C","Name":"Messy","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["constructive algorithms"]},{"ContestId":1227,"Index":"B","Name":"Box","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":1227,"Index":"A","Name":"Math Problem","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["math"]},{"ContestId":1225,"Index":"G","Name":"To Make 1","Type":"PROGRAMMING","Rating":3100,"Points":3750,"Tags":["bitmasks","constructive algorithms","dp","greedy","number theory"]},{"ContestId":1225,"Index":"F","Name":"Tree Factory","Type":"PROGRAMMING","Rating":2500,"Points":3250,"Tags":["constructive algorithms","greedy","trees"]},{"ContestId":1225,"Index":"E","Name":"Rock Is Push","Type":"PROGRAMMING","Rating":2200,"Points":2750,"Tags":["binary search","dp"]},{"ContestId":1225,"Index":"D","Name":"Power Products","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["hashing","math","number theory"]},{"ContestId":1225,"Index":"C","Name":"p-binary","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["bitmasks","brute force","math"]},{"ContestId":1225,"Index":"B2","Name":"TV Subscriptions (Hard Version)","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["implementation","two pointers"]},{"ContestId":1225,"Index":"B1","Name":"TV Subscriptions (Easy Version)","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["implementation"]},{"ContestId":1225,"Index":"A","Name":"Forgetting Things","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math"]},{"ContestId":1223,"Index":"G","Name":"Wooden Raft","Type":"PROGRAMMING","Rating":3200,"Points":3250,"Tags":["binary search","math","number theory"]},{"ContestId":1223,"Index":"F","Name":"Stack Exterminable Arrays","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["data structures","divide and conquer","dp","hashing"]},{"ContestId":1223,"Index":"E","Name":"Paint the Tree","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["dp","sortings","trees"]},{"ContestId":1223,"Index":"D","Name":"Sequence Sorting","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dp","greedy","two pointers"]},{"ContestId":1223,"Index":"C","Name":"Save the Nature","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","greedy"]},{"ContestId":1223,"Index":"B","Name":"Strings Equalization","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["strings"]},{"ContestId":1223,"Index":"A","Name":"CME","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1221,"Index":"G","Name":"Graph And Numbers","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["bitmasks","brute force","combinatorics","dp","meet-in-the-middle"]},{"ContestId":1221,"Index":"F","Name":"Choose a Square","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","data structures","sortings"]},{"ContestId":1221,"Index":"E","Name":"Game With String","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["games"]},{"ContestId":1221,"Index":"D","Name":"Make The Fence Great Again","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp"]},{"ContestId":1221,"Index":"C","Name":"Perfect Team","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search","math"]},{"ContestId":1221,"Index":"B","Name":"Knights","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1221,"Index":"A","Name":"2048 Game","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1220,"Index":"G","Name":"Geolocation","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["geometry"]},{"ContestId":1220,"Index":"F","Name":"Gardener Alex","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["binary search","data structures"]},{"ContestId":1220,"Index":"E","Name":"Tourism","Type":"PROGRAMMING","Rating":2200,"Points":2750,"Tags":["dfs and similar","dp","dsu","graphs","greedy","trees"]},{"ContestId":1220,"Index":"D","Name":"Alex and Julian","Type":"PROGRAMMING","Rating":1900,"Points":2250,"Tags":["bitmasks","math","number theory"]},{"ContestId":1220,"Index":"C","Name":"Substring Game in the Lesson","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["games","greedy","strings"]},{"ContestId":1220,"Index":"B","Name":"Multiplication Table","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["math","number theory"]},{"ContestId":1220,"Index":"A","Name":"Cards","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","sortings","strings"]},{"ContestId":1219,"Index":"G","Name":"Harvester","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["implementation"]},{"ContestId":1219,"Index":"C","Name":"Periodic integer number","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1218,"Index":"I","Name":"The Light Square","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["2-sat","dfs and similar","greedy"]},{"ContestId":1218,"Index":"H","Name":"Function Composition","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["dfs and similar"]},{"ContestId":1218,"Index":"G","Name":"Alpha planetary system","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["constructive algorithms","graphs","shortest paths"]},{"ContestId":1218,"Index":"F","Name":"Workout plan","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1218,"Index":"E","Name":"Product Tuples","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["divide and conquer","fft"]},{"ContestId":1218,"Index":"D","Name":"Xor Spanning Tree","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["divide and conquer","fft","graphs"]},{"ContestId":1218,"Index":"C","Name":"Jumping Transformers","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["dp"]},{"ContestId":1218,"Index":"B","Name":"Guarding warehouses","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["data structures","geometry"]},{"ContestId":1218,"Index":"A","Name":"BubbleReactor","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dp","graphs"]},{"ContestId":1217,"Index":"F","Name":"Forced Online Queries Problem","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","divide and conquer","dsu","graphs","trees"]},{"ContestId":1217,"Index":"E","Name":"Sum Queries?","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","greedy","implementation","math"]},{"ContestId":1217,"Index":"D","Name":"Coloring Edges","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":1217,"Index":"C","Name":"The Number Of Good Substrings","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","bitmasks","brute force"]},{"ContestId":1217,"Index":"B","Name":"Zmei Gorynich","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy","math"]},{"ContestId":1217,"Index":"A","Name":"Creating a Character","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","math"]},{"ContestId":1216,"Index":"F","Name":"Wi-Fi","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","dp","greedy"]},{"ContestId":1216,"Index":"E2","Name":"Numerical Sequence (hard version)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","math"]},{"ContestId":1216,"Index":"E1","Name":"Numerical Sequence (easy version)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","brute force","math"]},{"ContestId":1216,"Index":"D","Name":"Swords","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["math"]},{"ContestId":1216,"Index":"C","Name":"White Sheet","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["geometry","math"]},{"ContestId":1216,"Index":"B","Name":"Shooting","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":1216,"Index":"A","Name":"Prefixes","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["strings"]},{"ContestId":1215,"Index":"F","Name":"Radio Stations","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["2-sat"]},{"ContestId":1215,"Index":"E","Name":"Marbles","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["bitmasks","dp"]},{"ContestId":1215,"Index":"D","Name":"Ticket Game","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["games","greedy","math"]},{"ContestId":1215,"Index":"C","Name":"Swap Letters","Type":"PROGRAMMING","Rating":1500,"Points":1750,"Tags":["constructive algorithms","greedy"]},{"ContestId":1215,"Index":"B","Name":"The Number of Products","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["combinatorics","dp","implementation"]},{"ContestId":1215,"Index":"A","Name":"Yellow Cards","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":1214,"Index":"H","Name":"Tiles Placement","Type":"PROGRAMMING","Rating":2800,"Points":3500,"Tags":["constructive algorithms","dfs and similar","trees"]},{"ContestId":1214,"Index":"G","Name":"Feeling Good","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["bitmasks","data structures"]},{"ContestId":1214,"Index":"F","Name":"Employment","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["greedy","sortings"]},{"ContestId":1214,"Index":"E","Name":"Petya and Construction Set","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["constructive algorithms","graphs","math","sortings","trees"]},{"ContestId":1214,"Index":"D","Name":"Treasure Island","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dfs and similar","dp","flows","hashing"]},{"ContestId":1214,"Index":"C","Name":"Bad Sequence","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["data structures","greedy"]},{"ContestId":1214,"Index":"B","Name":"Badges","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","math"]},{"ContestId":1214,"Index":"A","Name":"Optimal Currency Exchange","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","math"]},{"ContestId":1213,"Index":"G","Name":"Path Queries","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["divide and conquer","dsu","graphs","sortings","trees"]},{"ContestId":1213,"Index":"F","Name":"Unstable String Sort","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","dfs and similar","dsu","graphs","greedy","implementation","strings"]},{"ContestId":1213,"Index":"E","Name":"Two Small Strings","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","constructive algorithms"]},{"ContestId":1213,"Index":"D2","Name":"Equalizing by Division (hard version)","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","math","sortings"]},{"ContestId":1213,"Index":"D1","Name":"Equalizing by Division (easy version)","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1213,"Index":"C","Name":"Book Reading","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["math"]},{"ContestId":1213,"Index":"B","Name":"Bad Prices","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1213,"Index":"A","Name":"Chips Moving","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1211,"Index":"I","Name":"Unusual Graph","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["*special","graphs"]},{"ContestId":1211,"Index":"H","Name":"Road Repair in Treeland","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["*special","binary search","dp","trees"]},{"ContestId":1211,"Index":"G","Name":"King's Path","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["*special","math","trees"]},{"ContestId":1211,"Index":"F","Name":"kotlinkotlinkotlinkotlin...","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special","graphs","implementation","strings"]},{"ContestId":1211,"Index":"E","Name":"Double Permutation Inc.","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special","binary search","greedy"]},{"ContestId":1211,"Index":"D","Name":"Teams","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special","binary search","greedy","math"]},{"ContestId":1211,"Index":"C","Name":"Ice Cream","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special","greedy","sortings"]},{"ContestId":1211,"Index":"B","Name":"Traveling Around the Golden Ring of Berland","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1211,"Index":"A","Name":"Three Problems","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1210,"Index":"G","Name":"Mateusz and Escape Room","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["dp"]},{"ContestId":1210,"Index":"F2","Name":"Marek and Matching (hard version)","Type":"PROGRAMMING","Rating":3200,"Points":1250,"Tags":["brute force","probabilities"]},{"ContestId":1210,"Index":"F1","Name":"Marek and Matching (easy version)","Type":"PROGRAMMING","Rating":3100,"Points":1500,"Tags":["brute force","probabilities"]},{"ContestId":1210,"Index":"E","Name":"Wojtek and Card Tricks","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["math"]},{"ContestId":1210,"Index":"D","Name":"Konrad and Company Evaluation","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["graphs"]},{"ContestId":1210,"Index":"C","Name":"Kamil and Making a Stream","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["math","number theory","trees"]},{"ContestId":1210,"Index":"B","Name":"Marcin and Training Camp","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":1210,"Index":"A","Name":"Anadi and Domino","Type":"PROGRAMMING","Rating":1700,"Points":250,"Tags":["brute force","graphs"]},{"ContestId":1209,"Index":"H","Name":"Moving Walkways","Type":"PROGRAMMING","Rating":3300,"Points":4000,"Tags":["data structures","greedy","math"]},{"ContestId":1209,"Index":"G2","Name":"Into Blocks (hard version)","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["data structures"]},{"ContestId":1209,"Index":"G1","Name":"Into Blocks (easy version)","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["data structures","dsu","greedy","implementation","two pointers"]},{"ContestId":1209,"Index":"F","Name":"Koala and Notebook","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures","dfs and similar","graphs","shortest paths","strings","trees"]},{"ContestId":1209,"Index":"E2","Name":"Rotate Columns (hard version)","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["bitmasks","dp","greedy","sortings"]},{"ContestId":1209,"Index":"E1","Name":"Rotate Columns (easy version)","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["bitmasks","brute force","dp","greedy","sortings"]},{"ContestId":1209,"Index":"D","Name":"Cow and Snacks","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":1209,"Index":"C","Name":"Paint the Digits","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1209,"Index":"B","Name":"Koala and Lights","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation","math","number theory"]},{"ContestId":1209,"Index":"A","Name":"Paint the Numbers","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":1208,"Index":"H","Name":"Red Blue Tree","Type":"PROGRAMMING","Rating":3500,"Points":3750,"Tags":["data structures","implementation","trees"]},{"ContestId":1208,"Index":"G","Name":"Polygons","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["greedy","math","number theory"]},{"ContestId":1208,"Index":"F","Name":"Bits And Pieces","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["bitmasks","dfs and similar","dp","greedy"]},{"ContestId":1208,"Index":"E","Name":"Let Them Slide","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["data structures","implementation"]},{"ContestId":1208,"Index":"D","Name":"Restore Permutation","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","data structures","greedy","implementation"]},{"ContestId":1208,"Index":"C","Name":"Magic Grid","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":1208,"Index":"B","Name":"Uniqueness","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","brute force","implementation","two pointers"]},{"ContestId":1208,"Index":"A","Name":"XORinacci","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math"]},{"ContestId":1207,"Index":"G","Name":"Indie Album","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","dfs and similar","hashing","string suffix structures","strings","trees"]},{"ContestId":1207,"Index":"F","Name":"Remainder Problem","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","data structures","implementation"]},{"ContestId":1207,"Index":"E","Name":"XOR Guessing","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["bitmasks","interactive","math"]},{"ContestId":1207,"Index":"D","Name":"Number Of Permutations","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["combinatorics"]},{"ContestId":1207,"Index":"C","Name":"Gas Pipeline","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1207,"Index":"B","Name":"Square Filling","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1207,"Index":"A","Name":"There Are Two Types Of Burgers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":1206,"Index":"B","Name":"Make Product Equal One","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["dp","implementation"]},{"ContestId":1206,"Index":"A","Name":"Choose Two Numbers","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math","sortings"]},{"ContestId":1205,"Index":"F","Name":"Beauty of a Permutation","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["constructive algorithms","math"]},{"ContestId":1205,"Index":"E","Name":"Expected Value Again","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["combinatorics","strings"]},{"ContestId":1205,"Index":"D","Name":"Almost All","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["constructive algorithms","trees"]},{"ContestId":1205,"Index":"C","Name":"Palindromic Paths","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["implementation","interactive"]},{"ContestId":1205,"Index":"B","Name":"Shortest Cycle","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["bitmasks","brute force","graphs","shortest paths"]},{"ContestId":1205,"Index":"A","Name":"Almost Equal","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1204,"Index":"E","Name":"Natasha, Sasha and the Prefix Sums","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":1204,"Index":"D2","Name":"Kirk and a Binary String (hard version)","Type":"PROGRAMMING","Rating":2100,"Points":750,"Tags":["data structures","greedy","math","strings"]},{"ContestId":1204,"Index":"D1","Name":"Kirk and a Binary String (easy version)","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["brute force","greedy","strings"]},{"ContestId":1204,"Index":"C","Name":"Anna, Svyatoslav and Maps","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["dp","graphs","greedy","shortest paths"]},{"ContestId":1204,"Index":"B","Name":"Mislove Has Lost an Array","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["greedy","math"]},{"ContestId":1204,"Index":"A","Name":"BowWow and the Timetable","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["math"]},{"ContestId":1203,"Index":"F2","Name":"Complete the Projects (hard version)","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1203,"Index":"F1","Name":"Complete the Projects (easy version)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["greedy"]},{"ContestId":1203,"Index":"E","Name":"Boxers","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1203,"Index":"D2","Name":"Remove the Substring (hard version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","greedy","implementation","two pointers"]},{"ContestId":1203,"Index":"D1","Name":"Remove the Substring (easy version)","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1203,"Index":"C","Name":"Common Divisors","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation","math"]},{"ContestId":1203,"Index":"B","Name":"Equal Rectangles","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","math"]},{"ContestId":1203,"Index":"A","Name":"Circle of Students","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":1202,"Index":"F","Name":"You Are Given Some Letters...","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["binary search","implementation","math"]},{"ContestId":1202,"Index":"E","Name":"You Are Given Some Strings...","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","string suffix structures","strings"]},{"ContestId":1202,"Index":"D","Name":"Print a 1337-string...","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["combinatorics","constructive algorithms","math","strings"]},{"ContestId":1202,"Index":"C","Name":"You Are Given a WASD-string...","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","data structures","dp","greedy","implementation","math","strings"]},{"ContestId":1202,"Index":"B","Name":"You Are Given a Decimal String...","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","dp","shortest paths"]},{"ContestId":1202,"Index":"A","Name":"You Are Given Two Binary Strings...","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["bitmasks","greedy"]},{"ContestId":1201,"Index":"E2","Name":"Knightmare (hard)","Type":"PROGRAMMING","Rating":3000,"Points":1000,"Tags":["graphs","interactive","shortest paths"]},{"ContestId":1201,"Index":"E1","Name":"Knightmare (easy)","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["graphs","interactive","shortest paths"]},{"ContestId":1201,"Index":"D","Name":"Treasure Hunting","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","dp","greedy","implementation"]},{"ContestId":1201,"Index":"C","Name":"Maximum Median","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["binary search","greedy","math","sortings"]},{"ContestId":1201,"Index":"B","Name":"Zero Array","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","math"]},{"ContestId":1201,"Index":"A","Name":"Important Exam","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1200,"Index":"F","Name":"Graph Traveler","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["brute force","data structures","dfs and similar","dp","graphs","implementation","math","number theory"]},{"ContestId":1200,"Index":"E","Name":"Compress Words","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["brute force","hashing","implementation","string suffix structures","strings"]},{"ContestId":1200,"Index":"D","Name":"White Lines","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["brute force","data structures","dp","implementation","two pointers"]},{"ContestId":1200,"Index":"C","Name":"Round Corridor","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["math","number theory"]},{"ContestId":1200,"Index":"B","Name":"Block Adventure","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["dp","greedy"]},{"ContestId":1200,"Index":"A","Name":"Hotelier","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","data structures","implementation"]},{"ContestId":1199,"Index":"B","Name":"Water Lily","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["geometry","math"]},{"ContestId":1199,"Index":"A","Name":"City Day","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":1198,"Index":"F","Name":"GCD Groups 2","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["greedy","number theory","probabilities"]},{"ContestId":1198,"Index":"E","Name":"Rectangle Painting 2","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["flows","graph matchings","graphs"]},{"ContestId":1198,"Index":"D","Name":"Rectangle Painting 1","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["dp"]},{"ContestId":1198,"Index":"C","Name":"Matching vs  Independent Set","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["constructive algorithms","graphs","greedy","sortings"]},{"ContestId":1198,"Index":"B","Name":"Welfare State","Type":"PROGRAMMING","Rating":1600,"Points":750,"Tags":["binary search","brute force","data structures","sortings"]},{"ContestId":1198,"Index":"A","Name":"MP3","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["sortings","two pointers"]},{"ContestId":1197,"Index":"F","Name":"Coloring Game","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["dp","games","matrices"]},{"ContestId":1197,"Index":"E","Name":"Culture Code","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","combinatorics","data structures","dp","shortest paths","sortings"]},{"ContestId":1197,"Index":"D","Name":"Yet Another Subarray Problem","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dp","greedy","math"]},{"ContestId":1197,"Index":"C","Name":"Array Splitting","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1197,"Index":"B","Name":"Pillars","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1197,"Index":"A","Name":"DIY Wooden Ladder","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","math","sortings"]},{"ContestId":1196,"Index":"F","Name":"K-th Path","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","constructive algorithms","shortest paths","sortings"]},{"ContestId":1196,"Index":"E","Name":"Connected Component on a Chessboard","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","implementation"]},{"ContestId":1196,"Index":"D2","Name":"RGB Substring (hard version)","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","dp","implementation","two pointers"]},{"ContestId":1196,"Index":"D1","Name":"RGB Substring (easy version)","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["implementation"]},{"ContestId":1196,"Index":"C","Name":"Robot Breakout","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["implementation"]},{"ContestId":1196,"Index":"B","Name":"Odd Sum Segments","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":1196,"Index":"A","Name":"Three Piles of Candies","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":1195,"Index":"F","Name":"Geometers Anonymous Club","Type":"PROGRAMMING","Rating":2500,"Points":3500,"Tags":["data structures","geometry","math","sortings"]},{"ContestId":1195,"Index":"E","Name":"OpenStreetMap","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["data structures","two pointers"]},{"ContestId":1195,"Index":"D2","Name":"Submarine in the Rybinsk Sea (hard edition)","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["combinatorics","math","number theory"]},{"ContestId":1195,"Index":"D1","Name":"Submarine in the Rybinsk Sea (easy edition)","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["combinatorics","math","number theory"]},{"ContestId":1195,"Index":"C","Name":"Basketball Exercise","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["dp"]},{"ContestId":1195,"Index":"B","Name":"Sport Mafia","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["binary search","brute force","math"]},{"ContestId":1195,"Index":"A","Name":"Drinks Choosing","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","math"]},{"ContestId":1194,"Index":"G","Name":"Another Meme Problem","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["dp"]},{"ContestId":1194,"Index":"F","Name":"Crossword Expert","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["combinatorics","dp","number theory","probabilities","two pointers"]},{"ContestId":1194,"Index":"E","Name":"Count The Rectangles","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["bitmasks","brute force","data structures","geometry","sortings"]},{"ContestId":1194,"Index":"D","Name":"1-2-K Game","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["games","math"]},{"ContestId":1194,"Index":"C","Name":"From S To T","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1194,"Index":"B","Name":"Yet Another Crosses Problem","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation"]},{"ContestId":1194,"Index":"A","Name":"Remove a Progression","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1193,"Index":"C","Name":"Scissors and Tape","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","constructive algorithms","geometry"]},{"ContestId":1193,"Index":"B","Name":"Magic Tree","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","data structures","dp","trees"]},{"ContestId":1193,"Index":"A","Name":"Amusement Park","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","dp","math"]},{"ContestId":1192,"Index":"C","Name":"Cubeword","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","brute force","dp","meet-in-the-middle"]},{"ContestId":1192,"Index":"B","Name":"Dynamic Diameter","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","data structures","dfs and similar","divide and conquer","trees"]},{"ContestId":1192,"Index":"A","Name":"Building Skyscrapers","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1191,"Index":"B","Name":"Tokitsukaze and Mahjong","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":1191,"Index":"A","Name":"Tokitsukaze and Enhancement","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":1190,"Index":"F","Name":"Tokitsukaze and Powers","Type":"PROGRAMMING","Rating":3400,"Points":2750,"Tags":["number theory","probabilities"]},{"ContestId":1190,"Index":"E","Name":"Tokitsukaze and Explosion","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["binary search","greedy"]},{"ContestId":1190,"Index":"D","Name":"Tokitsukaze and Strange Rectangle","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["data structures","divide and conquer","sortings","two pointers"]},{"ContestId":1190,"Index":"C","Name":"Tokitsukaze and Duel","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["brute force","games","greedy"]},{"ContestId":1190,"Index":"B","Name":"Tokitsukaze, CSL and Stone Game","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["games"]},{"ContestId":1190,"Index":"A","Name":"Tokitsukaze and Discard Items","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["implementation","two pointers"]},{"ContestId":1189,"Index":"C","Name":"Candies!","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["data structures","dp","implementation","math"]},{"ContestId":1189,"Index":"B","Name":"Number Circle","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","math","sortings"]},{"ContestId":1189,"Index":"A","Name":"Keanu Reeves","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["strings"]},{"ContestId":1188,"Index":"E","Name":"Problem from Red Panda","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["combinatorics"]},{"ContestId":1188,"Index":"D","Name":"Make Equal","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["dp"]},{"ContestId":1188,"Index":"C","Name":"Array Beauty","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["dp"]},{"ContestId":1188,"Index":"B","Name":"Count Pairs","Type":"PROGRAMMING","Rating":2300,"Points":1250,"Tags":["math","matrices","number theory","two pointers"]},{"ContestId":1188,"Index":"A2","Name":"Add on a Tree: Revolution","Type":"PROGRAMMING","Rating":2500,"Points":750,"Tags":["constructive algorithms","dfs and similar","implementation","trees"]},{"ContestId":1188,"Index":"A1","Name":"Add on a Tree","Type":"PROGRAMMING","Rating":1600,"Points":250,"Tags":["trees"]},{"ContestId":1187,"Index":"G","Name":"Gang Up","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["flows","graphs"]},{"ContestId":1187,"Index":"F","Name":"Expected Square Beauty","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dp","math","probabilities"]},{"ContestId":1187,"Index":"E","Name":"Tree Painting","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dfs and similar","dp","trees"]},{"ContestId":1187,"Index":"D","Name":"Subarray Sorting","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","sortings"]},{"ContestId":1187,"Index":"C","Name":"Vasya And Array","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1187,"Index":"B","Name":"Letters Shop","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","implementation","strings"]},{"ContestId":1187,"Index":"A","Name":"Stickers and Toys","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1186,"Index":"F","Name":"Vus the Cossack and a Graph","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["dfs and similar","graphs","greedy","implementation"]},{"ContestId":1186,"Index":"E","Name":"Vus the Cossack and a Field","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["divide and conquer","implementation","math"]},{"ContestId":1186,"Index":"D","Name":"Vus the Cossack and Numbers","Type":"PROGRAMMING","Rating":1500,"Points":1750,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1186,"Index":"C","Name":"Vus the Cossack and Strings","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["implementation","math"]},{"ContestId":1186,"Index":"A","Name":"Vus the Cossack and a Contest","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1185,"Index":"G2","Name":"Playlist for Polycarp (hard version)","Type":"PROGRAMMING","Rating":2600,"Points":750,"Tags":["combinatorics","dp"]},{"ContestId":1185,"Index":"G1","Name":"Playlist for Polycarp (easy version)","Type":"PROGRAMMING","Rating":2100,"Points":2750,"Tags":["bitmasks","combinatorics","dp"]},{"ContestId":1185,"Index":"F","Name":"Two Pizzas","Type":"PROGRAMMING","Rating":2100,"Points":2750,"Tags":["bitmasks","brute force"]},{"ContestId":1185,"Index":"E","Name":"Polycarp and Snakes","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["brute force","implementation"]},{"ContestId":1185,"Index":"D","Name":"Extra Element","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["implementation","math"]},{"ContestId":1185,"Index":"C2","Name":"Exam in BerSU (hard version)","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["brute force","data structures","greedy","math"]},{"ContestId":1185,"Index":"C1","Name":"Exam in BerSU (easy version)","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":1185,"Index":"B","Name":"Email from Polycarp","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":1185,"Index":"A","Name":"Ropewalkers","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1184,"Index":"E3","Name":"Daleks' Invasion (hard)","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","dsu","graphs","trees"]},{"ContestId":1184,"Index":"E2","Name":"Daleks' Invasion (medium)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dfs and similar","graphs","shortest paths","trees"]},{"ContestId":1184,"Index":"E1","Name":"Daleks' Invasion (easy)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["graphs","trees"]},{"ContestId":1184,"Index":"D2","Name":"Parallel Universes (Hard)","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["math","matrices"]},{"ContestId":1184,"Index":"D1","Name":"Parallel Universes (Easy)","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":1184,"Index":"C3","Name":"Heidi and the Turing Test (Hard)","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":1184,"Index":"C2","Name":"Heidi and the Turing Test (Medium)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures"]},{"ContestId":1184,"Index":"C1","Name":"Heidi and the Turing Test (Easy)","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":1184,"Index":"B3","Name":"The Doctor Meets Vader (Hard)","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["flows","shortest paths"]},{"ContestId":1184,"Index":"B2","Name":"The Doctor Meets Vader (Medium)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["flows","graph matchings","graphs","shortest paths","sortings"]},{"ContestId":1184,"Index":"B1","Name":"The Doctor Meets Vader (Easy)","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","sortings"]},{"ContestId":1184,"Index":"A3","Name":"Heidi Learns Hashing (Hard)","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["fft","math","number theory"]},{"ContestId":1184,"Index":"A2","Name":"Heidi Learns Hashing (Medium)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","number theory"]},{"ContestId":1184,"Index":"A1","Name":"Heidi Learns Hashing (Easy)","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":1183,"Index":"H","Name":"Subsequences (hard version)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dp","strings"]},{"ContestId":1183,"Index":"G","Name":"Candy Box (hard version)","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":1183,"Index":"F","Name":"Topforces Strikes Back","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","math","sortings"]},{"ContestId":1183,"Index":"E","Name":"Subsequences (easy version)","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp","graphs","implementation","shortest paths"]},{"ContestId":1183,"Index":"D","Name":"Candy Box (easy version)","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1183,"Index":"C","Name":"Computer Game","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","math"]},{"ContestId":1183,"Index":"B","Name":"Equalize Prices","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":1183,"Index":"A","Name":"Nearest Interesting Number","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1182,"Index":"F","Name":"Maximum Sine","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["binary search","data structures","number theory"]},{"ContestId":1182,"Index":"E","Name":"Product Oriented Recurrence","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["dp","math","matrices","number theory"]},{"ContestId":1182,"Index":"D","Name":"Complete Mirror","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms","dfs and similar","dp","hashing","implementation","trees"]},{"ContestId":1182,"Index":"C","Name":"Beautiful Lyrics","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["data structures","greedy","strings"]},{"ContestId":1182,"Index":"B","Name":"Plus from Picture","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["dfs and similar","implementation","strings"]},{"ContestId":1182,"Index":"A","Name":"Filling Shapes","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["dp","math"]},{"ContestId":1181,"Index":"E2","Name":"A Story of One Country (Hard)","Type":"PROGRAMMING","Rating":3000,"Points":750,"Tags":["brute force","greedy","sortings"]},{"ContestId":1181,"Index":"E1","Name":"A Story of One Country (Easy)","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["brute force","divide and conquer","sortings"]},{"ContestId":1181,"Index":"D","Name":"Irrigation","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["binary search","data structures","implementation","sortings","trees","two pointers"]},{"ContestId":1181,"Index":"C","Name":"Flag","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","combinatorics","dp","implementation"]},{"ContestId":1181,"Index":"B","Name":"Split a Number","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","implementation","strings"]},{"ContestId":1181,"Index":"A","Name":"Chunga-Changa","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","math"]},{"ContestId":1180,"Index":"B","Name":"Nick and Array","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1180,"Index":"A","Name":"Alex and a Rhombus","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["dp","implementation","math"]},{"ContestId":1179,"Index":"E","Name":"Alesya and Discrete Math","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["divide and conquer","interactive"]},{"ContestId":1179,"Index":"D","Name":"Fedor Runs for President","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["data structures","dp","trees"]},{"ContestId":1179,"Index":"C","Name":"Serge and Dining Room","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["binary search","data structures","graph matchings","greedy","implementation","math","trees"]},{"ContestId":1179,"Index":"B","Name":"Tolik and His Uncle","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":1179,"Index":"A","Name":"Valeriy and Deque","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["data structures","implementation"]},{"ContestId":1178,"Index":"H","Name":"Stock Exchange","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["binary search","flows","graphs"]},{"ContestId":1178,"Index":"G","Name":"The Awesomest Vertex","Type":"PROGRAMMING","Rating":3000,"Points":3250,"Tags":["data structures","dfs and similar"]},{"ContestId":1178,"Index":"F2","Name":"Long Colorful Strip","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["dp"]},{"ContestId":1178,"Index":"F1","Name":"Short Colorful Strip","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["combinatorics","dfs and similar","dp"]},{"ContestId":1178,"Index":"E","Name":"Archaeology","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["brute force","constructive algorithms","greedy","strings"]},{"ContestId":1178,"Index":"D","Name":"Prime Graph","Type":"PROGRAMMING","Rating":1500,"Points":1750,"Tags":["constructive algorithms","greedy","math","number theory"]},{"ContestId":1178,"Index":"C","Name":"Tiles","Type":"PROGRAMMING","Rating":1300,"Points":1250,"Tags":["combinatorics","greedy","math"]},{"ContestId":1178,"Index":"B","Name":"WOW Factor","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["dp","strings"]},{"ContestId":1178,"Index":"A","Name":"Prime Minister","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1177,"Index":"B","Name":"Digits Sequence (Hard Edition)","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["binary search","divide and conquer","implementation"]},{"ContestId":1177,"Index":"A","Name":"Digits Sequence (Easy Edition)","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":1176,"Index":"F","Name":"Destroy it!","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","implementation","sortings"]},{"ContestId":1176,"Index":"E","Name":"Cover it!","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","dsu","graphs","shortest paths","trees"]},{"ContestId":1176,"Index":"D","Name":"Recover it!","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dfs and similar","graphs","greedy","number theory","sortings"]},{"ContestId":1176,"Index":"C","Name":"Lose it!","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dp","greedy","implementation"]},{"ContestId":1176,"Index":"B","Name":"Merge it!","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math"]},{"ContestId":1176,"Index":"A","Name":"Divide it!","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","greedy","implementation"]},{"ContestId":1175,"Index":"G","Name":"Yet Another Partiton Problem","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["data structures","divide and conquer","dp","geometry","two pointers"]},{"ContestId":1175,"Index":"F","Name":"The Number of Subpermutations","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["brute force","data structures","divide and conquer","hashing","math"]},{"ContestId":1175,"Index":"E","Name":"Minimal Segment Cover","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","dfs and similar","divide and conquer","dp","greedy","implementation","trees"]},{"ContestId":1175,"Index":"D","Name":"Array Splitting","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1175,"Index":"C","Name":"Electrification","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","brute force","greedy"]},{"ContestId":1175,"Index":"B","Name":"Catch Overflow!","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","expression parsing","implementation"]},{"ContestId":1175,"Index":"A","Name":"From Hero to Zero","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation","math"]},{"ContestId":1174,"Index":"F","Name":"Ehab and the Big Finale","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["constructive algorithms","divide and conquer","graphs","implementation","interactive","trees"]},{"ContestId":1174,"Index":"E","Name":"Ehab and the Expected GCD Problem","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":1174,"Index":"D","Name":"Ehab and the Expected XOR Problem","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":1174,"Index":"C","Name":"Ehab and a Special Coloring Problem","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["constructive algorithms","number theory"]},{"ContestId":1174,"Index":"B","Name":"Ehab Is an Odd Person","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["sortings"]},{"ContestId":1174,"Index":"A","Name":"Ehab Fails to Be Thanos","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":1173,"Index":"B","Name":"Nauuo and Chess","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","greedy"]},{"ContestId":1173,"Index":"A","Name":"Nauuo and Votes","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1172,"Index":"F","Name":"Nauuo and Bug","Type":"PROGRAMMING","Rating":3300,"Points":2750,"Tags":["data structures"]},{"ContestId":1172,"Index":"E","Name":"Nauuo and ODT","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["data structures"]},{"ContestId":1172,"Index":"D","Name":"Nauuo and Portals","Type":"PROGRAMMING","Rating":2900,"Points":1750,"Tags":["constructive algorithms"]},{"ContestId":1172,"Index":"C2","Name":"Nauuo and Pictures (hard version)","Type":"PROGRAMMING","Rating":2600,"Points":750,"Tags":["dp","probabilities"]},{"ContestId":1172,"Index":"C1","Name":"Nauuo and Pictures (easy version)","Type":"PROGRAMMING","Rating":2300,"Points":750,"Tags":["dp","probabilities"]},{"ContestId":1172,"Index":"B","Name":"Nauuo and Circle","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["combinatorics","dfs and similar","dp","trees"]},{"ContestId":1172,"Index":"A","Name":"Nauuo and Cards","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1170,"Index":"I","Name":"Good Subsets","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","dp"]},{"ContestId":1170,"Index":"H","Name":"Longest Saw","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","constructive algorithms"]},{"ContestId":1170,"Index":"G","Name":"Graph Decomposition","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","graphs"]},{"ContestId":1170,"Index":"F","Name":"Wheels","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","binary search","greedy"]},{"ContestId":1170,"Index":"E","Name":"Sliding Doors","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","binary search"]},{"ContestId":1170,"Index":"D","Name":"Decoding of Integer Sequences","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","data structures","implementation"]},{"ContestId":1170,"Index":"C","Name":"Minus and Minus Give Plus","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation","strings"]},{"ContestId":1170,"Index":"B","Name":"Bad Days","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","implementation"]},{"ContestId":1170,"Index":"A","Name":"Three Integers Again","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special","math"]},{"ContestId":1169,"Index":"B","Name":"Pairs","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["graphs","implementation"]},{"ContestId":1169,"Index":"A","Name":"Circle Metro","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":1168,"Index":"E","Name":"Xor Permutations","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["constructive algorithms","math"]},{"ContestId":1168,"Index":"D","Name":"Anagram Paths","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["dp","implementation","trees"]},{"ContestId":1168,"Index":"C","Name":"And Reachability","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["bitmasks","dp"]},{"ContestId":1168,"Index":"B","Name":"Good Triple","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["brute force","two pointers"]},{"ContestId":1168,"Index":"A","Name":"Increasing by Modulo","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["binary search","greedy"]},{"ContestId":1167,"Index":"G","Name":"Low Budget Inception","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["brute force","geometry"]},{"ContestId":1167,"Index":"F","Name":"Scalar Queries","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["combinatorics","data structures","math","sortings"]},{"ContestId":1167,"Index":"E","Name":"Range Deleting","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","combinatorics","data structures","two pointers"]},{"ContestId":1167,"Index":"D","Name":"Bicolored RBS","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1167,"Index":"C","Name":"News Distribution","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":1167,"Index":"B","Name":"Lost Numbers","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","divide and conquer","interactive","math"]},{"ContestId":1167,"Index":"A","Name":"Telephone Number","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","greedy","strings"]},{"ContestId":1166,"Index":"F","Name":"Vicky's Delivery Service","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["data structures","dsu","graphs","hashing"]},{"ContestId":1166,"Index":"E","Name":"The LCMs Must be Large","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["bitmasks","brute force","constructive algorithms","math","number theory"]},{"ContestId":1166,"Index":"D","Name":"Cute Sequences","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["binary search","brute force","greedy","math"]},{"ContestId":1166,"Index":"C","Name":"A Tale of Two Lands","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["binary search","sortings","two pointers"]},{"ContestId":1166,"Index":"B","Name":"All the Vowels Please","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1166,"Index":"A","Name":"Silent Classroom","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["combinatorics","greedy"]},{"ContestId":1165,"Index":"F2","Name":"Microtransactions (hard version)","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","greedy","implementation"]},{"ContestId":1165,"Index":"F1","Name":"Microtransactions (easy version)","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","greedy"]},{"ContestId":1165,"Index":"E","Name":"Two Arrays and Sum of Functions","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy","math","sortings"]},{"ContestId":1165,"Index":"D","Name":"Almost All Divisors","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["math","number theory"]},{"ContestId":1165,"Index":"C","Name":"Good String","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy"]},{"ContestId":1165,"Index":"B","Name":"Polycarp Training","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["data structures","greedy","sortings"]},{"ContestId":1165,"Index":"A","Name":"Remainder","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation","math"]},{"ContestId":1163,"Index":"F","Name":"Indecisive Taxi Fee","Type":"PROGRAMMING","Rating":3000,"Points":3250,"Tags":["data structures","graphs","shortest paths"]},{"ContestId":1163,"Index":"E","Name":"Magical Permutation","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["bitmasks","brute force","constructive algorithms","data structures","graphs","math"]},{"ContestId":1163,"Index":"D","Name":"Mysterious Code","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["dp","strings"]},{"ContestId":1163,"Index":"C2","Name":"Power Transmission (Hard Edition)","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["data structures","geometry","implementation","math"]},{"ContestId":1163,"Index":"C1","Name":"Power Transmission (Easy Edition)","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["brute force","geometry"]},{"ContestId":1163,"Index":"B2","Name":"Cat Party (Hard Edition)","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["data structures","implementation"]},{"ContestId":1163,"Index":"B1","Name":"Cat Party (Easy Edition)","Type":"PROGRAMMING","Rating":1500,"Points":750,"Tags":["data structures","implementation"]},{"ContestId":1163,"Index":"A","Name":"Eating Soup","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","math"]},{"ContestId":1162,"Index":"B","Name":"Double Matrix","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","greedy"]},{"ContestId":1162,"Index":"A","Name":"Zoning Restrictions Again","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1160,"Index":"A2","Name":"Collaboration","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["*special"]},{"ContestId":1159,"Index":"B","Name":"Expansion coefficient of the array","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["implementation","math"]},{"ContestId":1159,"Index":"A","Name":"A pile of stones","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":1158,"Index":"F","Name":"Density of subarrays","Type":"PROGRAMMING","Rating":3500,"Points":2750,"Tags":["dp","math"]},{"ContestId":1158,"Index":"E","Name":"Strange device","Type":"PROGRAMMING","Rating":3400,"Points":2250,"Tags":["binary search","interactive","math","trees"]},{"ContestId":1158,"Index":"D","Name":"Winding polygonal line","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["constructive algorithms","geometry","greedy","math"]},{"ContestId":1158,"Index":"C","Name":"Permutation recovery","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["constructive algorithms","data structures","dfs and similar","graphs","greedy","math","sortings"]},{"ContestId":1158,"Index":"B","Name":"The minimal unique substring","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["constructive algorithms","math","strings"]},{"ContestId":1158,"Index":"A","Name":"The Party and Sweets","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["binary search","constructive algorithms","greedy","implementation","math","sortings","two pointers"]},{"ContestId":1157,"Index":"G","Name":"Inverse of Rows and Columns","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","constructive algorithms"]},{"ContestId":1157,"Index":"F","Name":"Maximum Balanced Circle","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","dp","greedy","two pointers"]},{"ContestId":1157,"Index":"E","Name":"Minimum Array","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","data structures","greedy"]},{"ContestId":1157,"Index":"D","Name":"N Problems During K Days","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1157,"Index":"C2","Name":"Increasing Subsequence (hard version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["greedy"]},{"ContestId":1157,"Index":"C1","Name":"Increasing Subsequence (easy version)","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy"]},{"ContestId":1157,"Index":"B","Name":"Long Number","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy"]},{"ContestId":1157,"Index":"A","Name":"Reachable Numbers","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":1156,"Index":"G","Name":"Optimizer","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["graphs","greedy","hashing","implementation"]},{"ContestId":1156,"Index":"F","Name":"Card Bag","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","math","probabilities"]},{"ContestId":1156,"Index":"E","Name":"Special Segments of Permutation","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","divide and conquer","dsu","two pointers"]},{"ContestId":1156,"Index":"D","Name":"0-1-Tree","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dfs and similar","divide and conquer","dp","dsu","trees"]},{"ContestId":1156,"Index":"C","Name":"Match Points","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","greedy","sortings","ternary search","two pointers"]},{"ContestId":1156,"Index":"B","Name":"Ugly Pairs","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dfs and similar","greedy","implementation","sortings","strings"]},{"ContestId":1156,"Index":"A","Name":"Inscribed Figures","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["geometry"]},{"ContestId":1155,"Index":"F","Name":"Delivery Oligopoly","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["brute force","dp","graphs"]},{"ContestId":1155,"Index":"E","Name":"Guess the Root","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","interactive","math"]},{"ContestId":1155,"Index":"D","Name":"Beautiful Array","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","data structures","divide and conquer","dp","greedy"]},{"ContestId":1155,"Index":"C","Name":"Alarm Clocks Everywhere","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["math","number theory"]},{"ContestId":1155,"Index":"B","Name":"Game with Telephone Numbers","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["games","greedy","implementation"]},{"ContestId":1155,"Index":"A","Name":"Reverse a Substring","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","sortings","strings"]},{"ContestId":1154,"Index":"G","Name":"Minimum Possible LCM","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","greedy","math","number theory"]},{"ContestId":1154,"Index":"F","Name":"Shovels Shop","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","greedy","sortings"]},{"ContestId":1154,"Index":"E","Name":"Two Teams","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","implementation","sortings"]},{"ContestId":1154,"Index":"D","Name":"Walking Robot","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy"]},{"ContestId":1154,"Index":"C","Name":"Gourmet Cat","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["implementation","math"]},{"ContestId":1154,"Index":"B","Name":"Make Them Equal","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["math"]},{"ContestId":1154,"Index":"A","Name":"Restoring Three Numbers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1153,"Index":"F","Name":"Serval and Bonus Problem","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":1153,"Index":"E","Name":"Serval and Snake","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["binary search","brute force","interactive"]},{"ContestId":1153,"Index":"D","Name":"Serval and Rooted Tree","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["binary search","dfs and similar","dp","greedy","trees"]},{"ContestId":1153,"Index":"C","Name":"Serval and Parenthesis Sequence","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["greedy","strings"]},{"ContestId":1153,"Index":"B","Name":"Serval and Toy Bricks","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","greedy"]},{"ContestId":1153,"Index":"A","Name":"Serval and Bus","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","math"]},{"ContestId":1152,"Index":"F2","Name":"Neko Rules the Catniverse (Large Version)","Type":"PROGRAMMING","Rating":3000,"Points":750,"Tags":["bitmasks","dp","matrices"]},{"ContestId":1152,"Index":"F1","Name":"Neko Rules the Catniverse (Small Version)","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["bitmasks","dp","matrices"]},{"ContestId":1152,"Index":"E","Name":"Neko and Flashback","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":1152,"Index":"D","Name":"Neko and Aki's Prank","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["dp","greedy","trees"]},{"ContestId":1152,"Index":"C","Name":"Neko does Maths","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["brute force","math","number theory"]},{"ContestId":1152,"Index":"B","Name":"Neko Performs Cat Furrier Transform","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["bitmasks","constructive algorithms","dfs and similar","math"]},{"ContestId":1152,"Index":"A","Name":"Neko Finds Grapes","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":1151,"Index":"F","Name":"Sonya and Informatics","Type":"PROGRAMMING","Rating":2300,"Points":2750,"Tags":["combinatorics","dp","matrices","probabilities"]},{"ContestId":1151,"Index":"E","Name":"Number of Components","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["combinatorics","data structures","dp","math"]},{"ContestId":1151,"Index":"D","Name":"Stas and the Queue at the Buffet","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["greedy","math","sortings"]},{"ContestId":1151,"Index":"C","Name":"Problem for Nazar","Type":"PROGRAMMING","Rating":1800,"Points":1250,"Tags":["constructive algorithms","math"]},{"ContestId":1151,"Index":"B","Name":"Dima and a Bad XOR","Type":"PROGRAMMING","Rating":1600,"Points":750,"Tags":["bitmasks","brute force","constructive algorithms","dp"]},{"ContestId":1151,"Index":"A","Name":"Maxim and Biology","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","strings"]},{"ContestId":1150,"Index":"B","Name":"Tiling Challenge","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1150,"Index":"A","Name":"Stock Arbitraging","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1149,"Index":"E","Name":"Election Promises","Type":"PROGRAMMING","Rating":3200,"Points":2750,"Tags":["games","graphs"]},{"ContestId":1149,"Index":"D","Name":"Abandoning Roads","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["brute force","dp","graphs","greedy"]},{"ContestId":1149,"Index":"C","Name":"Tree Generator‚Ñ¢","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["data structures","implementation","trees"]},{"ContestId":1149,"Index":"B","Name":"Three Religions","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["dp","implementation","strings"]},{"ContestId":1149,"Index":"A","Name":"Prefix Sum Primes","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["constructive algorithms","greedy","math","number theory"]},{"ContestId":1148,"Index":"H","Name":"Holy Diver ","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["data structures"]},{"ContestId":1148,"Index":"G","Name":"Gold Experience","Type":"PROGRAMMING","Rating":3300,"Points":4000,"Tags":["constructive algorithms","graphs","math","number theory","probabilities"]},{"ContestId":1148,"Index":"F","Name":"Foo Fighters","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":1148,"Index":"E","Name":"Earth Wind and Fire","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["constructive algorithms","greedy","math","sortings","two pointers"]},{"ContestId":1148,"Index":"D","Name":"Dirty Deeds Done Dirt Cheap","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["greedy","sortings"]},{"ContestId":1148,"Index":"C","Name":"Crazy Diamond","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","sortings"]},{"ContestId":1148,"Index":"B","Name":"Born This Way","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["binary search","brute force","two pointers"]},{"ContestId":1148,"Index":"A","Name":"Another One Bites The Dust","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy"]},{"ContestId":1147,"Index":"F","Name":"Zigzag Game","Type":"PROGRAMMING","Rating":3500,"Points":3250,"Tags":["games","interactive"]},{"ContestId":1147,"Index":"E","Name":"Rainbow Coins","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["interactive"]},{"ContestId":1147,"Index":"D","Name":"Palindrome XOR","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["dfs and similar","graphs"]},{"ContestId":1147,"Index":"C","Name":"Thanos Nim","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["games"]},{"ContestId":1147,"Index":"B","Name":"Chladni Figure","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["brute force","strings"]},{"ContestId":1147,"Index":"A","Name":"Hide and Seek","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["graphs"]},{"ContestId":1146,"Index":"H","Name":"Satanic Panic","Type":"PROGRAMMING","Rating":2900,"Points":3750,"Tags":["dp","geometry"]},{"ContestId":1146,"Index":"G","Name":"Zoning Restrictions","Type":"PROGRAMMING","Rating":2700,"Points":3250,"Tags":["dp","flows","graphs"]},{"ContestId":1146,"Index":"F","Name":"Leaf Partition","Type":"PROGRAMMING","Rating":2500,"Points":3250,"Tags":["dp","trees"]},{"ContestId":1146,"Index":"E","Name":"Hot is Cold","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["bitmasks","data structures","divide and conquer","implementation"]},{"ContestId":1146,"Index":"D","Name":"Frog Jumping","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["dfs and similar","math","number theory"]},{"ContestId":1146,"Index":"C","Name":"Tree Diameter","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["bitmasks","graphs","interactive"]},{"ContestId":1146,"Index":"B","Name":"Hate \"A\"","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":1146,"Index":"A","Name":"Love \"A\"","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1145,"Index":"G","Name":"AI Takeover","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["interactive"]},{"ContestId":1145,"Index":"F","Name":"Neat Words","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1145,"Index":"E","Name":"Fourier Doodles","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1145,"Index":"D","Name":"Pigeon d'Or","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["implementation"]},{"ContestId":1145,"Index":"C","Name":"Mystery Circuit","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["bitmasks","brute force"]},{"ContestId":1145,"Index":"B","Name":"Kanban Numbers","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["brute force"]},{"ContestId":1145,"Index":"A","Name":"Thanos Sort","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":["implementation"]},{"ContestId":1144,"Index":"G","Name":"Two Merged Sequences","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1144,"Index":"F","Name":"Graph Without Long Directed Paths","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","graphs"]},{"ContestId":1144,"Index":"E","Name":"Median String","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["bitmasks","math","number theory","strings"]},{"ContestId":1144,"Index":"D","Name":"Equalize Them All","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1144,"Index":"C","Name":"Two Shuffled Sequences","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["constructive algorithms","sortings"]},{"ContestId":1144,"Index":"B","Name":"Parity Alternated Deletions","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":1144,"Index":"A","Name":"Diverse Strings","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1143,"Index":"C","Name":"Queen","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["dfs and similar","trees"]},{"ContestId":1143,"Index":"B","Name":"Nirvana","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","math","number theory"]},{"ContestId":1143,"Index":"A","Name":"The Doors","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1142,"Index":"E","Name":"Pink Floyd","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["graphs","interactive"]},{"ContestId":1142,"Index":"D","Name":"Foreigner","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["dp"]},{"ContestId":1142,"Index":"C","Name":"U2","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["geometry"]},{"ContestId":1142,"Index":"B","Name":"Lynyrd Skynyrd","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["data structures","dfs and similar","dp","math","trees"]},{"ContestId":1142,"Index":"A","Name":"The Beatles","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force","math"]},{"ContestId":1141,"Index":"G","Name":"Privatization of Roads in Treeland","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"ContestId":1141,"Index":"F2","Name":"Same Sum Blocks (Hard)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1141,"Index":"F1","Name":"Same Sum Blocks (Easy)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["greedy"]},{"ContestId":1141,"Index":"E","Name":"Superhero Battle","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["math"]},{"ContestId":1141,"Index":"D","Name":"Colored Boots","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1141,"Index":"C","Name":"Polycarp Restores Permutation","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["math"]},{"ContestId":1141,"Index":"B","Name":"Maximal Continuous Rest","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":1141,"Index":"A","Name":"Game 23","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","math"]},{"ContestId":1140,"Index":"G","Name":"Double Tree","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","divide and conquer","shortest paths","trees"]},{"ContestId":1140,"Index":"F","Name":"Extending Set of Points","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","divide and conquer","dsu"]},{"ContestId":1140,"Index":"E","Name":"Palindrome-less Arrays","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["combinatorics","divide and conquer","dp"]},{"ContestId":1140,"Index":"D","Name":"Minimum Triangulation","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["dp","greedy","math"]},{"ContestId":1140,"Index":"C","Name":"Playlist","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","data structures","sortings"]},{"ContestId":1140,"Index":"B","Name":"Good String","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1140,"Index":"A","Name":"Detective Book","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":1139,"Index":"F","Name":"Dish Shopping","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["data structures","divide and conquer"]},{"ContestId":1139,"Index":"E","Name":"Maximize Mex","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["flows","graph matchings","graphs"]},{"ContestId":1139,"Index":"D","Name":"Steps to One","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["dp","math","number theory","probabilities"]},{"ContestId":1139,"Index":"C","Name":"Edgy Trees","Type":"PROGRAMMING","Rating":1500,"Points":1750,"Tags":["dfs and similar","dsu","graphs","math","trees"]},{"ContestId":1139,"Index":"B","Name":"Chocolates","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1139,"Index":"A","Name":"Even Substrings","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1138,"Index":"B","Name":"Circus","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["brute force","greedy","math","strings"]},{"ContestId":1138,"Index":"A","Name":"Sushi for Two","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["binary search","greedy","implementation"]},{"ContestId":1137,"Index":"F","Name":"Matches Are Not a Child's Play ","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["data structures","trees"]},{"ContestId":1137,"Index":"E","Name":"Train Car Selection","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["data structures","greedy"]},{"ContestId":1137,"Index":"D","Name":"Cooperative Game","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["constructive algorithms","interactive","number theory"]},{"ContestId":1137,"Index":"C","Name":"Museums Tour","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["dp","graphs","implementation"]},{"ContestId":1137,"Index":"B","Name":"Camp Schedule","Type":"PROGRAMMING","Rating":1600,"Points":750,"Tags":["greedy","hashing","strings"]},{"ContestId":1137,"Index":"A","Name":"Skyscrapers","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":1136,"Index":"E","Name":"Nastya Hasn't Written a Legend","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["binary search","data structures"]},{"ContestId":1136,"Index":"D","Name":"Nastya Is Buying Lunch","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["greedy"]},{"ContestId":1136,"Index":"C","Name":"Nastya Is Transposing Matrices","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","sortings"]},{"ContestId":1136,"Index":"B","Name":"Nastya Is Playing Computer Games","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":1136,"Index":"A","Name":"Nastya Is Reading a Book","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1133,"Index":"F2","Name":"Spanning Tree with One Fixed Degree","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy"]},{"ContestId":1133,"Index":"F1","Name":"Spanning Tree with Maximum Degree","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["graphs"]},{"ContestId":1133,"Index":"E","Name":"K Balanced Teams","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","sortings","two pointers"]},{"ContestId":1133,"Index":"D","Name":"Zero Quantity Maximization","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["hashing","math","number theory"]},{"ContestId":1133,"Index":"C","Name":"Balanced Team","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["sortings","two pointers"]},{"ContestId":1133,"Index":"B","Name":"Preparation for International Women's Day","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["math","number theory"]},{"ContestId":1133,"Index":"A","Name":"Middle of the Contest","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":1132,"Index":"G","Name":"Greedy Subsequences","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","dp","trees"]},{"ContestId":1132,"Index":"F","Name":"Clear the String","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp"]},{"ContestId":1132,"Index":"E","Name":"Knapsack","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dfs and similar","dp","greedy"]},{"ContestId":1132,"Index":"D","Name":"Stressful Training","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","greedy"]},{"ContestId":1132,"Index":"C","Name":"Painting the Fence","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force"]},{"ContestId":1132,"Index":"B","Name":"Discounts","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1132,"Index":"A","Name":"Regular Bracket Sequence","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1131,"Index":"G","Name":"Most Dangerous Shark","Type":"PROGRAMMING","Rating":2700,"Points":3500,"Tags":["data structures","dp","two pointers"]},{"ContestId":1131,"Index":"F","Name":"Asya And Kittens","Type":"PROGRAMMING","Rating":1700,"Points":3000,"Tags":["constructive algorithms","dsu"]},{"ContestId":1131,"Index":"E","Name":"String Multiplication","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["dp","greedy","strings"]},{"ContestId":1131,"Index":"D","Name":"Gourmet choice","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dfs and similar","dp","dsu","graphs","greedy"]},{"ContestId":1131,"Index":"C","Name":"Birthday","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["binary search","greedy","sortings"]},{"ContestId":1131,"Index":"B","Name":"Draw!","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1131,"Index":"A","Name":"Sea Battle","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1130,"Index":"C","Name":"Connect","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["brute force","dfs and similar","dsu"]},{"ContestId":1130,"Index":"B","Name":"Two Cakes","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy"]},{"ContestId":1130,"Index":"A","Name":"Be Positive","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1129,"Index":"E","Name":"Legendary Tree","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["binary search","interactive","trees"]},{"ContestId":1129,"Index":"D","Name":"Isolation","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["data structures","dp"]},{"ContestId":1129,"Index":"C","Name":"Morse Code","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["binary search","data structures","dp","hashing","sortings","string suffix structures","strings"]},{"ContestId":1129,"Index":"B","Name":"Wrong Answer","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":1129,"Index":"A2","Name":"Toy Train","Type":"PROGRAMMING","Rating":1800,"Points":250,"Tags":["brute force","greedy"]},{"ContestId":1129,"Index":"A1","Name":"Toy Train (Simplified)","Type":"PROGRAMMING","Rating":1700,"Points":250,"Tags":["brute force","greedy"]},{"ContestId":1121,"Index":"C","Name":"System Testing","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["implementation"]},{"ContestId":1121,"Index":"B","Name":"Mike and Children","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":1121,"Index":"A","Name":"Technogoblet of Fire","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":1120,"Index":"F","Name":"Secret Letters","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["data structures","dp","greedy"]},{"ContestId":1120,"Index":"E","Name":"The very same Munchhausen","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["brute force"]},{"ContestId":1120,"Index":"D","Name":"Power Tree","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dfs and similar","dp","dsu","graphs","greedy","trees"]},{"ContestId":1120,"Index":"C","Name":"Compress String","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dp","strings"]},{"ContestId":1120,"Index":"B","Name":"Once in a casino","Type":"PROGRAMMING","Rating":2700,"Points":1000,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1120,"Index":"A","Name":"Diana and Liana","Type":"PROGRAMMING","Rating":1900,"Points":500,"Tags":["greedy","implementation","two pointers"]},{"ContestId":1119,"Index":"H","Name":"Triple","Type":"PROGRAMMING","Rating":3200,"Points":3750,"Tags":["fft","math"]},{"ContestId":1119,"Index":"G","Name":"Get Ready for the Battle","Type":"PROGRAMMING","Rating":3100,"Points":3500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1119,"Index":"F","Name":"Niyaz and Small Degrees","Type":"PROGRAMMING","Rating":3400,"Points":3250,"Tags":["data structures","dp","trees"]},{"ContestId":1119,"Index":"E","Name":"Pavel and Triangles","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["brute force","dp","fft","greedy","ternary search"]},{"ContestId":1119,"Index":"D","Name":"Frets On Fire","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["binary search","sortings"]},{"ContestId":1119,"Index":"C","Name":"Ramesses and Corner Inversion","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1119,"Index":"B","Name":"Alyona and a Narrow Fridge","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","flows","greedy","sortings"]},{"ContestId":1119,"Index":"A","Name":"Ilya and a Colorful Walk","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1118,"Index":"F2","Name":"Tree Cutting (Hard Version)","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["combinatorics","dfs and similar","dp","trees"]},{"ContestId":1118,"Index":"F1","Name":"Tree Cutting (Easy Version)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dfs and similar","trees"]},{"ContestId":1118,"Index":"E","Name":"Yet Another Ball Problem","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","implementation"]},{"ContestId":1118,"Index":"D2","Name":"Coffee and Coursework (Hard Version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","greedy"]},{"ContestId":1118,"Index":"D1","Name":"Coffee and Coursework (Easy version)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","greedy"]},{"ContestId":1118,"Index":"C","Name":"Palindromic Matrix","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","implementation"]},{"ContestId":1118,"Index":"B","Name":"Tanya and Candies","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation"]},{"ContestId":1118,"Index":"A","Name":"Water Buying","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1117,"Index":"G","Name":"Recursive Queries","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures"]},{"ContestId":1117,"Index":"F","Name":"Crisp String","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["bitmasks","dp"]},{"ContestId":1117,"Index":"E","Name":"Decypher the String","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["bitmasks","chinese remainder theorem","constructive algorithms","interactive","math"]},{"ContestId":1117,"Index":"D","Name":"Magic Gems","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","math","matrices"]},{"ContestId":1117,"Index":"C","Name":"Magic Ship","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search"]},{"ContestId":1117,"Index":"B","Name":"Emotes","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","math","sortings"]},{"ContestId":1117,"Index":"A","Name":"Best Subsegment","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation","math"]},{"ContestId":1116,"Index":"D6","Name":"Hessenberg matrix","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"D5","Name":"Creeper","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"D4","Name":"TIE fighter","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"D3","Name":"X-wing fighter","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"D2","Name":"Pattern of increasing blocks","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"D1","Name":"Block diagonal matrix","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"C3","Name":"``Is the number of ones divisible by 3?'' oracle","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"C2","Name":"``Is the bit string periodic?'' oracle","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"C1","Name":"Alternating bits oracle","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"B2","Name":"Not A, not B or not C?","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"B1","Name":"Distinguish three-qubit states","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"A2","Name":"Generate equal superposition of four basis states","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1116,"Index":"A1","Name":"Generate state |00‚ü© + |01‚ü© + |10‚ü©","Type":"PROGRAMMING","Rating":0,"Points":0,"Tags":[]},{"ContestId":1115,"Index":"U3","Name":"Block unitary","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special"]},{"ContestId":1115,"Index":"U2","Name":"Chessboard unitary","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":1115,"Index":"U1","Name":"Anti-diagonal unitary","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special"]},{"ContestId":1115,"Index":"G3","Name":"Palindrome checker oracle","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":1115,"Index":"G2","Name":"OR oracle","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":1115,"Index":"G1","Name":"AND oracle","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["*special"]},{"ContestId":1114,"Index":"F","Name":"Please, another Queries on Array?","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["bitmasks","data structures","divide and conquer","math","number theory"]},{"ContestId":1114,"Index":"E","Name":"Arithmetic Progression","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["binary search","interactive","number theory","probabilities"]},{"ContestId":1114,"Index":"D","Name":"Flood Fill","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dp"]},{"ContestId":1114,"Index":"C","Name":"Trailing Loves (or L'oeufs?)","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","implementation","math","number theory"]},{"ContestId":1114,"Index":"B","Name":"Yet Another Array Partitioning Task","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":1114,"Index":"A","Name":"Got Any Grapes?","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","implementation"]},{"ContestId":1113,"Index":"B","Name":"Sasha and Magnetic Machines","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","number theory"]},{"ContestId":1113,"Index":"A","Name":"Sasha and His Trip","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["dp","greedy","math"]},{"ContestId":1111,"Index":"E","Name":"Tree","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","dfs and similar","dp","graphs","trees"]},{"ContestId":1111,"Index":"D","Name":"Destroy the Colony","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["combinatorics","dp","math"]},{"ContestId":1111,"Index":"C","Name":"Creative Snap","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","brute force","divide and conquer","math"]},{"ContestId":1111,"Index":"B","Name":"Average Superhero Gang Power ","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["brute force","implementation","math"]},{"ContestId":1111,"Index":"A","Name":"Superhero Transformation","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1110,"Index":"H","Name":"Modest Substrings","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["dp","strings"]},{"ContestId":1110,"Index":"G","Name":"Tree-Tac-Toe ","Type":"PROGRAMMING","Rating":3100,"Points":3500,"Tags":["constructive algorithms","games","trees"]},{"ContestId":1110,"Index":"F","Name":"Nearest Leaf","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["data structures","trees"]},{"ContestId":1110,"Index":"E","Name":"Magic Stones","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["constructive algorithms","math","sortings"]},{"ContestId":1110,"Index":"D","Name":"Jongmah","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dp"]},{"ContestId":1110,"Index":"C","Name":"Meaningless Operations","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":1110,"Index":"B","Name":"Tape","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":1110,"Index":"A","Name":"Parity","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math"]},{"ContestId":1109,"Index":"F","Name":"Sasha and Algorithm of Silence's Sounds","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["data structures","trees"]},{"ContestId":1109,"Index":"E","Name":"Sasha and a Very Easy Test","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["data structures","number theory"]},{"ContestId":1109,"Index":"D","Name":"Sasha and Interesting Fact from Graph Theory","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["brute force","combinatorics","dp","math","trees"]},{"ContestId":1109,"Index":"C","Name":"Sasha and a Patient Friend","Type":"PROGRAMMING","Rating":2800,"Points":1750,"Tags":["binary search","data structures","implementation"]},{"ContestId":1109,"Index":"B","Name":"Sasha and One More Name","Type":"PROGRAMMING","Rating":1800,"Points":1250,"Tags":["constructive algorithms","hashing","strings"]},{"ContestId":1109,"Index":"A","Name":"Sasha and a Bit of Relax","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["dp","implementation"]},{"ContestId":1108,"Index":"F","Name":"MST Unification","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","dsu","graphs","greedy"]},{"ContestId":1108,"Index":"E2","Name":"Array and Segments (Hard version)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1108,"Index":"E1","Name":"Array and Segments (Easy version)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","greedy","implementation"]},{"ContestId":1108,"Index":"D","Name":"Diverse Garland","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":1108,"Index":"C","Name":"Nice Garland","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","greedy","math"]},{"ContestId":1108,"Index":"B","Name":"Divisors of Two Integers","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","greedy","math","number theory"]},{"ContestId":1108,"Index":"A","Name":"Two distinct points","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1107,"Index":"G","Name":"Vasya and Maximum Profit","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","constructive algorithms","data structures","dp","dsu"]},{"ContestId":1107,"Index":"F","Name":"Vasya and Endless Credits","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["dp","flows","graph matchings","graphs","sortings"]},{"ContestId":1107,"Index":"E","Name":"Vasya and Binary String","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dp"]},{"ContestId":1107,"Index":"D","Name":"Compression","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","implementation","math","number theory"]},{"ContestId":1107,"Index":"C","Name":"Brutality","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy","sortings","two pointers"]},{"ContestId":1107,"Index":"B","Name":"Digital root","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["math","number theory"]},{"ContestId":1107,"Index":"A","Name":"Digits Sequence Dividing","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","strings"]},{"ContestId":1106,"Index":"F","Name":"Lunar New Year and a Recursive Sequence","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["math","matrices","number theory"]},{"ContestId":1106,"Index":"E","Name":"Lunar New Year and Red Envelopes","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["data structures","dp"]},{"ContestId":1106,"Index":"D","Name":"Lunar New Year and a Wander","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["data structures","dfs and similar","graphs","greedy","shortest paths"]},{"ContestId":1106,"Index":"C","Name":"Lunar New Year and Number Division","Type":"PROGRAMMING","Rating":900,"Points":1250,"Tags":["greedy","implementation","math","sortings"]},{"ContestId":1106,"Index":"B","Name":"Lunar New Year and Food Ordering","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["data structures","implementation"]},{"ContestId":1106,"Index":"A","Name":"Lunar New Year and Cross Counting","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1105,"Index":"E","Name":"Helping Hiasat ","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["bitmasks","brute force","dp","meet-in-the-middle"]},{"ContestId":1105,"Index":"D","Name":"Kilani and the Game","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dfs and similar","graphs","implementation","shortest paths"]},{"ContestId":1105,"Index":"C","Name":"Ayoub and Lost Array","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["combinatorics","dp","math"]},{"ContestId":1105,"Index":"B","Name":"Zuhair and Strings","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","implementation","strings"]},{"ContestId":1105,"Index":"A","Name":"Salem and Sticks ","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":1104,"Index":"B","Name":"Game with string","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["data structures","implementation","math"]},{"ContestId":1104,"Index":"A","Name":"Splitting into digits","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":1103,"Index":"E","Name":"Radix sum","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["fft","math","number theory"]},{"ContestId":1103,"Index":"D","Name":"Professional layer","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["bitmasks","dp"]},{"ContestId":1103,"Index":"C","Name":"Johnny Solving","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["constructive algorithms","dfs and similar","graphs","math"]},{"ContestId":1103,"Index":"B","Name":"Game with modulo","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["binary search","constructive algorithms","interactive"]},{"ContestId":1103,"Index":"A","Name":"Grid game","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1102,"Index":"F","Name":"Elongated Matrix","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","bitmasks","brute force","dp","graphs"]},{"ContestId":1102,"Index":"E","Name":"Monotonic Renumeration","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["combinatorics","sortings"]},{"ContestId":1102,"Index":"D","Name":"Balanced Ternary String","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","strings"]},{"ContestId":1102,"Index":"C","Name":"Doors Breaking and Repairing","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["games"]},{"ContestId":1102,"Index":"B","Name":"Array K-Coloring","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1102,"Index":"A","Name":"Integer Sequence Dividing","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1101,"Index":"G","Name":"(Zero XOR Subset)-less","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["math","matrices"]},{"ContestId":1101,"Index":"F","Name":"Trucks and Cities","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","dp"]},{"ContestId":1101,"Index":"E","Name":"Polycarp's New Job","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["implementation"]},{"ContestId":1101,"Index":"D","Name":"GCD Counting","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","dfs and similar","dp","number theory","trees"]},{"ContestId":1101,"Index":"C","Name":"Division and Union","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["sortings"]},{"ContestId":1101,"Index":"B","Name":"Accordion","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1101,"Index":"A","Name":"Minimum Integer","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["math"]},{"ContestId":1100,"Index":"F","Name":"Ivan and Burgers","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","divide and conquer","greedy","math"]},{"ContestId":1100,"Index":"E","Name":"Andrew and Taxi","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["binary search","dfs and similar","graphs"]},{"ContestId":1100,"Index":"D","Name":"Dasha and Chess","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["constructive algorithms","games","interactive"]},{"ContestId":1100,"Index":"C","Name":"NN and the Optical Illusion","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["binary search","geometry","math"]},{"ContestId":1100,"Index":"B","Name":"Build a Contest","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["data structures","implementation"]},{"ContestId":1100,"Index":"A","Name":"Roman and Browser","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":1099,"Index":"F","Name":"Cookies","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["binary search","data structures","dfs and similar","dp","games","trees"]},{"ContestId":1099,"Index":"C","Name":"Postcard","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["constructive algorithms","implementation"]},{"ContestId":1099,"Index":"B","Name":"Squares and Segments","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["binary search","constructive algorithms","math"]},{"ContestId":1099,"Index":"A","Name":"Snowball","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1098,"Index":"F","Name":"–ñ-function","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["string suffix structures","strings"]},{"ContestId":1098,"Index":"E","Name":"Fedya the Potter","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["binary search","implementation","math","number theory"]},{"ContestId":1098,"Index":"D","Name":"Eels","Type":"PROGRAMMING","Rating":2800,"Points":1750,"Tags":["data structures"]},{"ContestId":1098,"Index":"C","Name":"Construct a tree","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["binary search","constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"ContestId":1098,"Index":"B","Name":"Nice table","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["brute force","constructive algorithms","greedy","math"]},{"ContestId":1098,"Index":"A","Name":"Sum in the tree","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"ContestId":1097,"Index":"H","Name":"Mateusz and an Infinite Sequence","Type":"PROGRAMMING","Rating":3400,"Points":4000,"Tags":["bitmasks","brute force","dp","strings"]},{"ContestId":1097,"Index":"G","Name":"Vladislav and a Great Legend","Type":"PROGRAMMING","Rating":3000,"Points":3500,"Tags":["combinatorics","dp","trees"]},{"ContestId":1097,"Index":"F","Name":"Alex and a TV Show","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["bitmasks","combinatorics","number theory"]},{"ContestId":1097,"Index":"E","Name":"Egor and an RPG game","Type":"PROGRAMMING","Rating":3400,"Points":2750,"Tags":["constructive algorithms","greedy"]},{"ContestId":1097,"Index":"D","Name":"Makoto and a Blackboard","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dp","math","number theory","probabilities"]},{"ContestId":1097,"Index":"C","Name":"Yuhao and a Parenthesis","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy","implementation"]},{"ContestId":1097,"Index":"B","Name":"Petr and a Combination Lock","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["bitmasks","brute force","dp"]},{"ContestId":1097,"Index":"A","Name":"Gennady and a Card Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":1096,"Index":"G","Name":"Lucky Tickets","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["divide and conquer","dp","fft"]},{"ContestId":1096,"Index":"F","Name":"Inversion Expectation","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","math","probabilities"]},{"ContestId":1096,"Index":"E","Name":"The Top Scorer","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":1096,"Index":"D","Name":"Easy Problem","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp"]},{"ContestId":1096,"Index":"C","Name":"Polygon for the Angle","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","geometry"]},{"ContestId":1096,"Index":"B","Name":"Substring Removal","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["combinatorics","math","strings"]},{"ContestId":1096,"Index":"A","Name":"Find Divisible","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation","math"]},{"ContestId":1095,"Index":"F","Name":"Make It Connected","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dsu","graphs","greedy"]},{"ContestId":1095,"Index":"E","Name":"Almost Regular Bracket Sequence","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["implementation"]},{"ContestId":1095,"Index":"D","Name":"Circular Dance","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":1095,"Index":"C","Name":"Powers Of Two","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["bitmasks","greedy"]},{"ContestId":1095,"Index":"B","Name":"Array Stabilization","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":1095,"Index":"A","Name":"Repeating Cipher","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1093,"Index":"G","Name":"Multidimensional Queries","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["bitmasks","data structures"]},{"ContestId":1093,"Index":"F","Name":"Vasya and Array","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dp"]},{"ContestId":1093,"Index":"E","Name":"Intersection of Permutations","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures"]},{"ContestId":1093,"Index":"D","Name":"Beautiful Graph","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","graphs"]},{"ContestId":1093,"Index":"C","Name":"Mishka and the Last Exam","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy"]},{"ContestId":1093,"Index":"B","Name":"Letters Rearranging","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["constructive algorithms","greedy","sortings","strings"]},{"ContestId":1093,"Index":"A","Name":"Dice Rolling","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1092,"Index":"F","Name":"Tree with Maximum Cost","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar","dp","trees"]},{"ContestId":1092,"Index":"E","Name":"Minimal Diameter Forest","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"ContestId":1092,"Index":"D2","Name":"Great Vova Wall (Version 2)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":1092,"Index":"D1","Name":"Great Vova Wall (Version 1)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy","implementation","math"]},{"ContestId":1092,"Index":"C","Name":"Prefixes and Suffixes","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["strings"]},{"ContestId":1092,"Index":"B","Name":"Teams Forming","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["sortings"]},{"ContestId":1092,"Index":"A","Name":"Uniform String","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1091,"Index":"H","Name":"New Year and the Tricolore Recreation","Type":"PROGRAMMING","Rating":3200,"Points":4000,"Tags":["games"]},{"ContestId":1091,"Index":"G","Name":"New Year and the Factorisation Collaboration","Type":"PROGRAMMING","Rating":3200,"Points":3750,"Tags":["interactive","math","number theory"]},{"ContestId":1091,"Index":"F","Name":"New Year and the Mallard Expedition","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["constructive algorithms","greedy"]},{"ContestId":1091,"Index":"E","Name":"New Year and the Acquaintance Estimation","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["binary search","data structures","graphs","greedy","implementation","math","sortings"]},{"ContestId":1091,"Index":"D","Name":"New Year and the Permutation Concatenation","Type":"PROGRAMMING","Rating":1700,"Points":2250,"Tags":["combinatorics","dp","math"]},{"ContestId":1091,"Index":"C","Name":"New Year and the Sphere Transmission","Type":"PROGRAMMING","Rating":1400,"Points":1750,"Tags":["math","number theory"]},{"ContestId":1091,"Index":"B","Name":"New Year and the Treasure Geolocation","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","constructive algorithms","greedy","implementation"]},{"ContestId":1091,"Index":"A","Name":"New Year and the Christmas Ornament","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":1090,"Index":"M","Name":"The Pleasant Walk","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":1090,"Index":"L","Name":"Berland University","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["greedy","math"]},{"ContestId":1090,"Index":"K","Name":"Right Expansion Of The Mind","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["math"]},{"ContestId":1090,"Index":"J","Name":"Two Prefixes","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["strings"]},{"ContestId":1090,"Index":"I","Name":"Minimal Product","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":[]},{"ContestId":1090,"Index":"H","Name":"Linearization","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["graphs"]},{"ContestId":1090,"Index":"G","Name":"Combostone","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["games","implementation"]},{"ContestId":1090,"Index":"F","Name":"How to Learn You Score","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["constructive algorithms","interactive"]},{"ContestId":1090,"Index":"E","Name":"Horseback Riding","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["flows","graphs"]},{"ContestId":1090,"Index":"D","Name":"Similar Arrays","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1090,"Index":"C","Name":"New Year Presents","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["constructive algorithms","data structures"]},{"ContestId":1090,"Index":"B","Name":"LaTeX Expert","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":[]},{"ContestId":1090,"Index":"A","Name":"Company Merging","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy"]},{"ContestId":1089,"Index":"M","Name":"Minegraphed","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["constructive algorithms","graphs"]},{"ContestId":1089,"Index":"L","Name":"Lazyland","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":[]},{"ContestId":1089,"Index":"K","Name":"King Kog's Reception","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures"]},{"ContestId":1089,"Index":"J","Name":"JS Minification","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1089,"Index":"I","Name":"Interval-Free Permutations","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["combinatorics"]},{"ContestId":1089,"Index":"H","Name":"Harder Satisfiability","Type":"PROGRAMMING","Rating":3400,"Points":0,"Tags":["2-sat","dfs and similar","graphs"]},{"ContestId":1089,"Index":"G","Name":"Guest Student","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["math"]},{"ContestId":1089,"Index":"F","Name":"Fractions","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["math"]},{"ContestId":1089,"Index":"E","Name":"Easy Chess","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1089,"Index":"D","Name":"Distance Sum","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["graphs"]},{"ContestId":1089,"Index":"C","Name":"Cactus Search","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["interactive"]},{"ContestId":1089,"Index":"B","Name":"Bimatching","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["graphs"]},{"ContestId":1089,"Index":"A","Name":"Alice the Fan","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp"]},{"ContestId":1088,"Index":"F","Name":"Ehab and a weird weight formula","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["data structures","trees"]},{"ContestId":1088,"Index":"E","Name":"Ehab and a component choosing problem","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["dp","greedy","math","trees"]},{"ContestId":1088,"Index":"D","Name":"Ehab and another another xor problem","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["bitmasks","constructive algorithms","implementation","interactive"]},{"ContestId":1088,"Index":"C","Name":"Ehab and a 2-operation task","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1088,"Index":"B","Name":"Ehab and subtraction","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":1088,"Index":"A","Name":"Ehab and another construction problem","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","constructive algorithms"]},{"ContestId":1086,"Index":"F","Name":"Forest Fires","Type":"PROGRAMMING","Rating":3500,"Points":3000,"Tags":["math"]},{"ContestId":1085,"Index":"G","Name":"Beautiful Matrix","Type":"PROGRAMMING","Rating":2900,"Points":3250,"Tags":["combinatorics","data structures","dp"]},{"ContestId":1085,"Index":"F","Name":"Rock-Paper-Scissors Champion","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":[]},{"ContestId":1085,"Index":"E","Name":"Vasya and Templates","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["greedy","implementation","strings"]},{"ContestId":1085,"Index":"D","Name":"Minimum Diameter Tree","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["constructive algorithms","implementation","trees"]},{"ContestId":1085,"Index":"C","Name":"Connect Three","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["implementation","math"]},{"ContestId":1085,"Index":"B","Name":"Div Times Mod","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["math"]},{"ContestId":1085,"Index":"A","Name":"Right-Left Cipher","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1084,"Index":"C","Name":"The Fair Nut and String","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["combinatorics","dp","implementation"]},{"ContestId":1084,"Index":"B","Name":"Kvass and the Fair Nut","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":1084,"Index":"A","Name":"The Fair Nut and Elevator","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":1083,"Index":"F","Name":"The Fair Nut and Amusing Xor","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["data structures"]},{"ContestId":1083,"Index":"E","Name":"The Fair Nut and Rectangles","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures","dp","geometry"]},{"ContestId":1083,"Index":"D","Name":"The Fair Nut's getting crazy","Type":"PROGRAMMING","Rating":3500,"Points":2000,"Tags":["data structures","implementation"]},{"ContestId":1083,"Index":"C","Name":"Max Mex","Type":"PROGRAMMING","Rating":2900,"Points":1500,"Tags":["data structures","trees"]},{"ContestId":1083,"Index":"B","Name":"The Fair Nut and Strings","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["greedy","strings"]},{"ContestId":1083,"Index":"A","Name":"The Fair Nut and the Best Path","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["data structures","dp","trees"]},{"ContestId":1082,"Index":"G","Name":"Petya and Graph","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["flows","graphs"]},{"ContestId":1082,"Index":"F","Name":"Speed Dial","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dp","strings","trees"]},{"ContestId":1082,"Index":"E","Name":"Increasing Frequency","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","dp","greedy"]},{"ContestId":1082,"Index":"D","Name":"Maximum Diameter Graph","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","graphs","implementation"]},{"ContestId":1082,"Index":"C","Name":"Multi-Subject Competition","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1082,"Index":"B","Name":"Vova and Trophies","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy"]},{"ContestId":1082,"Index":"A","Name":"Vasya and Book","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","math"]},{"ContestId":1081,"Index":"H","Name":"Palindromic Magic","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["data structures","hashing","strings"]},{"ContestId":1081,"Index":"G","Name":"Mergesort Strikes Back","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["math","probabilities"]},{"ContestId":1081,"Index":"F","Name":"Tricky Interactor","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["constructive algorithms","implementation","interactive"]},{"ContestId":1081,"Index":"E","Name":"Missing Numbers","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["binary search","constructive algorithms","greedy","math","number theory"]},{"ContestId":1081,"Index":"D","Name":"Maximum Distance","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dsu","graphs","shortest paths","sortings"]},{"ContestId":1081,"Index":"C","Name":"Colorful Bricks","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["combinatorics","dp","math"]},{"ContestId":1081,"Index":"B","Name":"Farewell Party","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":1081,"Index":"A","Name":"Definite Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":1080,"Index":"F","Name":"Katya and Segments Sets","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","interactive","sortings"]},{"ContestId":1080,"Index":"E","Name":"Sonya and Matrix Beauty","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["strings"]},{"ContestId":1080,"Index":"D","Name":"Olya and magical square","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":1080,"Index":"C","Name":"Masha and two friends","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["implementation"]},{"ContestId":1080,"Index":"B","Name":"Margarite and the best present","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["math"]},{"ContestId":1080,"Index":"A","Name":"Petya and Origami","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1078,"Index":"E","Name":"Negative Time Summation","Type":"PROGRAMMING","Rating":3400,"Points":2750,"Tags":["constructive algorithms"]},{"ContestId":1077,"Index":"F2","Name":"Pictures with Kittens (hard version)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","dp"]},{"ContestId":1077,"Index":"F1","Name":"Pictures with Kittens (easy version)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dp"]},{"ContestId":1077,"Index":"E","Name":"Thematic Contests","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":1077,"Index":"D","Name":"Cutting Out","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","sortings"]},{"ContestId":1077,"Index":"C","Name":"Good Array","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":[]},{"ContestId":1077,"Index":"B","Name":"Disturbed People","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy"]},{"ContestId":1077,"Index":"A","Name":"Frog Jumping","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":1076,"Index":"G","Name":"Array Game","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["data structures","games"]},{"ContestId":1076,"Index":"F","Name":"Summer Practice Report","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dp","greedy"]},{"ContestId":1076,"Index":"E","Name":"Vasya and a Tree","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","trees"]},{"ContestId":1076,"Index":"D","Name":"Edge Deletion","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["graphs","greedy","shortest paths"]},{"ContestId":1076,"Index":"C","Name":"Meme Problem","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","math"]},{"ContestId":1076,"Index":"B","Name":"Divisor Subtraction","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","math","number theory"]},{"ContestId":1076,"Index":"A","Name":"Minimizing the String","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","strings"]},{"ContestId":1075,"Index":"B","Name":"Taxi drivers and Lyft","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":1075,"Index":"A","Name":"The King's Race","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":1073,"Index":"G","Name":"Yet Another LCP Problem","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","string suffix structures"]},{"ContestId":1073,"Index":"F","Name":"Choosing Two Paths","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dfs and similar","dp","greedy","trees"]},{"ContestId":1073,"Index":"E","Name":"Segment Sum","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["bitmasks","combinatorics","dp","math"]},{"ContestId":1073,"Index":"D","Name":"Berland Fair","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","brute force","data structures","greedy"]},{"ContestId":1073,"Index":"C","Name":"Vasya and Robot","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","two pointers"]},{"ContestId":1073,"Index":"B","Name":"Vasya and Books","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","math"]},{"ContestId":1073,"Index":"A","Name":"Diverse Substring","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1071,"Index":"E","Name":"Rain Protection","Type":"PROGRAMMING","Rating":3500,"Points":2250,"Tags":["binary search","geometry"]},{"ContestId":1070,"Index":"M","Name":"Algoland and Berland","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["constructive algorithms","divide and conquer","geometry"]},{"ContestId":1070,"Index":"L","Name":"Odd Federalization","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1070,"Index":"K","Name":"Video Posts","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":1070,"Index":"J","Name":"Streets and Avenues in Berhattan","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp"]},{"ContestId":1070,"Index":"I","Name":"Privatization of Roads in Berland","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["flows","graph matchings","graphs"]},{"ContestId":1070,"Index":"H","Name":"BerOS File Suggestion","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1070,"Index":"G","Name":"Monsters and Potions","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["brute force","dp","greedy","implementation"]},{"ContestId":1070,"Index":"F","Name":"Debate","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy"]},{"ContestId":1070,"Index":"E","Name":"Getting Deals Done","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","data structures"]},{"ContestId":1070,"Index":"D","Name":"Garbage Disposal","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy"]},{"ContestId":1070,"Index":"C","Name":"Cloud Computing","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1070,"Index":"B","Name":"Berkomnadzor","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":1070,"Index":"A","Name":"Find a Number","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","graphs","number theory","shortest paths"]},{"ContestId":1068,"Index":"C","Name":"Colored Rooks","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","graphs"]},{"ContestId":1068,"Index":"B","Name":"LCM","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["math","number theory"]},{"ContestId":1068,"Index":"A","Name":"Birthday","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["math"]},{"ContestId":1067,"Index":"E","Name":"Random Forest Rank","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["dp","graph matchings","math","trees"]},{"ContestId":1067,"Index":"D","Name":"Computer Game","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["dp","greedy","math","probabilities"]},{"ContestId":1067,"Index":"C","Name":"Knights","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["constructive algorithms"]},{"ContestId":1067,"Index":"B","Name":"Multihedgehog","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dfs and similar","graphs","shortest paths"]},{"ContestId":1067,"Index":"A","Name":"Array Without Local Maximums ","Type":"PROGRAMMING","Rating":1900,"Points":500,"Tags":["dp"]},{"ContestId":1066,"Index":"F","Name":"Yet another 2D Walking","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp"]},{"ContestId":1066,"Index":"E","Name":"Binary Numbers AND Sum","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["data structures","implementation","math"]},{"ContestId":1066,"Index":"D","Name":"Boxes Packing","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","implementation"]},{"ContestId":1066,"Index":"C","Name":"Books Queries","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["implementation"]},{"ContestId":1066,"Index":"B","Name":"Heaters","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","two pointers"]},{"ContestId":1066,"Index":"A","Name":"Vova and Train","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math"]},{"ContestId":1065,"Index":"G","Name":"Fibonacci Suffix","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["strings"]},{"ContestId":1065,"Index":"F","Name":"Up and Down the Tree","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dfs and similar","dp","trees"]},{"ContestId":1065,"Index":"E","Name":"Side Transmutations","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["combinatorics","strings"]},{"ContestId":1065,"Index":"D","Name":"Three Pieces","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dfs and similar","dp","shortest paths"]},{"ContestId":1065,"Index":"C","Name":"Make It Equal","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy"]},{"ContestId":1065,"Index":"B","Name":"Vasya and Isolated Vertices","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["constructive algorithms","graphs"]},{"ContestId":1065,"Index":"A","Name":"Vasya and Chocolate","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":1064,"Index":"B","Name":"Equations of Mathematical Magic","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["math"]},{"ContestId":1064,"Index":"A","Name":"Make a triangle!","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","geometry","math"]},{"ContestId":1063,"Index":"F","Name":"String Journey","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["data structures","dp","string suffix structures"]},{"ContestId":1063,"Index":"E","Name":"Lasers and Mirrors","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["constructive algorithms","math"]},{"ContestId":1063,"Index":"D","Name":"Candies for Children","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["brute force","math"]},{"ContestId":1063,"Index":"C","Name":"Dwarves, Hats and Extrasensory Abilities","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["binary search","constructive algorithms","geometry","interactive"]},{"ContestId":1063,"Index":"B","Name":"Labyrinth","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["graphs","shortest paths"]},{"ContestId":1063,"Index":"A","Name":"Oh Those Palindromes","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","strings"]},{"ContestId":1062,"Index":"F","Name":"Upgrading Cities","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["dfs and similar","graphs"]},{"ContestId":1062,"Index":"E","Name":"Company","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["binary search","data structures","dfs and similar","greedy","trees"]},{"ContestId":1062,"Index":"D","Name":"Fun with Integers","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dfs and similar","graphs","implementation","math"]},{"ContestId":1062,"Index":"C","Name":"Banh-mi","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["greedy","implementation","math"]},{"ContestId":1062,"Index":"B","Name":"Math","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","math","number theory"]},{"ContestId":1062,"Index":"A","Name":"A Prank","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":1061,"Index":"F","Name":"Lost Root","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["interactive","probabilities"]},{"ContestId":1061,"Index":"E","Name":"Politics","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["flows","graphs"]},{"ContestId":1061,"Index":"D","Name":"TV Shows","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["data structures","greedy","implementation","sortings"]},{"ContestId":1061,"Index":"C","Name":"Multiplicity","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["data structures","dp","implementation","math","number theory"]},{"ContestId":1061,"Index":"B","Name":"Views Matter","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","implementation","sortings"]},{"ContestId":1061,"Index":"A","Name":"Coins","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":1060,"Index":"H","Name":"Sophisticated Device","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["constructive algorithms"]},{"ContestId":1060,"Index":"G","Name":"Balls and Pockets","Type":"PROGRAMMING","Rating":3400,"Points":2750,"Tags":["data structures"]},{"ContestId":1060,"Index":"F","Name":"Shrinking Tree","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["combinatorics","dp"]},{"ContestId":1060,"Index":"E","Name":"Sergey and Subway","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["dfs and similar","dp","trees"]},{"ContestId":1060,"Index":"D","Name":"Social Circles","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["greedy","math"]},{"ContestId":1060,"Index":"C","Name":"Maximum Subrectangle","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["binary search","implementation","two pointers"]},{"ContestId":1060,"Index":"B","Name":"Maximum Sum of Digits","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["greedy"]},{"ContestId":1060,"Index":"A","Name":"Phone Numbers","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":1059,"Index":"E","Name":"Split the Tree","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","data structures","dp","greedy","trees"]},{"ContestId":1059,"Index":"D","Name":"Nature Reserve","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["binary search","geometry","ternary search"]},{"ContestId":1059,"Index":"C","Name":"Sequence Transformation","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","math"]},{"ContestId":1059,"Index":"B","Name":"Forgery","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":1059,"Index":"A","Name":"Cashier","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":1057,"Index":"C","Name":"Tanya and Colored Candies","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["*special","dp"]},{"ContestId":1057,"Index":"B","Name":"DDoS","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["*special","brute force"]},{"ContestId":1057,"Index":"A","Name":"Bmail Computer Network","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["*special","dfs and similar","trees"]},{"ContestId":1056,"Index":"H","Name":"Detect Robots","Type":"PROGRAMMING","Rating":3200,"Points":4000,"Tags":["data structures","strings"]},{"ContestId":1056,"Index":"G","Name":"Take Metro","Type":"PROGRAMMING","Rating":2900,"Points":3500,"Tags":["brute force","data structures","graphs"]},{"ContestId":1056,"Index":"F","Name":"Write The Contest","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["binary search","dp","math"]},{"ContestId":1056,"Index":"E","Name":"Check Transcription","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["brute force","data structures","hashing","strings"]},{"ContestId":1056,"Index":"D","Name":"Decorate Apple Tree","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["constructive algorithms","dfs and similar","dp","graphs","greedy","sortings","trees"]},{"ContestId":1056,"Index":"C","Name":"Pick Heroes","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["greedy","implementation","interactive","sortings"]},{"ContestId":1056,"Index":"B","Name":"Divide Candies","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["math","number theory"]},{"ContestId":1056,"Index":"A","Name":"Determine Line","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1055,"Index":"G","Name":"Jellyfish Nightmare","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":[]},{"ContestId":1055,"Index":"F","Name":"Tree and XOR","Type":"PROGRAMMING","Rating":2900,"Points":3500,"Tags":["strings","trees"]},{"ContestId":1055,"Index":"E","Name":"Segments on the Line","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["binary search","dp"]},{"ContestId":1055,"Index":"D","Name":"Refactoring","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["greedy","implementation","strings"]},{"ContestId":1055,"Index":"C","Name":"Lucky Days","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["math","number theory"]},{"ContestId":1055,"Index":"B","Name":"Alice and Hairdresser","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["dsu","implementation"]},{"ContestId":1055,"Index":"A","Name":"Metro","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["graphs"]},{"ContestId":1054,"Index":"H","Name":"Epic Convolution","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["chinese remainder theorem","fft","math","number theory"]},{"ContestId":1054,"Index":"G","Name":"New Road Network","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1054,"Index":"F","Name":"Electric Scheme","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["flows","graph matchings"]},{"ContestId":1054,"Index":"E","Name":"Chips Puzzle","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":1054,"Index":"D","Name":"Changing Array","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["greedy","implementation"]},{"ContestId":1054,"Index":"C","Name":"Candies Distribution","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["constructive algorithms","implementation"]},{"ContestId":1054,"Index":"B","Name":"Appending Mex","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["implementation"]},{"ContestId":1054,"Index":"A","Name":"Elevator or Stairs?","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1053,"Index":"E","Name":"Euler tour","Type":"PROGRAMMING","Rating":3500,"Points":2500,"Tags":["constructive algorithms","trees"]},{"ContestId":1051,"Index":"G","Name":"Distinctification","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["data structures","dsu","greedy"]},{"ContestId":1051,"Index":"F","Name":"The Shortest Statement","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["graphs","shortest paths","trees"]},{"ContestId":1051,"Index":"E","Name":"Vasya and Big Integers","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["binary search","data structures","dp","hashing","strings"]},{"ContestId":1051,"Index":"D","Name":"Bicolorings","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["bitmasks","dp"]},{"ContestId":1051,"Index":"C","Name":"Vasya and Multisets","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","dp","greedy","implementation","math"]},{"ContestId":1051,"Index":"B","Name":"Relatively Prime Pairs","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","math","number theory"]},{"ContestId":1051,"Index":"A","Name":"Vasya And Password","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","implementation","strings"]},{"ContestId":1047,"Index":"B","Name":"Cover Points","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["geometry","math"]},{"ContestId":1047,"Index":"A","Name":"Little C Loves 3 I","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1046,"Index":"I","Name":"Say Hello","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["geometry"]},{"ContestId":1046,"Index":"F","Name":"Splitting money","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["implementation"]},{"ContestId":1046,"Index":"C","Name":"Space Formula","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy"]},{"ContestId":1045,"Index":"J","Name":"Moonwalk challenge","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","strings","trees"]},{"ContestId":1045,"Index":"I","Name":"Palindrome Pairs","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["hashing","strings"]},{"ContestId":1045,"Index":"H","Name":"Self-exploration","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["math"]},{"ContestId":1045,"Index":"G","Name":"AI robots","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures"]},{"ContestId":1045,"Index":"F","Name":"Shady Lady","Type":"PROGRAMMING","Rating":3400,"Points":0,"Tags":["geometry","math"]},{"ContestId":1045,"Index":"E","Name":"Ancient civilizations","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["constructive algorithms","geometry"]},{"ContestId":1045,"Index":"D","Name":"Interstellar battle","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["math","probabilities","trees"]},{"ContestId":1045,"Index":"C","Name":"Hyperspace Highways","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":1045,"Index":"B","Name":"Space Isaac","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["hashing","number theory"]},{"ContestId":1045,"Index":"A","Name":"Last chance","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","flows","graph matchings","graphs","trees"]},{"ContestId":1044,"Index":"F","Name":"DFS","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["data structures"]},{"ContestId":1044,"Index":"E","Name":"Grid Sort","Type":"PROGRAMMING","Rating":3100,"Points":2750,"Tags":["implementation"]},{"ContestId":1044,"Index":"D","Name":"Deduction Queries","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures","dsu"]},{"ContestId":1044,"Index":"C","Name":"Optimal Polygon Perimeter","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dp","geometry"]},{"ContestId":1044,"Index":"B","Name":"Intersecting Subtrees","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["dfs and similar","interactive","trees"]},{"ContestId":1044,"Index":"A","Name":"The Tower is Going Home","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["binary search","two pointers"]},{"ContestId":1043,"Index":"G","Name":"Speckled Band","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["data structures","divide and conquer","hashing","string suffix structures","strings"]},{"ContestId":1043,"Index":"F","Name":"Make It One","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["bitmasks","combinatorics","dp","math","number theory","shortest paths"]},{"ContestId":1043,"Index":"E","Name":"Train Hard, Win Easy","Type":"PROGRAMMING","Rating":1900,"Points":2250,"Tags":["constructive algorithms","greedy","math","sortings"]},{"ContestId":1043,"Index":"D","Name":"Mysterious Crime","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["brute force","combinatorics","math","meet-in-the-middle","two pointers"]},{"ContestId":1043,"Index":"C","Name":"Smallest Word","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":1043,"Index":"B","Name":"Lost Array","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation"]},{"ContestId":1043,"Index":"A","Name":"Elections","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":1042,"Index":"F","Name":"Leaf Sets","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["data structures","dfs and similar","dsu","graphs","greedy","sortings","trees"]},{"ContestId":1042,"Index":"E","Name":"Vasya and Magic Matrix","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["dp","math","probabilities"]},{"ContestId":1042,"Index":"D","Name":"Petya and Array","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["data structures","divide and conquer","two pointers"]},{"ContestId":1042,"Index":"C","Name":"Array Product","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1042,"Index":"B","Name":"Vitamins","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["bitmasks","brute force","dp","implementation"]},{"ContestId":1042,"Index":"A","Name":"Benches","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["binary search","implementation"]},{"ContestId":1041,"Index":"F","Name":"Ray in the tube","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["data structures","divide and conquer","dp","math"]},{"ContestId":1041,"Index":"E","Name":"Tree Reconstruction","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["constructive algorithms","data structures","graphs","greedy"]},{"ContestId":1041,"Index":"D","Name":"Glider","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["binary search","data structures","two pointers"]},{"ContestId":1041,"Index":"C","Name":"Coffee Break","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","data structures","greedy","two pointers"]},{"ContestId":1041,"Index":"B","Name":"Buying a TV Set","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["math"]},{"ContestId":1041,"Index":"A","Name":"Heist","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":1040,"Index":"B","Name":"Shashlik Cooking","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["dp","greedy","math"]},{"ContestId":1040,"Index":"A","Name":"Palindrome Dance","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy"]},{"ContestId":1039,"Index":"E","Name":"Summer Oenothera Exhibition","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["data structures"]},{"ContestId":1039,"Index":"D","Name":"You Are Given a Tree","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["data structures","dp","trees"]},{"ContestId":1039,"Index":"C","Name":"Network Safety","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["dfs and similar","dsu","graphs","math","sortings"]},{"ContestId":1039,"Index":"B","Name":"Subway Pursuit","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["binary search","interactive","probabilities"]},{"ContestId":1039,"Index":"A","Name":"Timetable","Type":"PROGRAMMING","Rating":2300,"Points":750,"Tags":["constructive algorithms","data structures","greedy","math"]},{"ContestId":1038,"Index":"F","Name":"Wrap Around","Type":"PROGRAMMING","Rating":2900,"Points":2750,"Tags":["dp","strings"]},{"ContestId":1038,"Index":"E","Name":"Maximum Matching","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["bitmasks","brute force","dfs and similar","dp","graphs"]},{"ContestId":1038,"Index":"D","Name":"Slime","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["dp","greedy","implementation"]},{"ContestId":1038,"Index":"C","Name":"Gambling","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["greedy","sortings"]},{"ContestId":1038,"Index":"B","Name":"Non-Coprime Partition","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":1038,"Index":"A","Name":"Equality","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1037,"Index":"H","Name":"Security","Type":"PROGRAMMING","Rating":3200,"Points":4000,"Tags":["data structures","string suffix structures"]},{"ContestId":1037,"Index":"G","Name":"A Game on Strings","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["games"]},{"ContestId":1037,"Index":"F","Name":"Maximum Reduction","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["combinatorics","data structures","math"]},{"ContestId":1037,"Index":"E","Name":"Trips","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["graphs"]},{"ContestId":1037,"Index":"D","Name":"Valid BFS?","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dfs and similar","graphs","shortest paths","trees"]},{"ContestId":1037,"Index":"C","Name":"Equalize","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["dp","greedy","strings"]},{"ContestId":1037,"Index":"B","Name":"Reach Median","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["greedy"]},{"ContestId":1037,"Index":"A","Name":"Packets","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":1036,"Index":"G","Name":"Sources and Sinks","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["bitmasks","brute force","dfs and similar"]},{"ContestId":1036,"Index":"F","Name":"Relatively Prime Powers","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["combinatorics","math","number theory"]},{"ContestId":1036,"Index":"E","Name":"Covered Points","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["fft","geometry","number theory"]},{"ContestId":1036,"Index":"D","Name":"Vasya and Arrays","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy","two pointers"]},{"ContestId":1036,"Index":"C","Name":"Classy Numbers","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["combinatorics","dp"]},{"ContestId":1036,"Index":"B","Name":"Diagonal Walking v.2","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["math"]},{"ContestId":1036,"Index":"A","Name":"Function Height","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["math"]},{"ContestId":1034,"Index":"E","Name":"Little C Loves 3 III","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["bitmasks","dp","math"]},{"ContestId":1034,"Index":"D","Name":"Intervals of Intervals","Type":"PROGRAMMING","Rating":3500,"Points":2000,"Tags":["binary search","data structures","two pointers"]},{"ContestId":1034,"Index":"C","Name":"Region Separation","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["combinatorics","dp","number theory","trees"]},{"ContestId":1034,"Index":"B","Name":"Little C Loves 3 II","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["brute force","constructive algorithms","flows","graph matchings"]},{"ContestId":1034,"Index":"A","Name":"Enlarge GCD","Type":"PROGRAMMING","Rating":1800,"Points":750,"Tags":["number theory"]},{"ContestId":1033,"Index":"G","Name":"Chip Game","Type":"PROGRAMMING","Rating":3500,"Points":4000,"Tags":["games"]},{"ContestId":1033,"Index":"F","Name":"Boolean Computer","Type":"PROGRAMMING","Rating":2800,"Points":3250,"Tags":["bitmasks","brute force","fft","math"]},{"ContestId":1033,"Index":"E","Name":"Hidden Bipartite Graph","Type":"PROGRAMMING","Rating":2800,"Points":2750,"Tags":["binary search","constructive algorithms","dfs and similar","graphs","interactive"]},{"ContestId":1033,"Index":"D","Name":"Divisors","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["interactive","math","number theory"]},{"ContestId":1033,"Index":"C","Name":"Permutation Game","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","dp","games"]},{"ContestId":1033,"Index":"B","Name":"Square Difference","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["math","number theory"]},{"ContestId":1033,"Index":"A","Name":"King Escape","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["dfs and similar","graphs","implementation"]},{"ContestId":1032,"Index":"G","Name":"Chattering","Type":"PROGRAMMING","Rating":2900,"Points":3500,"Tags":[]},{"ContestId":1032,"Index":"F","Name":"Vasya and Maximum Matching","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["dp","trees"]},{"ContestId":1032,"Index":"E","Name":"The Unbearable Lightness of Weights","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["dp","math"]},{"ContestId":1032,"Index":"D","Name":"Barcelonian Distance","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["geometry","implementation"]},{"ContestId":1032,"Index":"C","Name":"Playing Piano","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","dp"]},{"ContestId":1032,"Index":"B","Name":"Personalized Cup","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":[]},{"ContestId":1032,"Index":"A","Name":"Kitchen Utensils","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":[]},{"ContestId":1031,"Index":"F","Name":"Familiar Operations","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["brute force","graphs","math"]},{"ContestId":1031,"Index":"E","Name":"Triple Flips","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["constructive algorithms"]},{"ContestId":1031,"Index":"D","Name":"Minimum path","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["greedy"]},{"ContestId":1031,"Index":"C","Name":"Cram Time","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["greedy"]},{"ContestId":1031,"Index":"B","Name":"Curiosity Has No Limits","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":[]},{"ContestId":1031,"Index":"A","Name":"Golden Plate","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":1030,"Index":"G","Name":"Linear Congruential Generator","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["number theory"]},{"ContestId":1030,"Index":"F","Name":"Putting Boxes Together","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures"]},{"ContestId":1030,"Index":"E","Name":"Vasya and Good Sequences","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["bitmasks","dp"]},{"ContestId":1030,"Index":"D","Name":"Vasya and Triangle","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["geometry","number theory"]},{"ContestId":1030,"Index":"C","Name":"Vasya and Golden Ticket","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["implementation"]},{"ContestId":1030,"Index":"B","Name":"Vasya and Cornfield","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["geometry"]},{"ContestId":1030,"Index":"A","Name":"In Search of an Easy Problem","Type":"PROGRAMMING","Rating":800,"Points":250,"Tags":["implementation"]},{"ContestId":1029,"Index":"F","Name":"Multicolored Markers","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","brute force","math","number theory"]},{"ContestId":1029,"Index":"E","Name":"Tree with Small Distances","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","graphs","greedy"]},{"ContestId":1029,"Index":"D","Name":"Concatenated Multiples","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["implementation","math"]},{"ContestId":1029,"Index":"C","Name":"Maximal Intersection","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy","math","sortings"]},{"ContestId":1029,"Index":"B","Name":"Creating the Contest","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["dp","greedy","math"]},{"ContestId":1029,"Index":"A","Name":"Many Equal Substrings","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1028,"Index":"H","Name":"Make Square","Type":"PROGRAMMING","Rating":2900,"Points":3500,"Tags":["math"]},{"ContestId":1028,"Index":"G","Name":"Guess the number","Type":"PROGRAMMING","Rating":3000,"Points":3250,"Tags":["dp","interactive"]},{"ContestId":1028,"Index":"F","Name":"Make Symmetrical","Type":"PROGRAMMING","Rating":2900,"Points":3250,"Tags":["brute force"]},{"ContestId":1028,"Index":"E","Name":"Restore Array","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["constructive algorithms"]},{"ContestId":1028,"Index":"D","Name":"Order book","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["combinatorics","data structures","greedy"]},{"ContestId":1028,"Index":"C","Name":"Rectangles","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["geometry","implementation","sortings"]},{"ContestId":1028,"Index":"B","Name":"Unnatural Conditions","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["constructive algorithms","math"]},{"ContestId":1028,"Index":"A","Name":"Find Square","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1027,"Index":"G","Name":"X-mouse in the Campus","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["bitmasks","math","number theory"]},{"ContestId":1027,"Index":"F","Name":"Session in BSU","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","dfs and similar","dsu","graph matchings","graphs"]},{"ContestId":1027,"Index":"E","Name":"Inverse Coloring","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["combinatorics","dp","math"]},{"ContestId":1027,"Index":"D","Name":"Mouse Hunt","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","graphs"]},{"ContestId":1027,"Index":"C","Name":"Minimum Value Rectangle","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy"]},{"ContestId":1027,"Index":"B","Name":"Numbers on the Chessboard","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","math"]},{"ContestId":1027,"Index":"A","Name":"Palindromic Twist","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","strings"]},{"ContestId":1025,"Index":"G","Name":"Company Acquisitions","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["constructive algorithms","math"]},{"ContestId":1025,"Index":"F","Name":"Disjoint Triangles","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["geometry"]},{"ContestId":1025,"Index":"E","Name":"Colored Cubes","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["constructive algorithms","implementation","matrices"]},{"ContestId":1025,"Index":"D","Name":"Recovering BST","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["brute force","dp","math","number theory","trees"]},{"ContestId":1025,"Index":"C","Name":"Plasticine zebra","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1025,"Index":"B","Name":"Weakened Common Divisor","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["brute force","greedy","number theory"]},{"ContestId":1025,"Index":"A","Name":"Doggo Recoloring","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":1023,"Index":"G","Name":"Pisces","Type":"PROGRAMMING","Rating":3400,"Points":4000,"Tags":["data structures","flows","trees"]},{"ContestId":1023,"Index":"F","Name":"Mobile Phone Network","Type":"PROGRAMMING","Rating":2600,"Points":3250,"Tags":["dfs and similar","dsu","graphs","trees"]},{"ContestId":1023,"Index":"E","Name":"Down or Right","Type":"PROGRAMMING","Rating":2100,"Points":2750,"Tags":["constructive algorithms","interactive","matrices"]},{"ContestId":1023,"Index":"D","Name":"Array Restoration","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["constructive algorithms","data structures"]},{"ContestId":1023,"Index":"C","Name":"Bracket Subsequence","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["greedy"]},{"ContestId":1023,"Index":"B","Name":"Pair of Toys","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["math"]},{"ContestId":1023,"Index":"A","Name":"Single Wildcard Pattern Matching","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","implementation","strings"]},{"ContestId":1020,"Index":"B","Name":"Badge","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["brute force","dfs and similar","graphs"]},{"ContestId":1020,"Index":"A","Name":"New Building for SIS","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["math"]},{"ContestId":1019,"Index":"E","Name":"Raining season","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["data structures","divide and conquer","trees"]},{"ContestId":1019,"Index":"D","Name":"Large Triangle","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["binary search","geometry","sortings"]},{"ContestId":1019,"Index":"C","Name":"Sergey's problem","Type":"PROGRAMMING","Rating":3000,"Points":1750,"Tags":["constructive algorithms","graphs"]},{"ContestId":1019,"Index":"B","Name":"The hat","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["binary search","interactive"]},{"ContestId":1019,"Index":"A","Name":"Elections","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":1017,"Index":"H","Name":"The Films","Type":"PROGRAMMING","Rating":3300,"Points":3250,"Tags":["brute force"]},{"ContestId":1017,"Index":"G","Name":"The Tree","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["data structures"]},{"ContestId":1017,"Index":"F","Name":"The Neutral Zone","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["brute force","math"]},{"ContestId":1017,"Index":"E","Name":"The Supersonic Rocket","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["geometry","hashing","strings"]},{"ContestId":1017,"Index":"D","Name":"The Wu","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["bitmasks","brute force","data structures"]},{"ContestId":1017,"Index":"C","Name":"The Phone Number","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":1017,"Index":"B","Name":"The Bits","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","math"]},{"ContestId":1017,"Index":"A","Name":"The Rank","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":1016,"Index":"G","Name":"Appropriate Team","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["bitmasks","math","number theory"]},{"ContestId":1016,"Index":"F","Name":"Road Projects","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["dfs and similar","dp","trees"]},{"ContestId":1016,"Index":"E","Name":"Rest In The Shades","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","geometry"]},{"ContestId":1016,"Index":"D","Name":"Vasya And The Matrix","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","flows","math"]},{"ContestId":1016,"Index":"C","Name":"Vasya And The Mushrooms","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","implementation"]},{"ContestId":1016,"Index":"B","Name":"Segment Occurrences","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":1016,"Index":"A","Name":"Death Note","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","implementation","math"]},{"ContestId":1015,"Index":"F","Name":"Bracket Substring","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","strings"]},{"ContestId":1015,"Index":"E2","Name":"Stars Drawing (Hard Edition)","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","dp","greedy"]},{"ContestId":1015,"Index":"E1","Name":"Stars Drawing (Easy Edition)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","dp","greedy"]},{"ContestId":1015,"Index":"D","Name":"Walking Between Houses","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":1015,"Index":"C","Name":"Songs Compression","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["sortings"]},{"ContestId":1015,"Index":"B","Name":"Obtaining the String","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation"]},{"ContestId":1015,"Index":"A","Name":"Points in Segments","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1013,"Index":"B","Name":"And","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy"]},{"ContestId":1013,"Index":"A","Name":"Piles With Stones","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":1012,"Index":"F","Name":"Passports","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["dp","implementation"]},{"ContestId":1012,"Index":"E","Name":"Cycle sort","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["dsu","math"]},{"ContestId":1012,"Index":"D","Name":"AB-Strings","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["constructive algorithms","strings"]},{"ContestId":1012,"Index":"C","Name":"Hills","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["dp"]},{"ContestId":1012,"Index":"B","Name":"Chemical table","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["constructive algorithms","dfs and similar","dsu","graphs","matrices"]},{"ContestId":1012,"Index":"A","Name":"Photo of The Sky","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","implementation","math","sortings"]},{"ContestId":1011,"Index":"B","Name":"Planning The Expedition","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["binary search","brute force","implementation"]},{"ContestId":1011,"Index":"A","Name":"Stages","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":1010,"Index":"F","Name":"Tree","Type":"PROGRAMMING","Rating":3400,"Points":2750,"Tags":["fft","graphs","trees"]},{"ContestId":1010,"Index":"E","Name":"Store","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["data structures"]},{"ContestId":1010,"Index":"D","Name":"Mars rover","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dfs and similar","graphs","implementation","trees"]},{"ContestId":1010,"Index":"C","Name":"Border","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["number theory"]},{"ContestId":1010,"Index":"B","Name":"Rocket","Type":"PROGRAMMING","Rating":1800,"Points":750,"Tags":["binary search","interactive"]},{"ContestId":1010,"Index":"A","Name":"Fly","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["binary search","math"]},{"ContestId":1009,"Index":"G","Name":"Allowed Letters","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["bitmasks","flows","graph matchings","graphs","greedy"]},{"ContestId":1009,"Index":"F","Name":"Dominant Indices","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","dsu","trees"]},{"ContestId":1009,"Index":"E","Name":"Intercity Travelling","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["combinatorics","math","probabilities"]},{"ContestId":1009,"Index":"D","Name":"Relatively Prime Graph","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","constructive algorithms","graphs","greedy","math"]},{"ContestId":1009,"Index":"C","Name":"Annoying Present","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["greedy","math"]},{"ContestId":1009,"Index":"B","Name":"Minimum Ternary String","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":1009,"Index":"A","Name":"Game Shopping","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1008,"Index":"B","Name":"Turn the Rectangles","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":1008,"Index":"A","Name":"Romaji","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","strings"]},{"ContestId":1007,"Index":"E","Name":"Mini Metro","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["dp"]},{"ContestId":1007,"Index":"D","Name":"Ants","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["2-sat","data structures","trees"]},{"ContestId":1007,"Index":"C","Name":"Guess two numbers","Type":"PROGRAMMING","Rating":3000,"Points":1500,"Tags":["binary search","interactive"]},{"ContestId":1007,"Index":"B","Name":"Pave the Parallelepiped","Type":"PROGRAMMING","Rating":2400,"Points":1000,"Tags":["bitmasks","brute force","combinatorics","math","number theory"]},{"ContestId":1007,"Index":"A","Name":"Reorder the Array","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["combinatorics","data structures","math","sortings","two pointers"]},{"ContestId":1006,"Index":"F","Name":"Xor-Paths","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["bitmasks","brute force","dp","meet-in-the-middle"]},{"ContestId":1006,"Index":"E","Name":"Military Problem","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":1006,"Index":"D","Name":"Two Strings Swaps","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["implementation"]},{"ContestId":1006,"Index":"C","Name":"Three Parts of the Array","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search","data structures","two pointers"]},{"ContestId":1006,"Index":"B","Name":"Polycarp's Practice","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":1006,"Index":"A","Name":"Adjacent Replacements","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1005,"Index":"F","Name":"Berland and the Shortest Paths","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","dfs and similar","graphs","shortest paths"]},{"ContestId":1005,"Index":"E2","Name":"Median on Segments (General Case Edition)","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["sortings"]},{"ContestId":1005,"Index":"E1","Name":"Median on Segments (Permutations Edition)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["sortings"]},{"ContestId":1005,"Index":"D","Name":"Polycarp and Div 3","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dp","greedy","number theory"]},{"ContestId":1005,"Index":"C","Name":"Summarize to the Power of Two","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","greedy","implementation"]},{"ContestId":1005,"Index":"B","Name":"Delete from the Left","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","implementation","strings"]},{"ContestId":1005,"Index":"A","Name":"Tanya and Stairways","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1004,"Index":"F","Name":"Sonya and Bitwise OR","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["bitmasks","data structures","divide and conquer"]},{"ContestId":1004,"Index":"E","Name":"Sonya and Ice Cream","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","data structures","dp","greedy","shortest paths","trees"]},{"ContestId":1004,"Index":"D","Name":"Sonya and Matrix","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":1004,"Index":"C","Name":"Sonya and Robots","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","implementation"]},{"ContestId":1004,"Index":"B","Name":"Sonya and Exhibition","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":1004,"Index":"A","Name":"Sonya and Hotels","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":1003,"Index":"F","Name":"Abbreviation","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","hashing","strings"]},{"ContestId":1003,"Index":"E","Name":"Tree Constructing","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["constructive algorithms","graphs"]},{"ContestId":1003,"Index":"D","Name":"Coins and Queries","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy"]},{"ContestId":1003,"Index":"C","Name":"Intense Heat","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","implementation","math"]},{"ContestId":1003,"Index":"B","Name":"Binary String Constructing","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":1003,"Index":"A","Name":"Polycarp's Pockets","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":1002,"Index":"E2","Name":"Another array reconstruction algorithm","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"E1","Name":"Bernstein-Vazirani algorithm","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"D3","Name":"Oracle for majority function","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"D2","Name":"Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"D1","Name":"Oracle for f(x) = b * x mod 2","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"C2","Name":"Distinguish zero state and plus state without errors","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"C1","Name":"Distinguish zero state and plus state with minimum error","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"B4","Name":"Distinguish four 2-qubit states - 2","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"B3","Name":"Distinguish four 2-qubit states","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"B2","Name":"Distinguish GHZ state and W state","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"B1","Name":"Distinguish zero state and W state","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"A4","Name":"Generate W state","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"A3","Name":"Generate superposition of two basis states","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"A2","Name":"Generate superposition of zero state and a basis state","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":[]},{"ContestId":1002,"Index":"A1","Name":"Generate superposition of all basis states","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":[]},{"ContestId":1001,"Index":"I","Name":"Deutsch-Jozsa algorithm","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special"]},{"ContestId":1001,"Index":"H","Name":"Oracle for f(x) = parity of the number of 1s in x","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["*special"]},{"ContestId":1001,"Index":"G","Name":"Oracle for f(x) = k-th element of x","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special"]},{"ContestId":1001,"Index":"F","Name":"Distinguish multi-qubit basis states","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["*special"]},{"ContestId":1001,"Index":"E","Name":"Distinguish Bell states","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":1001,"Index":"D","Name":"Distinguish plus state and minus state","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special"]},{"ContestId":1001,"Index":"C","Name":"Generate GHZ state","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special"]},{"ContestId":1001,"Index":"B","Name":"Generate Bell state","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special"]},{"ContestId":1001,"Index":"A","Name":"Generate plus state or minus state","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["*special"]},{"ContestId":1000,"Index":"G","Name":"Two-Paths","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","dp","trees"]},{"ContestId":1000,"Index":"F","Name":"One Occurrence","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","divide and conquer"]},{"ContestId":1000,"Index":"E","Name":"We Need More Bosses","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":1000,"Index":"D","Name":"Yet Another Problem On a Subsequence","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["combinatorics","dp"]},{"ContestId":1000,"Index":"C","Name":"Covered Points Count","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["data structures","implementation","sortings"]},{"ContestId":1000,"Index":"B","Name":"Light It Up","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy"]},{"ContestId":1000,"Index":"A","Name":"Codehorses T-shirts","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":999,"Index":"F","Name":"Cards and Joy","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp"]},{"ContestId":999,"Index":"E","Name":"Reachability from the Capital","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dfs and similar","graphs","greedy"]},{"ContestId":999,"Index":"D","Name":"Equalize the Remainders","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","greedy","implementation"]},{"ContestId":999,"Index":"C","Name":"Alphabetic Removals","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation"]},{"ContestId":999,"Index":"B","Name":"Reversing Encryption","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":999,"Index":"A","Name":"Mishka and Contest","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":998,"Index":"B","Name":"Cutting","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["dp","greedy","sortings"]},{"ContestId":998,"Index":"A","Name":"Balloons","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":997,"Index":"E","Name":"Good Subsegments","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["data structures"]},{"ContestId":997,"Index":"D","Name":"Cycles in product","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["combinatorics","divide and conquer","trees"]},{"ContestId":997,"Index":"C","Name":"Sky Full of Stars","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["combinatorics","math"]},{"ContestId":997,"Index":"B","Name":"Roman Digits","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["brute force","combinatorics","dp","greedy","math"]},{"ContestId":997,"Index":"A","Name":"Convert to Ones","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":996,"Index":"B","Name":"World Cup","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","math"]},{"ContestId":996,"Index":"A","Name":"Hit the Lottery","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["dp","greedy"]},{"ContestId":995,"Index":"F","Name":"Cowmpany Cowmpensation","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["combinatorics","dp","math","trees"]},{"ContestId":995,"Index":"E","Name":"Number Clicker","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["divide and conquer","graphs","meet-in-the-middle","number theory"]},{"ContestId":995,"Index":"D","Name":"Game","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["math"]},{"ContestId":995,"Index":"C","Name":"Leaving the Bar","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["brute force","data structures","geometry","greedy","math","sortings"]},{"ContestId":995,"Index":"B","Name":"Suit and Tie","Type":"PROGRAMMING","Rating":1400,"Points":750,"Tags":["greedy","implementation","math"]},{"ContestId":995,"Index":"A","Name":"Tesla","Type":"PROGRAMMING","Rating":2100,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":994,"Index":"B","Name":"Knights of a Polygonal Table","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","implementation","sortings"]},{"ContestId":994,"Index":"A","Name":"Fingerprints","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":993,"Index":"F","Name":"The Moral Dilemma","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":[]},{"ContestId":993,"Index":"E","Name":"Nikita and Order Statistics","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["chinese remainder theorem","fft","math"]},{"ContestId":993,"Index":"D","Name":"Compute Power","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["binary search","dp","greedy"]},{"ContestId":993,"Index":"C","Name":"Careful Maneuvering","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["bitmasks","brute force","geometry"]},{"ContestId":993,"Index":"B","Name":"Open Communication","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["bitmasks","brute force"]},{"ContestId":993,"Index":"A","Name":"Two Squares","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["geometry","implementation"]},{"ContestId":992,"Index":"E","Name":"Nastya and King-Shamans","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["binary search","data structures"]},{"ContestId":992,"Index":"D","Name":"Nastya and a Game","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["brute force","implementation","math"]},{"ContestId":992,"Index":"C","Name":"Nastya and a Wardrobe","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["math"]},{"ContestId":992,"Index":"B","Name":"Nastya Studies Informatics","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["math","number theory"]},{"ContestId":992,"Index":"A","Name":"Nastya and an Array","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":991,"Index":"F","Name":"Concise and clear","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":991,"Index":"E","Name":"Bus Number","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["brute force","combinatorics","math"]},{"ContestId":991,"Index":"D","Name":"Bishwock","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["dp","greedy"]},{"ContestId":991,"Index":"C","Name":"Candies","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["binary search","implementation"]},{"ContestId":991,"Index":"B","Name":"Getting an A","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":991,"Index":"A","Name":"If at first you don't succeed...","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":990,"Index":"G","Name":"GCD Counting","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["divide and conquer","dp","dsu","number theory","trees"]},{"ContestId":990,"Index":"F","Name":"Flow Control","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dfs and similar","dp","greedy","trees"]},{"ContestId":990,"Index":"E","Name":"Post Lamps","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","greedy"]},{"ContestId":990,"Index":"D","Name":"Graph And Its Complement","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","graphs","implementation"]},{"ContestId":990,"Index":"C","Name":"Bracket Sequences Concatenation Problem","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["implementation"]},{"ContestId":990,"Index":"B","Name":"Micro-World","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":990,"Index":"A","Name":"Commentary Boxes","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","math"]},{"ContestId":989,"Index":"E","Name":"A Trance of Nightfall","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["dp","geometry","matrices","probabilities"]},{"ContestId":989,"Index":"D","Name":"A Shade of Moonlight","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["binary search","geometry","math","sortings","two pointers"]},{"ContestId":989,"Index":"C","Name":"A Mist of Florescence","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["constructive algorithms","graphs"]},{"ContestId":989,"Index":"B","Name":"A Tide of Riverscape","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","strings"]},{"ContestId":989,"Index":"A","Name":"A Blend of Springtime","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","strings"]},{"ContestId":988,"Index":"F","Name":"Rain and Umbrellas","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp"]},{"ContestId":988,"Index":"E","Name":"Divisibility by 25","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","greedy"]},{"ContestId":988,"Index":"D","Name":"Points and Powers of Two","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","math"]},{"ContestId":988,"Index":"C","Name":"Equal Sums","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":988,"Index":"B","Name":"Substrings Sort","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["sortings","strings"]},{"ContestId":988,"Index":"A","Name":"Diverse Team","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":987,"Index":"C","Name":"Three displays","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["brute force","dp","implementation"]},{"ContestId":987,"Index":"B","Name":"High School: Become Human","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["math"]},{"ContestId":987,"Index":"A","Name":"Infinity Gauntlet","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":986,"Index":"F","Name":"Oppa Funcan Style Remastered","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["graphs","math","number theory","shortest paths"]},{"ContestId":986,"Index":"E","Name":"Prince's Problem","Type":"PROGRAMMING","Rating":2800,"Points":2750,"Tags":["brute force","data structures","math","number theory","trees"]},{"ContestId":986,"Index":"D","Name":"Perfect Encoding","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["fft","math"]},{"ContestId":986,"Index":"C","Name":"AND Graph","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["bitmasks","dfs and similar","dsu","graphs"]},{"ContestId":986,"Index":"B","Name":"Petr and Permutations","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["combinatorics","math"]},{"ContestId":986,"Index":"A","Name":"Fair","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["graphs","greedy","number theory","shortest paths"]},{"ContestId":985,"Index":"G","Name":"Team Players","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["combinatorics"]},{"ContestId":985,"Index":"F","Name":"Isomorphic Strings","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["hashing","strings"]},{"ContestId":985,"Index":"E","Name":"Pencils and Boxes","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","data structures","dp","greedy","two pointers"]},{"ContestId":985,"Index":"D","Name":"Sand Fortress","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","constructive algorithms","math"]},{"ContestId":985,"Index":"C","Name":"Liebig's Barrels","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy"]},{"ContestId":985,"Index":"B","Name":"Switches and Lamps","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation"]},{"ContestId":985,"Index":"A","Name":"Chess Placing","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":984,"Index":"B","Name":"Minesweeper","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation"]},{"ContestId":984,"Index":"A","Name":"Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["sortings"]},{"ContestId":983,"Index":"E","Name":"NN country","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["binary search","data structures","trees"]},{"ContestId":983,"Index":"D","Name":"Arkady and Rectangles","Type":"PROGRAMMING","Rating":3300,"Points":2250,"Tags":["data structures"]},{"ContestId":983,"Index":"C","Name":"Elevator","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["dp","graphs","shortest paths"]},{"ContestId":983,"Index":"B","Name":"XOR-pyramid","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dp"]},{"ContestId":983,"Index":"A","Name":"Finite or not?","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["implementation","math"]},{"ContestId":982,"Index":"F","Name":"The Meeting Place Cannot Be Changed","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["dfs and similar","graphs"]},{"ContestId":982,"Index":"E","Name":"Billiard","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["geometry","number theory"]},{"ContestId":982,"Index":"D","Name":"Shark","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["brute force","data structures","dsu","trees"]},{"ContestId":982,"Index":"C","Name":"Cut 'em all!","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["dfs and similar","dp","graphs","greedy","trees"]},{"ContestId":982,"Index":"B","Name":"Bus of Characters","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["data structures","greedy","implementation"]},{"ContestId":982,"Index":"A","Name":"Row","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","constructive algorithms"]},{"ContestId":981,"Index":"H","Name":"K Paths","Type":"PROGRAMMING","Rating":3100,"Points":3750,"Tags":["combinatorics","data structures","dp","fft","math"]},{"ContestId":981,"Index":"G","Name":"Magic multisets","Type":"PROGRAMMING","Rating":2500,"Points":3250,"Tags":["data structures"]},{"ContestId":981,"Index":"F","Name":"Round Marriage","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["binary search","graph matchings","greedy"]},{"ContestId":981,"Index":"E","Name":"Addition on Segments","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["bitmasks","data structures","divide and conquer","dp"]},{"ContestId":981,"Index":"D","Name":"Bookshelves","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["bitmasks","dp","greedy"]},{"ContestId":981,"Index":"C","Name":"Useful Decomposition","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["implementation","trees"]},{"ContestId":981,"Index":"B","Name":"Businessmen Problems","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["sortings"]},{"ContestId":981,"Index":"A","Name":"Antipalindrome","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation","strings"]},{"ContestId":980,"Index":"F","Name":"Cactus to Tree","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["dp","graphs","trees"]},{"ContestId":980,"Index":"E","Name":"The Number Games","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["data structures","greedy","trees"]},{"ContestId":980,"Index":"D","Name":"Perfect Groups","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["dp","math","number theory"]},{"ContestId":980,"Index":"C","Name":"Posterized","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["games","greedy"]},{"ContestId":980,"Index":"B","Name":"Marlin","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":980,"Index":"A","Name":"Links and Pearls","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":979,"Index":"E","Name":"Kuro and Topological Parity","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["dp"]},{"ContestId":979,"Index":"D","Name":"Kuro and GCD and XOR and SUM","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["binary search","bitmasks","brute force","data structures","dp","dsu","greedy","math","number theory","strings","trees"]},{"ContestId":979,"Index":"C","Name":"Kuro and Walking Route","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["dfs and similar","trees"]},{"ContestId":979,"Index":"B","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["greedy"]},{"ContestId":979,"Index":"A","Name":"Pizza, Pizza, Pizza!!!","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["math"]},{"ContestId":978,"Index":"G","Name":"Petya's Exams","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":978,"Index":"F","Name":"Mentors","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","data structures","implementation"]},{"ContestId":978,"Index":"E","Name":"Bus Video System","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":978,"Index":"D","Name":"Almost Arithmetic Progression","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","implementation","math"]},{"ContestId":978,"Index":"C","Name":"Letters","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["binary search","implementation","two pointers"]},{"ContestId":978,"Index":"B","Name":"File Name","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","strings"]},{"ContestId":978,"Index":"A","Name":"Remove Duplicates","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":977,"Index":"F","Name":"Consecutive Subsequence","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dp"]},{"ContestId":977,"Index":"E","Name":"Cyclic Components","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":977,"Index":"D","Name":"Divide by three, multiply by two","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["dfs and similar","math","sortings"]},{"ContestId":977,"Index":"C","Name":"Less or Equal","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["sortings"]},{"ContestId":977,"Index":"B","Name":"Two-gram","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation","strings"]},{"ContestId":977,"Index":"A","Name":"Wrong Subtraction","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":976,"Index":"F","Name":"Minimal k-covering","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["flows","graphs"]},{"ContestId":976,"Index":"E","Name":"Well played!","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":976,"Index":"D","Name":"Degree Set","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["constructive algorithms","graphs","implementation"]},{"ContestId":976,"Index":"C","Name":"Nested Segments","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":976,"Index":"B","Name":"Lara Croft and the New Game","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation","math"]},{"ContestId":976,"Index":"A","Name":"Minimum Binary Number","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":975,"Index":"E","Name":"Hag's Khashba","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["geometry"]},{"ContestId":975,"Index":"D","Name":"Ghosts","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["geometry","math"]},{"ContestId":975,"Index":"C","Name":"Valhalla Siege","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["binary search"]},{"ContestId":975,"Index":"B","Name":"Mancala","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":975,"Index":"A","Name":"Aramic script","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","strings"]},{"ContestId":967,"Index":"B","Name":"Watering System","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["math","sortings"]},{"ContestId":967,"Index":"A","Name":"Mind the Gap","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":965,"Index":"E","Name":"Short Code","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["data structures","dp","greedy","strings","trees"]},{"ContestId":965,"Index":"D","Name":"Single-use Stones","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","flows","greedy","two pointers"]},{"ContestId":965,"Index":"C","Name":"Greedy Arkady","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["math"]},{"ContestId":965,"Index":"B","Name":"Battleship","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":965,"Index":"A","Name":"Paper Airplanes","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":964,"Index":"B","Name":"Messages","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["math"]},{"ContestId":964,"Index":"A","Name":"Splits","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":963,"Index":"E","Name":"Circles of Waiting","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["math"]},{"ContestId":963,"Index":"D","Name":"Frequency of String","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["hashing","string suffix structures","strings"]},{"ContestId":963,"Index":"C","Name":"Cutting Rectangle","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["brute force","math","number theory"]},{"ContestId":963,"Index":"B","Name":"Destruction of a Tree","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["constructive algorithms","dfs and similar","dp","greedy","trees"]},{"ContestId":963,"Index":"A","Name":"Alternating Sum","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["math","number theory"]},{"ContestId":962,"Index":"G","Name":"Visible Black Areas","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["data structures","dsu","geometry","trees"]},{"ContestId":962,"Index":"F","Name":"Simple Cycles Edges","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":962,"Index":"E","Name":"Byteland, Berland and Disputed Cities","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":962,"Index":"D","Name":"Merge Equals","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":962,"Index":"C","Name":"Make a Square","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","implementation","math"]},{"ContestId":962,"Index":"B","Name":"Students in Railway Carriage","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":962,"Index":"A","Name":"Equator","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation"]},{"ContestId":961,"Index":"G","Name":"Partitions","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["combinatorics","math","number theory"]},{"ContestId":961,"Index":"F","Name":"k-substrings","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["binary search","hashing","string suffix structures"]},{"ContestId":961,"Index":"E","Name":"Tufurama","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures"]},{"ContestId":961,"Index":"D","Name":"Pair Of Lines","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["geometry"]},{"ContestId":961,"Index":"C","Name":"Chessboard","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["bitmasks","brute force","implementation"]},{"ContestId":961,"Index":"B","Name":"Lecture Sleep","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["data structures","dp","implementation","two pointers"]},{"ContestId":961,"Index":"A","Name":"Tetris","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":960,"Index":"H","Name":"Santa's Gift","Type":"PROGRAMMING","Rating":3100,"Points":3500,"Tags":["data structures","trees"]},{"ContestId":960,"Index":"G","Name":"Bandit Blues","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["combinatorics","dp","fft","math"]},{"ContestId":960,"Index":"F","Name":"Pathwalks","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["data structures","dp","graphs"]},{"ContestId":960,"Index":"E","Name":"Alternating Tree","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["combinatorics","dfs and similar","divide and conquer","dp","probabilities","trees"]},{"ContestId":960,"Index":"D","Name":"Full Binary Tree Queries","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["brute force","implementation","trees"]},{"ContestId":960,"Index":"C","Name":"Subsequence Counting","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["bitmasks","constructive algorithms","greedy","implementation"]},{"ContestId":960,"Index":"B","Name":"Minimize the error","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["data structures","greedy","sortings"]},{"ContestId":960,"Index":"A","Name":"Check the string","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":959,"Index":"F","Name":"Mahmoud and Ehab and yet another xor task","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["bitmasks","dp","math","matrices"]},{"ContestId":959,"Index":"E","Name":"Mahmoud and Ehab and the xor-MST","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["bitmasks","dp","graphs","implementation","math"]},{"ContestId":959,"Index":"D","Name":"Mahmoud and Ehab and another array construction task","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["constructive algorithms","greedy","math","number theory"]},{"ContestId":959,"Index":"C","Name":"Mahmoud and Ehab and the wrong algorithm","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["constructive algorithms","trees"]},{"ContestId":959,"Index":"B","Name":"Mahmoud and Ehab and the message","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["dsu","greedy","implementation"]},{"ContestId":959,"Index":"A","Name":"Mahmoud and Ehab and the even-odd game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["games","math"]},{"ContestId":958,"Index":"F3","Name":"Lightsabers (hard)","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["fft"]},{"ContestId":958,"Index":"F2","Name":"Lightsabers (medium)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","two pointers"]},{"ContestId":958,"Index":"F1","Name":"Lightsabers (easy)","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["implementation"]},{"ContestId":958,"Index":"E3","Name":"Guard Duty (hard)","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["geometry"]},{"ContestId":958,"Index":"E2","Name":"Guard Duty (medium)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","dp","greedy","sortings"]},{"ContestId":958,"Index":"E1","Name":"Guard Duty (easy)","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","geometry","greedy","math"]},{"ContestId":958,"Index":"D2","Name":"Hyperspace Jump (hard)","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":[]},{"ContestId":958,"Index":"D1","Name":"Hyperspace Jump (easy)","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["expression parsing","math"]},{"ContestId":958,"Index":"C3","Name":"Encryption (hard)","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","dp"]},{"ContestId":958,"Index":"C2","Name":"Encryption (medium)","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp"]},{"ContestId":958,"Index":"C1","Name":"Encryption (easy)","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force"]},{"ContestId":958,"Index":"B2","Name":"Maximum Control (medium)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","dfs and similar","graphs","greedy","trees"]},{"ContestId":958,"Index":"B1","Name":"Maximum Control (easy)","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":958,"Index":"A3","Name":"Death Stars (hard)","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":[]},{"ContestId":958,"Index":"A2","Name":"Death Stars (medium)","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["hashing","strings"]},{"ContestId":958,"Index":"A1","Name":"Death Stars (easy)","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["implementation"]},{"ContestId":957,"Index":"A","Name":"Tritonic Iridescence","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation"]},{"ContestId":955,"Index":"F","Name":"Heaps","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["dp","trees"]},{"ContestId":955,"Index":"E","Name":"Icicles","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":[]},{"ContestId":955,"Index":"D","Name":"Scissors","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["brute force","strings"]},{"ContestId":955,"Index":"C","Name":"Sad powers","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["binary search","math","number theory"]},{"ContestId":955,"Index":"B","Name":"Not simply beatiful strings","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation"]},{"ContestId":955,"Index":"A","Name":"Feed the cat","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","math"]},{"ContestId":954,"Index":"I","Name":"Yet Another String Matching Problem","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["fft","math"]},{"ContestId":954,"Index":"H","Name":"Path Counting","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["combinatorics","dp"]},{"ContestId":954,"Index":"G","Name":"Castle Defense","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","data structures","greedy","two pointers"]},{"ContestId":954,"Index":"F","Name":"Runner's Problem","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","matrices","sortings"]},{"ContestId":954,"Index":"E","Name":"Water Taps","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","greedy","sortings"]},{"ContestId":954,"Index":"D","Name":"Fight Against Traffic","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dfs and similar","graphs","shortest paths"]},{"ContestId":954,"Index":"C","Name":"Matrix Walk","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["implementation"]},{"ContestId":954,"Index":"B","Name":"String Typing","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["implementation","strings"]},{"ContestId":954,"Index":"A","Name":"Diagonal Walking","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":952,"Index":"G","Name":"Puzzling Language","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":952,"Index":"F","Name":"2 + 2 != 4","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":[]},{"ContestId":952,"Index":"E","Name":"Cheese Board","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":[]},{"ContestId":952,"Index":"D","Name":"I'm Feeling Lucky!","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["probabilities"]},{"ContestId":952,"Index":"C","Name":"Ravioli Sort","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":952,"Index":"B","Name":"A Map of the Cat","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["brute force","interactive"]},{"ContestId":952,"Index":"A","Name":"Quirky Quantifiers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math"]},{"ContestId":950,"Index":"B","Name":"Intercepted Message","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":950,"Index":"A","Name":"Left-handers, Right-handers and Ambidexters","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":949,"Index":"F","Name":"Astronomy","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["geometry","probabilities"]},{"ContestId":949,"Index":"E","Name":"Binary Cards","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["brute force"]},{"ContestId":949,"Index":"D","Name":"Curfew","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["binary search","brute force","greedy","sortings"]},{"ContestId":949,"Index":"C","Name":"Data Center Maintenance","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["dfs and similar","graphs"]},{"ContestId":949,"Index":"B","Name":"A Leapfrog in the Array","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":949,"Index":"A","Name":"Zebras","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["greedy"]},{"ContestId":948,"Index":"A","Name":"Protect Sheep","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","dfs and similar","graphs","implementation"]},{"ContestId":946,"Index":"G","Name":"Almost Increasing Array","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","dp"]},{"ContestId":946,"Index":"F","Name":"Fibonacci String Subsequences","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["combinatorics","dp","matrices"]},{"ContestId":946,"Index":"E","Name":"Largest Beautiful Number","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":946,"Index":"D","Name":"Timetable","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp"]},{"ContestId":946,"Index":"C","Name":"String Transformation","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy","strings"]},{"ContestId":946,"Index":"B","Name":"Weird Subtraction Process","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math","number theory"]},{"ContestId":946,"Index":"A","Name":"Partition","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy"]},{"ContestId":940,"Index":"F","Name":"Machine Learning","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["brute force","data structures"]},{"ContestId":940,"Index":"E","Name":"Cashback","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["data structures","dp","greedy","math"]},{"ContestId":940,"Index":"D","Name":"Alena And The Heater","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","implementation"]},{"ContestId":940,"Index":"C","Name":"Phone Numbers","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["constructive algorithms","implementation","strings"]},{"ContestId":940,"Index":"B","Name":"Our Tanya is Crying Out Loud","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["dp","greedy"]},{"ContestId":940,"Index":"A","Name":"Points on the line","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","greedy","sortings"]},{"ContestId":939,"Index":"F","Name":"Cutlet","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["data structures","dp"]},{"ContestId":939,"Index":"E","Name":"Maximize!","Type":"PROGRAMMING","Rating":1800,"Points":2500,"Tags":["binary search","greedy","ternary search","two pointers"]},{"ContestId":939,"Index":"D","Name":"Love Rescue","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["dfs and similar","dsu","graphs","greedy","strings"]},{"ContestId":939,"Index":"C","Name":"Convenient For Everybody","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","two pointers"]},{"ContestId":939,"Index":"B","Name":"Hamster Farm","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["implementation"]},{"ContestId":939,"Index":"A","Name":"Love Triangle","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["graphs"]},{"ContestId":938,"Index":"G","Name":"Shortest Path Queries","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["bitmasks","data structures","dsu","graphs"]},{"ContestId":938,"Index":"F","Name":"Erasing Substrings","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["bitmasks","dp","greedy"]},{"ContestId":938,"Index":"E","Name":"Max History","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":938,"Index":"D","Name":"Buy a Ticket","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","graphs","shortest paths"]},{"ContestId":938,"Index":"C","Name":"Constructing Tests","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["binary search","brute force","constructive algorithms"]},{"ContestId":938,"Index":"B","Name":"Run For Your Prize","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","greedy"]},{"ContestId":938,"Index":"A","Name":"Word Correction","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":937,"Index":"B","Name":"Vile Grasshoppers","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","math","number theory"]},{"ContestId":937,"Index":"A","Name":"Olympiad","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":936,"Index":"E","Name":"Iqea","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["data structures","dfs and similar","divide and conquer","dsu","shortest paths","trees"]},{"ContestId":936,"Index":"D","Name":"World of Tank","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["dp","greedy"]},{"ContestId":936,"Index":"C","Name":"Lock Puzzle","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["constructive algorithms","implementation","strings"]},{"ContestId":936,"Index":"B","Name":"Sleepy Game","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["dfs and similar","dp","games","graphs"]},{"ContestId":936,"Index":"A","Name":"Save Energy!","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["binary search","implementation","math"]},{"ContestId":935,"Index":"F","Name":"Fafa and Array","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["data structures","greedy"]},{"ContestId":935,"Index":"E","Name":"Fafa and Ancient Mathematics","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["dfs and similar","dp","trees"]},{"ContestId":935,"Index":"D","Name":"Fafa and Ancient Alphabet","Type":"PROGRAMMING","Rating":1900,"Points":1750,"Tags":["math","probabilities"]},{"ContestId":935,"Index":"C","Name":"Fifa and Fafa","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["geometry"]},{"ContestId":935,"Index":"B","Name":"Fafa and the Gates","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["implementation"]},{"ContestId":935,"Index":"A","Name":"Fafa and his Company","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":934,"Index":"B","Name":"A Prosperous Lot","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":934,"Index":"A","Name":"A Compatible Pair","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","games"]},{"ContestId":933,"Index":"E","Name":"A Preponderant Reunion","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["constructive algorithms","dp"]},{"ContestId":933,"Index":"D","Name":"A Creative Cutout","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["brute force","combinatorics","math"]},{"ContestId":933,"Index":"C","Name":"A Colourful Prospect","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["geometry","graphs"]},{"ContestId":933,"Index":"B","Name":"A Determined Cleanup","Type":"PROGRAMMING","Rating":2000,"Points":750,"Tags":["math"]},{"ContestId":933,"Index":"A","Name":"A Twisty Movement","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["dp"]},{"ContestId":932,"Index":"G","Name":"Palindrome Partition","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["dp","string suffix structures","strings"]},{"ContestId":932,"Index":"F","Name":"Escape Through Leaf","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["data structures","dp","geometry"]},{"ContestId":932,"Index":"E","Name":"Team Work","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["combinatorics","dp","math"]},{"ContestId":932,"Index":"D","Name":"Tree","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["binary search","dp","trees"]},{"ContestId":932,"Index":"C","Name":"Permutation Cycle","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","constructive algorithms"]},{"ContestId":932,"Index":"B","Name":"Recursive Queries","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","data structures","dfs and similar"]},{"ContestId":932,"Index":"A","Name":"Palindromic Supersequence","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":931,"Index":"C","Name":"Laboratory Work","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["implementation","math"]},{"ContestId":931,"Index":"B","Name":"World Cup","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":931,"Index":"A","Name":"Friends Meeting","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":930,"Index":"E","Name":"Coins Exhibition","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["data structures","dp","math"]},{"ContestId":930,"Index":"D","Name":"Game with Tokens","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["data structures","games","implementation"]},{"ContestId":930,"Index":"C","Name":"Teodor is not a liar!","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["data structures","dp"]},{"ContestId":930,"Index":"B","Name":"Game with String","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["implementation","probabilities","strings"]},{"ContestId":930,"Index":"A","Name":"Peculiar apple-tree","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":929,"Index":"D","Name":"–ü–æ–≥—Ä–∞–Ω–∏—á–Ω—ã–µ –≤—Ä–∞—Ç–∞","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":[]},{"ContestId":929,"Index":"C","Name":"–ö—Ä–∞—Å–∏–≤–∞—è –∫–æ–º–∞–Ω–¥–∞","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["*special","combinatorics","math"]},{"ContestId":929,"Index":"B","Name":"–ú–µ—Å—Ç–∞ –≤ —Å–∞–º–æ–ª—ë—Ç–µ","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["*special","implementation"]},{"ContestId":929,"Index":"A","Name":"–ü—Ä–æ–∫–∞—Ç –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–≤","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["*special","greedy","implementation"]},{"ContestId":928,"Index":"D","Name":"Autocompletion","Type":"PROGRAMMING","Rating":1900,"Points":2250,"Tags":["*special","strings","trees"]},{"ContestId":928,"Index":"C","Name":"Dependency management","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["*special","graphs","implementation"]},{"ContestId":928,"Index":"B","Name":"Chat","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["*special","dp"]},{"ContestId":928,"Index":"A","Name":"Login Verification","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["*special","strings"]},{"ContestId":927,"Index":"A","Name":"BuberPool Taxi Optimization","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["*special","interactive"]},{"ContestId":926,"Index":"J","Name":"Segments","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures"]},{"ContestId":926,"Index":"I","Name":"A Vital Problem","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":[]},{"ContestId":926,"Index":"H","Name":"Endless Roses Most Beautiful","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":[]},{"ContestId":926,"Index":"G","Name":"Large Bouquets","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":[]},{"ContestId":926,"Index":"F","Name":"Mobile Communications","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":[]},{"ContestId":926,"Index":"E","Name":"Merge Equal Elements","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms","data structures"]},{"ContestId":926,"Index":"D","Name":"Choose Place","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":[]},{"ContestId":926,"Index":"C","Name":"Is This a Zebra?","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["implementation"]},{"ContestId":926,"Index":"B","Name":"Add Points","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":[]},{"ContestId":926,"Index":"A","Name":"2-3-numbers","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation","math"]},{"ContestId":925,"Index":"F","Name":"Parametric Circulation","Type":"PROGRAMMING","Rating":3100,"Points":3250,"Tags":["binary search","flows"]},{"ContestId":925,"Index":"E","Name":"May Holidays","Type":"PROGRAMMING","Rating":2900,"Points":2750,"Tags":["data structures","trees"]},{"ContestId":925,"Index":"D","Name":"Aztec Catacombs","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["constructive algorithms"]},{"ContestId":925,"Index":"C","Name":"Big Secret","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["constructive algorithms","math"]},{"ContestId":925,"Index":"B","Name":"Resource Distribution","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["binary search","implementation","sortings"]},{"ContestId":925,"Index":"A","Name":"Stairs and Elevators","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["binary search"]},{"ContestId":924,"Index":"F","Name":"Minimal Subset Difference","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["dp"]},{"ContestId":924,"Index":"E","Name":"Wardrobe","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":[]},{"ContestId":924,"Index":"D","Name":"Contact ATC","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":[]},{"ContestId":924,"Index":"C","Name":"Riverside Curio","Type":"PROGRAMMING","Rating":1700,"Points":1250,"Tags":["data structures","dp","greedy"]},{"ContestId":924,"Index":"B","Name":"Three-level Laser","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search","greedy","two pointers"]},{"ContestId":924,"Index":"A","Name":"Mystical Mosaic","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":923,"Index":"F","Name":"Public Service","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["constructive algorithms","graphs","trees"]},{"ContestId":923,"Index":"E","Name":"Perpetual Subtraction","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["fft","math","matrices"]},{"ContestId":923,"Index":"D","Name":"Picking Strings","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["constructive algorithms","implementation","strings"]},{"ContestId":923,"Index":"C","Name":"Perfect Security","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["data structures","greedy","strings","trees"]},{"ContestId":923,"Index":"B","Name":"Producing Snow","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search","data structures"]},{"ContestId":923,"Index":"A","Name":"Primal Sport","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["math","number theory"]},{"ContestId":922,"Index":"F","Name":"Divisibility","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["constructive algorithms","dp","greedy","number theory"]},{"ContestId":922,"Index":"E","Name":"Birds","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dp"]},{"ContestId":922,"Index":"D","Name":"Robot Vacuum Cleaner","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["greedy","sortings"]},{"ContestId":922,"Index":"C","Name":"Cave Painting","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["brute force","number theory"]},{"ContestId":922,"Index":"B","Name":"Magic Forest","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force"]},{"ContestId":922,"Index":"A","Name":"Cloning Toys","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation"]},{"ContestId":921,"Index":"14","Name":"Labyrinth-14","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"13","Name":"Labyrinth-13","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"12","Name":"Labyrinth-12","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"11","Name":"Labyrinth-11","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"10","Name":"Labyrinth-10","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"09","Name":"Labyrinth-9","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"08","Name":"Labyrinth-8","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"07","Name":"Labyrinth-7","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"06","Name":"Labyrinth-6","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"05","Name":"Labyrinth-5","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"04","Name":"Labyrinth-4","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"03","Name":"Labyrinth-3","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"02","Name":"Labyrinth-2","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":921,"Index":"01","Name":"Labyrinth-1","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":920,"Index":"G","Name":"List Of Integers","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","bitmasks","brute force","combinatorics","math","number theory"]},{"ContestId":920,"Index":"F","Name":"SUM and REPLACE","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","data structures","dsu","number theory"]},{"ContestId":920,"Index":"E","Name":"Connected Components?","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","dfs and similar","dsu","graphs"]},{"ContestId":920,"Index":"D","Name":"Tanks","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dp","greedy","implementation"]},{"ContestId":920,"Index":"C","Name":"Swap Adjacent Elements","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["dfs and similar","greedy","math","sortings","two pointers"]},{"ContestId":920,"Index":"B","Name":"Tea Queue","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation"]},{"ContestId":920,"Index":"A","Name":"Water The Garden","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":919,"Index":"F","Name":"A Game With Numbers","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["games","graphs","shortest paths"]},{"ContestId":919,"Index":"E","Name":"Congruence Equation","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["chinese remainder theorem","math","number theory"]},{"ContestId":919,"Index":"D","Name":"Substring","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dfs and similar","dp","graphs"]},{"ContestId":919,"Index":"C","Name":"Seat Arrangements","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":919,"Index":"B","Name":"Perfect Number","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["binary search","brute force","dp","implementation","number theory"]},{"ContestId":919,"Index":"A","Name":"Supermarket","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy","implementation"]},{"ContestId":918,"Index":"B","Name":"Radio Station","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":918,"Index":"A","Name":"Eleven","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":917,"Index":"E","Name":"Upside Down","Type":"PROGRAMMING","Rating":3400,"Points":2750,"Tags":["data structures","string suffix structures","strings","trees"]},{"ContestId":917,"Index":"D","Name":"Stranger Trees","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["dp","math","matrices","trees"]},{"ContestId":917,"Index":"C","Name":"Pollywog","Type":"PROGRAMMING","Rating":2900,"Points":1500,"Tags":["combinatorics","dp","matrices"]},{"ContestId":917,"Index":"B","Name":"MADMAX","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["dfs and similar","dp","games","graphs"]},{"ContestId":917,"Index":"A","Name":"The Monster","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["dp","greedy","implementation","math"]},{"ContestId":916,"Index":"E","Name":"Jamie and Tree","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","trees"]},{"ContestId":916,"Index":"D","Name":"Jamie and To-do List","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["data structures","interactive","trees"]},{"ContestId":916,"Index":"C","Name":"Jamie and Interesting Graph","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","graphs","shortest paths"]},{"ContestId":916,"Index":"B","Name":"Jamie and Binary Sequence (changed after round)","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["bitmasks","greedy","math"]},{"ContestId":916,"Index":"A","Name":"Jamie and Alarm Snooze","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":915,"Index":"G","Name":"Coprime Arrays","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["math","number theory"]},{"ContestId":915,"Index":"F","Name":"Imbalance Value of a Tree","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","dsu","graphs","trees"]},{"ContestId":915,"Index":"E","Name":"Physical Education Lessons","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","implementation","sortings"]},{"ContestId":915,"Index":"D","Name":"Almost Acyclic Graph","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dfs and similar","graphs"]},{"ContestId":915,"Index":"C","Name":"Permute Digits","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dp","greedy"]},{"ContestId":915,"Index":"B","Name":"Browser","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation"]},{"ContestId":915,"Index":"A","Name":"Garden","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":914,"Index":"H","Name":"Ember and Storm's Tree Game","Type":"PROGRAMMING","Rating":3400,"Points":3750,"Tags":["combinatorics","dp","games","trees"]},{"ContestId":914,"Index":"G","Name":"Sum the Fibonacci","Type":"PROGRAMMING","Rating":2600,"Points":3500,"Tags":["bitmasks","divide and conquer","dp","fft","math"]},{"ContestId":914,"Index":"F","Name":"Substrings in a String","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["bitmasks","brute force","data structures","string suffix structures","strings"]},{"ContestId":914,"Index":"E","Name":"Palindromes in a Tree","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["bitmasks","data structures","divide and conquer","trees"]},{"ContestId":914,"Index":"D","Name":"Bash and a Tough Math Puzzle","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["data structures","number theory"]},{"ContestId":914,"Index":"C","Name":"Travelling Salesman and Special Numbers","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["brute force","combinatorics","dp"]},{"ContestId":914,"Index":"B","Name":"Conan and Agasa play a Card Game","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["games","greedy","implementation"]},{"ContestId":914,"Index":"A","Name":"Perfect Squares","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":913,"Index":"H","Name":"Don't Exceed","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["math","probabilities"]},{"ContestId":913,"Index":"G","Name":"Power Substring","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["math","number theory"]},{"ContestId":913,"Index":"F","Name":"Strongly Connected Tournament","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["dp","graphs","math","probabilities"]},{"ContestId":913,"Index":"E","Name":"Logical Expression","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["bitmasks","dp","shortest paths"]},{"ContestId":913,"Index":"D","Name":"Too Easy Problems","Type":"PROGRAMMING","Rating":1800,"Points":1250,"Tags":["binary search","brute force","data structures","greedy","sortings"]},{"ContestId":913,"Index":"C","Name":"Party Lemonade","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["bitmasks","dp","greedy"]},{"ContestId":913,"Index":"B","Name":"Christmas Spruce","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["implementation","trees"]},{"ContestId":913,"Index":"A","Name":"Modular Exponentiation","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":912,"Index":"E","Name":"Prime Gift","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","dfs and similar","math","meet-in-the-middle","number theory","two pointers"]},{"ContestId":912,"Index":"D","Name":"Fishes","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["data structures","graphs","greedy","probabilities","shortest paths"]},{"ContestId":912,"Index":"C","Name":"Perun, Ult!","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["brute force","greedy","sortings"]},{"ContestId":912,"Index":"B","Name":"New Year's Eve","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["bitmasks","constructive algorithms","number theory"]},{"ContestId":912,"Index":"A","Name":"Tricky Alchemy","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":911,"Index":"G","Name":"Mass Change Queries","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures"]},{"ContestId":911,"Index":"F","Name":"Tree Destruction","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"ContestId":911,"Index":"E","Name":"Stack Sorting","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","data structures","greedy","implementation"]},{"ContestId":911,"Index":"D","Name":"Inversion Counting","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","math"]},{"ContestId":911,"Index":"C","Name":"Three Garlands","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","constructive algorithms"]},{"ContestId":911,"Index":"B","Name":"Two Cakes","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["binary search","brute force","implementation"]},{"ContestId":911,"Index":"A","Name":"Nearest Minimums","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":910,"Index":"C","Name":"Minimum Sum","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":910,"Index":"B","Name":"Door Frames","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":910,"Index":"A","Name":"The Way to Home","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["dfs and similar","dp","greedy","implementation"]},{"ContestId":909,"Index":"F","Name":"AND-permutations","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["constructive algorithms"]},{"ContestId":909,"Index":"E","Name":"Coprocessor","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dfs and similar","dp","graphs","greedy"]},{"ContestId":909,"Index":"D","Name":"Colorful Points","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["data structures","greedy","implementation"]},{"ContestId":909,"Index":"C","Name":"Python Indentation","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dp"]},{"ContestId":909,"Index":"B","Name":"Segments","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":909,"Index":"A","Name":"Generate Login","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","greedy","sortings"]},{"ContestId":908,"Index":"H","Name":"New Year and Boolean Bridges","Type":"PROGRAMMING","Rating":3100,"Points":3500,"Tags":[]},{"ContestId":908,"Index":"G","Name":"New Year and Original Order","Type":"PROGRAMMING","Rating":2800,"Points":2750,"Tags":["dp","math"]},{"ContestId":908,"Index":"F","Name":"New Year and Rainbow Roads","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["graphs","greedy","implementation"]},{"ContestId":908,"Index":"E","Name":"New Year and Entity Enumeration","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["bitmasks","combinatorics","dp","math"]},{"ContestId":908,"Index":"D","Name":"New Year and Arbitrary Arrangement","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["dp","math","probabilities"]},{"ContestId":908,"Index":"C","Name":"New Year and Curling","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","geometry","implementation","math"]},{"ContestId":908,"Index":"B","Name":"New Year and Buggy Bot","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["brute force","implementation"]},{"ContestId":908,"Index":"A","Name":"New Year and Counting Cards","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":907,"Index":"B","Name":"Tic-Tac-Toe","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation"]},{"ContestId":907,"Index":"A","Name":"Masha and Bears","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":906,"Index":"E","Name":"Reverses","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["dp","string suffix structures","strings"]},{"ContestId":906,"Index":"D","Name":"Power Tower","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["chinese remainder theorem","math","number theory"]},{"ContestId":906,"Index":"C","Name":"Party","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["bitmasks","brute force","dp","graphs"]},{"ContestId":906,"Index":"B","Name":"Seating of Students","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":906,"Index":"A","Name":"Shockers","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["implementation","strings"]},{"ContestId":903,"Index":"G","Name":"Yet Another Maxflow Problem","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","flows","graphs"]},{"ContestId":903,"Index":"F","Name":"Clear The Matrix","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["bitmasks","dp"]},{"ContestId":903,"Index":"E","Name":"Swapping Characters","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","hashing","implementation","strings"]},{"ContestId":903,"Index":"D","Name":"Almost Difference","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["data structures","math"]},{"ContestId":903,"Index":"C","Name":"Boxes Packing","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy"]},{"ContestId":903,"Index":"B","Name":"The Modcrab","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":903,"Index":"A","Name":"Hungry Student Problem","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":902,"Index":"B","Name":"Coloring a Tree","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["dfs and similar","dsu","greedy"]},{"ContestId":902,"Index":"A","Name":"Visiting a Friend","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":901,"Index":"E","Name":"Cyclic Cipher","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["fft","math"]},{"ContestId":901,"Index":"D","Name":"Weighting a Tree","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":901,"Index":"C","Name":"Bipartite Segments","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["binary search","data structures","dfs and similar","dsu","graphs","two pointers"]},{"ContestId":901,"Index":"B","Name":"GCD of Polynomials","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":901,"Index":"A","Name":"Hashing Trees","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["constructive algorithms","trees"]},{"ContestId":900,"Index":"E","Name":"Maximum Questions","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["data structures","dp","strings"]},{"ContestId":900,"Index":"D","Name":"Unusual Sequences","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["bitmasks","combinatorics","dp","math","number theory"]},{"ContestId":900,"Index":"C","Name":"Remove Extra One","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","data structures","math"]},{"ContestId":900,"Index":"B","Name":"Position in Fraction","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["math","number theory"]},{"ContestId":900,"Index":"A","Name":"Find Extra One","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["geometry","implementation"]},{"ContestId":899,"Index":"F","Name":"Letters Removing","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["data structures","strings"]},{"ContestId":899,"Index":"E","Name":"Segments Removal","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["data structures","dsu","flows","implementation","two pointers"]},{"ContestId":899,"Index":"D","Name":"Shovel Sale","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["constructive algorithms","math"]},{"ContestId":899,"Index":"C","Name":"Dividing the numbers","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["constructive algorithms","graphs","math"]},{"ContestId":899,"Index":"B","Name":"Months and Years","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation"]},{"ContestId":899,"Index":"A","Name":"Splitting in Teams","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":898,"Index":"F","Name":"Restoring the Expression","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["brute force","hashing","math"]},{"ContestId":898,"Index":"E","Name":"Squares and not squares","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["constructive algorithms","greedy"]},{"ContestId":898,"Index":"D","Name":"Alarm Clock","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["greedy"]},{"ContestId":898,"Index":"C","Name":"Phone Numbers","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["implementation","strings"]},{"ContestId":898,"Index":"B","Name":"Proper Nutrition","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["brute force","implementation","number theory"]},{"ContestId":898,"Index":"A","Name":"Rounding","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":897,"Index":"B","Name":"Chtholly's request","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force"]},{"ContestId":897,"Index":"A","Name":"Scarborough Fair","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":896,"Index":"E","Name":"Welcome home, Chtholly","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["data structures","dsu"]},{"ContestId":896,"Index":"D","Name":"Nephren Runs a Cinema","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["chinese remainder theorem","combinatorics","math","number theory"]},{"ContestId":896,"Index":"C","Name":"Willem, Chtholly and Seniorious","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["data structures","probabilities"]},{"ContestId":896,"Index":"B","Name":"Ithea Plays With Chtholly","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["binary search","constructive algorithms","games","greedy","interactive"]},{"ContestId":896,"Index":"A","Name":"Nephren gives a riddle","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["binary search","dfs and similar"]},{"ContestId":895,"Index":"E","Name":"Eyes Closed","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["data structures","probabilities"]},{"ContestId":895,"Index":"D","Name":"String Mark","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["combinatorics","math","strings"]},{"ContestId":895,"Index":"C","Name":"Square Subsets","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["bitmasks","combinatorics","dp","math"]},{"ContestId":895,"Index":"B","Name":"XK Segments","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["binary search","math","sortings","two pointers"]},{"ContestId":895,"Index":"A","Name":"Pizza Separation","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":894,"Index":"E","Name":"Ralph and Mushrooms","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["dp","graphs"]},{"ContestId":894,"Index":"D","Name":"Ralph And His Tour in Binary Country","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["brute force","data structures","trees"]},{"ContestId":894,"Index":"C","Name":"Marco and GCD Sequence","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["constructive algorithms","math"]},{"ContestId":894,"Index":"B","Name":"Ralph And His Magic Field","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["combinatorics","constructive algorithms","math","number theory"]},{"ContestId":894,"Index":"A","Name":"QAQ","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","dp"]},{"ContestId":893,"Index":"F","Name":"Subtree Minimum Query","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","trees"]},{"ContestId":893,"Index":"E","Name":"Counting Arrays","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":893,"Index":"D","Name":"Credit Card","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","dp","greedy","implementation"]},{"ContestId":893,"Index":"C","Name":"Rumor","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dfs and similar","graphs","greedy"]},{"ContestId":893,"Index":"B","Name":"Beautiful Divisors","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":893,"Index":"A","Name":"Chess For Three","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":892,"Index":"B","Name":"Wrath","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","implementation","two pointers"]},{"ContestId":892,"Index":"A","Name":"Greed","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":891,"Index":"E","Name":"Lust","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["combinatorics","math","matrices"]},{"ContestId":891,"Index":"D","Name":"Sloth","Type":"PROGRAMMING","Rating":3100,"Points":2000,"Tags":["dfs and similar","dp","graph matchings","trees"]},{"ContestId":891,"Index":"C","Name":"Envy","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["data structures","dsu","graphs"]},{"ContestId":891,"Index":"B","Name":"Gluttony","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["constructive algorithms","greedy"]},{"ContestId":891,"Index":"A","Name":"Pride","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","dp","greedy","math","number theory"]},{"ContestId":889,"Index":"E","Name":"Mod Mod Mod","Type":"PROGRAMMING","Rating":3000,"Points":2250,"Tags":["binary search","dp","math"]},{"ContestId":888,"Index":"G","Name":"Xor-MST","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["bitmasks","constructive algorithms","data structures"]},{"ContestId":888,"Index":"F","Name":"Connecting Vertices","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dp","graphs"]},{"ContestId":888,"Index":"E","Name":"Maximum Subsequence","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["bitmasks","divide and conquer","meet-in-the-middle"]},{"ContestId":888,"Index":"D","Name":"Almost Identity Permutations","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["combinatorics","dp","math"]},{"ContestId":888,"Index":"C","Name":"K-Dominant Character","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["binary search","implementation","two pointers"]},{"ContestId":888,"Index":"B","Name":"Buggy Robot","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy"]},{"ContestId":888,"Index":"A","Name":"Local Extrema","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":887,"Index":"F","Name":"Row of Models","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["greedy","sortings"]},{"ContestId":887,"Index":"E","Name":"Little Brother","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["binary search","geometry","sortings"]},{"ContestId":887,"Index":"D","Name":"Ratings and Reality Shows","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures","two pointers"]},{"ContestId":887,"Index":"C","Name":"Solution for Cube","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["brute force","implementation"]},{"ContestId":887,"Index":"B","Name":"Cubes for Masha","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":887,"Index":"A","Name":"Div. 64","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":886,"Index":"F","Name":"Symmetric Projections","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["geometry"]},{"ContestId":886,"Index":"E","Name":"Maximum Element","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["combinatorics","dp","math"]},{"ContestId":886,"Index":"D","Name":"Restoration of string","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","graphs","implementation"]},{"ContestId":886,"Index":"C","Name":"Petya and Catacombs","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["dsu","greedy","implementation","trees"]},{"ContestId":886,"Index":"B","Name":"Vlad and Cafes","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":[]},{"ContestId":886,"Index":"A","Name":"ACM ICPC","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force"]},{"ContestId":884,"Index":"F","Name":"Anti-Palindromize","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["flows","graphs","greedy"]},{"ContestId":884,"Index":"E","Name":"Binary Matrix","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dsu"]},{"ContestId":884,"Index":"D","Name":"Boxes And Balls","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":884,"Index":"C","Name":"Bertown Subway","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dfs and similar","greedy","math"]},{"ContestId":884,"Index":"B","Name":"Japanese Crosswords Strike Back","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":884,"Index":"A","Name":"Book Reading","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":883,"Index":"M","Name":"Quadcopter Competition","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","math"]},{"ContestId":883,"Index":"L","Name":"Berland.Taxi","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures"]},{"ContestId":883,"Index":"K","Name":"Road Widening","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":883,"Index":"J","Name":"Renovation","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":883,"Index":"I","Name":"Photo Processing","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","dp"]},{"ContestId":883,"Index":"H","Name":"Palindromic Cut","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","implementation","strings"]},{"ContestId":883,"Index":"G","Name":"Orientation of Edges","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar","graphs"]},{"ContestId":883,"Index":"F","Name":"Lost in Transliteration","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation"]},{"ContestId":883,"Index":"E","Name":"Field of Wonders","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["implementation","strings"]},{"ContestId":883,"Index":"D","Name":"Packmen Strike Back","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["binary search","dp","math"]},{"ContestId":883,"Index":"C","Name":"Downloading B++","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","implementation"]},{"ContestId":883,"Index":"B","Name":"Berland Army","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["constructive algorithms","graphs","greedy"]},{"ContestId":883,"Index":"A","Name":"Automatic Door","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["implementation"]},{"ContestId":879,"Index":"B","Name":"Table Tennis","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["data structures","implementation"]},{"ContestId":879,"Index":"A","Name":"Borya's Diagnosis","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":878,"Index":"E","Name":"Numbers on the blackboard","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["combinatorics","dp"]},{"ContestId":878,"Index":"D","Name":"Magic Breeding","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["bitmasks"]},{"ContestId":878,"Index":"C","Name":"Tournament","Type":"PROGRAMMING","Rating":2700,"Points":1250,"Tags":["data structures","graphs"]},{"ContestId":878,"Index":"B","Name":"Teams Formation","Type":"PROGRAMMING","Rating":2300,"Points":1250,"Tags":["data structures","implementation"]},{"ContestId":878,"Index":"A","Name":"Short Program","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":877,"Index":"F","Name":"Ann and Books","Type":"PROGRAMMING","Rating":2300,"Points":2750,"Tags":["data structures","flows","hashing"]},{"ContestId":877,"Index":"E","Name":"Danil and a Part-time Job","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["bitmasks","data structures","trees"]},{"ContestId":877,"Index":"D","Name":"Olya and Energy Drinks","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["data structures","dfs and similar","graphs","shortest paths"]},{"ContestId":877,"Index":"C","Name":"Slava and tanks","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":877,"Index":"B","Name":"Nikita and string","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","dp"]},{"ContestId":877,"Index":"A","Name":"Alex and broken contest","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","strings"]},{"ContestId":876,"Index":"B","Name":"Divisiblity of Differences","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","math","number theory"]},{"ContestId":876,"Index":"A","Name":"Trip For Meal","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math"]},{"ContestId":875,"Index":"F","Name":"Royal Questions","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dsu","graphs","greedy"]},{"ContestId":875,"Index":"E","Name":"Delivery Club","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["binary search","data structures","dp"]},{"ContestId":875,"Index":"D","Name":"High Cry","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["binary search","bitmasks","combinatorics","data structures","divide and conquer"]},{"ContestId":875,"Index":"C","Name":"National Property","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["2-sat","dfs and similar","graphs","implementation"]},{"ContestId":875,"Index":"B","Name":"Sorting the Coins","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dsu","implementation","sortings","two pointers"]},{"ContestId":875,"Index":"A","Name":"Classroom Watch","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","math"]},{"ContestId":873,"Index":"F","Name":"Forbidden Indices","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dsu","string suffix structures","strings"]},{"ContestId":873,"Index":"E","Name":"Awards For Contestants","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["brute force","data structures","dp"]},{"ContestId":873,"Index":"D","Name":"Merge Sort","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","divide and conquer"]},{"ContestId":873,"Index":"C","Name":"Strange Game On Matrix","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy","two pointers"]},{"ContestId":873,"Index":"B","Name":"Balanced Substring","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dp","implementation"]},{"ContestId":873,"Index":"A","Name":"Chores","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":871,"Index":"E","Name":"Restore the Tree","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["graphs","greedy","trees"]},{"ContestId":870,"Index":"F","Name":"Paths","Type":"PROGRAMMING","Rating":2700,"Points":3250,"Tags":["data structures","number theory"]},{"ContestId":870,"Index":"E","Name":"Points, Lines and Ready-made Titles","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["dfs and similar","dsu","graphs","trees"]},{"ContestId":870,"Index":"D","Name":"Something with XOR Queries","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["brute force","interactive","probabilities"]},{"ContestId":870,"Index":"C","Name":"Maximum splitting","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["dp","greedy","math","number theory"]},{"ContestId":870,"Index":"B","Name":"Maximum of Maximums of Minimums","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy"]},{"ContestId":870,"Index":"A","Name":"Search for Pretty Integers","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":869,"Index":"E","Name":"The Untended Antiquity","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","hashing"]},{"ContestId":869,"Index":"D","Name":"The Overdosing Ubiquity","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["brute force","dfs and similar","graphs"]},{"ContestId":869,"Index":"C","Name":"The Intriguing Obsession","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["combinatorics","dp","math"]},{"ContestId":869,"Index":"B","Name":"The Eternal Immortality","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["math"]},{"ContestId":869,"Index":"A","Name":"The Artful Expedient","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":868,"Index":"G","Name":"El Toll Caves","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["math"]},{"ContestId":868,"Index":"F","Name":"Yet Another Minimization Problem","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["divide and conquer","dp"]},{"ContestId":868,"Index":"E","Name":"Policeman and a Tree","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["dp","graphs","trees"]},{"ContestId":868,"Index":"D","Name":"Huge Strings","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["bitmasks","brute force","dp","implementation","strings"]},{"ContestId":868,"Index":"C","Name":"Qualification Rounds","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["bitmasks","brute force","constructive algorithms","dp"]},{"ContestId":868,"Index":"B","Name":"Race Against Time","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["implementation"]},{"ContestId":868,"Index":"A","Name":"Bark to Unlock","Type":"PROGRAMMING","Rating":900,"Points":250,"Tags":["brute force","implementation","strings"]},{"ContestId":867,"Index":"A","Name":"Between the Offices","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":865,"Index":"G","Name":"Flowers and Chocolate","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["combinatorics","math","matrices"]},{"ContestId":865,"Index":"F","Name":"Egg Roulette","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["bitmasks","brute force","divide and conquer","math","meet-in-the-middle"]},{"ContestId":865,"Index":"E","Name":"Hex Dyslexia","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["bitmasks","brute force","dp","graphs"]},{"ContestId":865,"Index":"D","Name":"Buy Low Sell High","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":865,"Index":"C","Name":"Gotta Go Fast","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["binary search","dp"]},{"ContestId":865,"Index":"B","Name":"Ordering Pizza","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["binary search","sortings","ternary search"]},{"ContestId":865,"Index":"A","Name":"Save the problem!","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":864,"Index":"F","Name":"Cities Excursions","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":864,"Index":"E","Name":"Fire","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["dp","sortings"]},{"ContestId":864,"Index":"D","Name":"Make a Permutation!","Type":"PROGRAMMING","Rating":1500,"Points":2000,"Tags":["greedy","implementation","math"]},{"ContestId":864,"Index":"C","Name":"Bus","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["greedy","implementation","math"]},{"ContestId":864,"Index":"B","Name":"Polycarp and Letters","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["brute force","implementation","strings"]},{"ContestId":864,"Index":"A","Name":"Fair Game","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":863,"Index":"G","Name":"Graphic Settings","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":[]},{"ContestId":863,"Index":"F","Name":"Almost Permutation","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["flows"]},{"ContestId":863,"Index":"E","Name":"Turn Off The TV","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["data structures","sortings"]},{"ContestId":863,"Index":"D","Name":"Yet Another Array Queries Problem","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":863,"Index":"C","Name":"1-2-3","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["graphs","implementation"]},{"ContestId":863,"Index":"B","Name":"Kayaking","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","greedy","sortings"]},{"ContestId":863,"Index":"A","Name":"Quasi-palindrome","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":862,"Index":"F","Name":"Mahmoud and Ehab and the final stage","Type":"PROGRAMMING","Rating":2900,"Points":2750,"Tags":["data structures","strings"]},{"ContestId":862,"Index":"E","Name":"Mahmoud and Ehab and the function","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","data structures","sortings"]},{"ContestId":862,"Index":"D","Name":"Mahmoud and Ehab and the binary string","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["binary search","divide and conquer","interactive"]},{"ContestId":862,"Index":"C","Name":"Mahmoud and Ehab and the xor","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":862,"Index":"B","Name":"Mahmoud and Ehab and the bipartiteness","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":862,"Index":"A","Name":"Mahmoud and Ehab and the MEX","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":860,"Index":"E","Name":"Arkady and a Nobody-men","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":859,"Index":"G","Name":"Circle of Numbers","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["math"]},{"ContestId":859,"Index":"F","Name":"Ordering T-Shirts","Type":"PROGRAMMING","Rating":2800,"Points":2750,"Tags":["greedy"]},{"ContestId":859,"Index":"E","Name":"Desk Disorder","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["combinatorics","dfs and similar","dsu","graphs","trees"]},{"ContestId":859,"Index":"D","Name":"Third Month Insanity","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dp","probabilities","trees"]},{"ContestId":859,"Index":"C","Name":"Pie Rules","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dp","games"]},{"ContestId":859,"Index":"B","Name":"Lazy Security Guard","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["brute force","geometry","math"]},{"ContestId":859,"Index":"A","Name":"Declined Finalists","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":858,"Index":"F","Name":"Wizard's Tour","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":858,"Index":"E","Name":"Tests Renumeration","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["greedy","implementation"]},{"ContestId":858,"Index":"D","Name":"Polycarp's phone book","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["data structures","implementation","sortings"]},{"ContestId":858,"Index":"C","Name":"Did you mean...","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["dp","greedy","implementation"]},{"ContestId":858,"Index":"B","Name":"Which floor?","Type":"PROGRAMMING","Rating":1500,"Points":750,"Tags":["brute force","implementation"]},{"ContestId":858,"Index":"A","Name":"k-rounding","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["brute force","math","number theory"]},{"ContestId":856,"Index":"F","Name":"To Play or not to Play","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["greedy"]},{"ContestId":856,"Index":"E","Name":"Satellites","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":[]},{"ContestId":856,"Index":"D","Name":"Masha and Cactus","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dp","trees"]},{"ContestId":856,"Index":"C","Name":"Eleventh Birthday","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["combinatorics","dp","math"]},{"ContestId":856,"Index":"B","Name":"Similar Words","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","hashing","strings","trees"]},{"ContestId":856,"Index":"A","Name":"Set Theory","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","constructive algorithms"]},{"ContestId":855,"Index":"G","Name":"Harry Vs Voldemort","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":855,"Index":"F","Name":"Nagini","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["binary search","data structures"]},{"ContestId":855,"Index":"E","Name":"Salazar Slytherin's Locket","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["bitmasks","dp"]},{"ContestId":855,"Index":"D","Name":"Rowena Ravenclaw's Diadem","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["trees"]},{"ContestId":855,"Index":"C","Name":"Helga Hufflepuff's Cup","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp","trees"]},{"ContestId":855,"Index":"B","Name":"Marvolo Gaunt's Ring","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","data structures","dp"]},{"ContestId":855,"Index":"A","Name":"Tom Riddle's Diary","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation","strings"]},{"ContestId":854,"Index":"B","Name":"Maxim Buys an Apartment","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":854,"Index":"A","Name":"Fraction","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":853,"Index":"E","Name":"Lada Malina","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["data structures","geometry"]},{"ContestId":853,"Index":"D","Name":"Michael and Charging Stations","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["binary search","dp","greedy"]},{"ContestId":853,"Index":"C","Name":"Boredom","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["data structures"]},{"ContestId":853,"Index":"B","Name":"Jury Meeting","Type":"PROGRAMMING","Rating":1800,"Points":750,"Tags":["greedy","sortings","two pointers"]},{"ContestId":853,"Index":"A","Name":"Planning","Type":"PROGRAMMING","Rating":1500,"Points":750,"Tags":["greedy"]},{"ContestId":852,"Index":"I","Name":"Dating","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["brute force","dfs and similar","graphs","trees"]},{"ContestId":852,"Index":"H","Name":"Bob and stages","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["dp","geometry"]},{"ContestId":852,"Index":"G","Name":"Bathroom terminal","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["implementation"]},{"ContestId":852,"Index":"F","Name":"Product transformation","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["combinatorics","math","number theory"]},{"ContestId":852,"Index":"E","Name":"Casinos and travel","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp"]},{"ContestId":852,"Index":"D","Name":"Exploration plan","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","flows","graph matchings","shortest paths"]},{"ContestId":852,"Index":"C","Name":"Property","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":852,"Index":"B","Name":"Neural Network country","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp","matrices"]},{"ContestId":852,"Index":"A","Name":"Digits","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["brute force","implementation","math"]},{"ContestId":851,"Index":"B","Name":"Arpa and an exam about geometry","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["geometry","math"]},{"ContestId":851,"Index":"A","Name":"Arpa and a research in Mexican wave","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":850,"Index":"F","Name":"Rainbow Balls","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["math"]},{"ContestId":850,"Index":"E","Name":"Random Elections","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["bitmasks","brute force","divide and conquer","fft","math"]},{"ContestId":850,"Index":"D","Name":"Tournament Construction","Type":"PROGRAMMING","Rating":2800,"Points":1750,"Tags":["constructive algorithms","dp","graphs","greedy","math"]},{"ContestId":850,"Index":"C","Name":"Arpa and a game with Mojtaba","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["bitmasks","dp","games"]},{"ContestId":850,"Index":"B","Name":"Arpa and a list of numbers","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["implementation","number theory"]},{"ContestId":850,"Index":"A","Name":"Five Dimensional Points","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force","geometry","math"]},{"ContestId":849,"Index":"B","Name":"Tell Your World","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["brute force","geometry"]},{"ContestId":849,"Index":"A","Name":"Odds and Ends","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":848,"Index":"E","Name":"Days of Floral Colours","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["combinatorics","divide and conquer","dp","fft","math"]},{"ContestId":848,"Index":"D","Name":"Shake It!","Type":"PROGRAMMING","Rating":2900,"Points":1750,"Tags":["combinatorics","dp","flows","graphs"]},{"ContestId":848,"Index":"C","Name":"Goodbye Souvenir","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["data structures","divide and conquer"]},{"ContestId":848,"Index":"B","Name":"Rooter's Song","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["constructive algorithms","data structures","geometry","implementation","sortings","two pointers"]},{"ContestId":848,"Index":"A","Name":"From Y to Y","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":847,"Index":"M","Name":"Weather Tomorrow","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","math"]},{"ContestId":847,"Index":"L","Name":"Berland SU Computer Network","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["constructive algorithms","dfs and similar","graphs","hashing","trees"]},{"ContestId":847,"Index":"K","Name":"Travel Cards","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":847,"Index":"J","Name":"Students Initiation","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","flows","graphs"]},{"ContestId":847,"Index":"I","Name":"Noise Level","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar","implementation","math"]},{"ContestId":847,"Index":"H","Name":"Load Testing","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy"]},{"ContestId":847,"Index":"G","Name":"University Classes","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":847,"Index":"F","Name":"Berland Elections","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":847,"Index":"E","Name":"Packmen","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","dp"]},{"ContestId":847,"Index":"D","Name":"Dog Show","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":847,"Index":"C","Name":"Sum of Nestings","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":847,"Index":"B","Name":"Preparing for Merge Sort","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","data structures"]},{"ContestId":847,"Index":"A","Name":"Union of Doubly Linked Lists","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["implementation"]},{"ContestId":846,"Index":"F","Name":"Random Query","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","math","probabilities","two pointers"]},{"ContestId":846,"Index":"E","Name":"Chemistry in Berland","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dfs and similar","greedy","trees"]},{"ContestId":846,"Index":"D","Name":"Monitor","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures"]},{"ContestId":846,"Index":"C","Name":"Four Segments","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","data structures","dp"]},{"ContestId":846,"Index":"B","Name":"Math Show","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","greedy"]},{"ContestId":846,"Index":"A","Name":"Curriculum Vitae","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":845,"Index":"G","Name":"Shortest Path Problem?","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dfs and similar","graphs","math"]},{"ContestId":845,"Index":"F","Name":"Guards In The Storehouse","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["bitmasks","dp"]},{"ContestId":845,"Index":"E","Name":"Fire in the City","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","data structures"]},{"ContestId":845,"Index":"D","Name":"Driving Test","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","dp","greedy"]},{"ContestId":845,"Index":"C","Name":"Two TVs","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["data structures","greedy","sortings"]},{"ContestId":845,"Index":"B","Name":"Luba And The Ticket","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","greedy","implementation"]},{"ContestId":845,"Index":"A","Name":"Chess Tourney","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":844,"Index":"B","Name":"Rectangles","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["combinatorics","math"]},{"ContestId":844,"Index":"A","Name":"Diversity","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","implementation","strings"]},{"ContestId":843,"Index":"E","Name":"Maximum Flow","Type":"PROGRAMMING","Rating":3000,"Points":2250,"Tags":["flows","graphs"]},{"ContestId":843,"Index":"D","Name":"Dynamic Shortest Path","Type":"PROGRAMMING","Rating":3400,"Points":2250,"Tags":["graphs","shortest paths"]},{"ContestId":843,"Index":"C","Name":"Upgrading Tree","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["constructive algorithms","dfs and similar","graphs","math","trees"]},{"ContestId":843,"Index":"B","Name":"Interactive LowerBound","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["brute force","interactive","probabilities"]},{"ContestId":843,"Index":"A","Name":"Sorting by Subsequences","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["dfs and similar","dsu","implementation","math","sortings"]},{"ContestId":842,"Index":"E","Name":"Nikita and game","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["binary search","dfs and similar","divide and conquer","graphs","trees"]},{"ContestId":842,"Index":"D","Name":"Vitya and Strange Lesson","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","data structures"]},{"ContestId":842,"Index":"C","Name":"Ilya And The Tree","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dfs and similar","graphs","math","number theory","trees"]},{"ContestId":842,"Index":"B","Name":"Gleb And Pizza","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["geometry"]},{"ContestId":842,"Index":"A","Name":"Kirill And The Game","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","two pointers"]},{"ContestId":841,"Index":"B","Name":"Godsend","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["games","math"]},{"ContestId":841,"Index":"A","Name":"Generous Kefa","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":840,"Index":"E","Name":"In a Trap","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["trees"]},{"ContestId":840,"Index":"D","Name":"Destiny","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["data structures","probabilities"]},{"ContestId":840,"Index":"C","Name":"On the Bench","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["combinatorics","dp"]},{"ContestId":840,"Index":"B","Name":"Leha and another game about graph","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["constructive algorithms","data structures","dfs and similar","dp","graphs"]},{"ContestId":840,"Index":"A","Name":"Leha and Function","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["combinatorics","greedy","math","number theory","sortings"]},{"ContestId":839,"Index":"E","Name":"Mother of Dragons","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["brute force","graphs","math","meet-in-the-middle"]},{"ContestId":839,"Index":"D","Name":"Winter is here","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":839,"Index":"C","Name":"Journey","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["dfs and similar","dp","graphs","probabilities","trees"]},{"ContestId":839,"Index":"B","Name":"Game of the Rows","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["brute force","greedy","implementation"]},{"ContestId":839,"Index":"A","Name":"Arya and Bran","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":838,"Index":"F","Name":"Expected Earnings","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":[]},{"ContestId":838,"Index":"E","Name":"Convex Countour","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp"]},{"ContestId":838,"Index":"D","Name":"Airplane Arrangements","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["math","number theory"]},{"ContestId":838,"Index":"C","Name":"Future Failure","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dp","games"]},{"ContestId":838,"Index":"B","Name":"Diverging Directions","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":838,"Index":"A","Name":"Binary Blocks","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force"]},{"ContestId":837,"Index":"G","Name":"Functions On The Segments","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures"]},{"ContestId":837,"Index":"F","Name":"Prefix Sums","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","brute force","combinatorics","math","matrices"]},{"ContestId":837,"Index":"E","Name":"Vasya's Function","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","implementation","math"]},{"ContestId":837,"Index":"D","Name":"Round Subset","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","math"]},{"ContestId":837,"Index":"C","Name":"Two Seals","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":837,"Index":"B","Name":"Flag of Berland","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":837,"Index":"A","Name":"Text Volume","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":835,"Index":"F","Name":"Roads in the Kingdom","Type":"PROGRAMMING","Rating":2500,"Points":2250,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":835,"Index":"E","Name":"The penguin's game","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["binary search","constructive algorithms","interactive"]},{"ContestId":835,"Index":"D","Name":"Palindromic characteristics","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","dp","hashing","strings"]},{"ContestId":835,"Index":"C","Name":"Star sky","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["dp","implementation"]},{"ContestId":835,"Index":"B","Name":"The number on the board","Type":"PROGRAMMING","Rating":1100,"Points":750,"Tags":["greedy"]},{"ContestId":835,"Index":"A","Name":"Key races","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":834,"Index":"B","Name":"The Festive Evening","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["data structures","implementation"]},{"ContestId":834,"Index":"A","Name":"The Useless Toy","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":833,"Index":"E","Name":"Caramel Clouds","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["data structures","dp","sortings"]},{"ContestId":833,"Index":"D","Name":"Red-Black Cobweb","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["data structures","divide and conquer","implementation","trees"]},{"ContestId":833,"Index":"C","Name":"Ever-Hungry Krakozyabra","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["brute force","combinatorics","greedy","math"]},{"ContestId":833,"Index":"B","Name":"The Bakery","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["binary search","data structures","divide and conquer","dp","two pointers"]},{"ContestId":833,"Index":"A","Name":"The Meaningless Game","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["math","number theory"]},{"ContestId":832,"Index":"E","Name":"Vasya and Shifts","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["matrices"]},{"ContestId":832,"Index":"D","Name":"Misha, Grisha and Underground","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":832,"Index":"C","Name":"Strange Radiation","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["binary search","implementation","math"]},{"ContestId":832,"Index":"B","Name":"Petya and Exam","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":832,"Index":"A","Name":"Sasha and Sticks","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["games","math"]},{"ContestId":831,"Index":"C","Name":"Jury Marks","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["brute force","constructive algorithms"]},{"ContestId":831,"Index":"B","Name":"Keyboard Layouts","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["implementation","strings"]},{"ContestId":831,"Index":"A","Name":"Unimodal Array","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":830,"Index":"E","Name":"Perpetual Motion Machine","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["constructive algorithms","dp","graphs","implementation","math","trees"]},{"ContestId":830,"Index":"D","Name":"Singer House","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["combinatorics","dp","graphs","trees"]},{"ContestId":830,"Index":"C","Name":"Bamboo Partition","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["brute force","data structures","implementation","math","number theory","sortings","two pointers"]},{"ContestId":830,"Index":"B","Name":"Cards Sorting","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["data structures","implementation","sortings"]},{"ContestId":830,"Index":"A","Name":"Office Keys","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["binary search","brute force","dp","greedy","sortings"]},{"ContestId":828,"Index":"B","Name":"Black Square","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["implementation"]},{"ContestId":828,"Index":"A","Name":"Restaurant Tables","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":827,"Index":"F","Name":"Dirty Arkady's Kitchen","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["data structures","dp","graphs","shortest paths"]},{"ContestId":827,"Index":"E","Name":"Rusty String","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["fft","math","strings"]},{"ContestId":827,"Index":"D","Name":"Best Edge Weight","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["data structures","dfs and similar","graphs","trees"]},{"ContestId":827,"Index":"C","Name":"DNA Evolution","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["data structures","strings"]},{"ContestId":827,"Index":"B","Name":"High Load","Type":"PROGRAMMING","Rating":1800,"Points":750,"Tags":["constructive algorithms","greedy","implementation","trees"]},{"ContestId":827,"Index":"A","Name":"String Reconstruction","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["data structures","greedy","sortings","strings"]},{"ContestId":825,"Index":"G","Name":"Tree Queries","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":825,"Index":"F","Name":"String Compression","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dp","hashing","string suffix structures","strings"]},{"ContestId":825,"Index":"E","Name":"Minimal Labels","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","dfs and similar","graphs","greedy"]},{"ContestId":825,"Index":"D","Name":"Suitable Replacement","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","greedy","implementation"]},{"ContestId":825,"Index":"C","Name":"Multi-judge Solving","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":825,"Index":"B","Name":"Five-In-a-Row","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":825,"Index":"A","Name":"Binary Protocol","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":822,"Index":"F","Name":"Madness","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["constructive algorithms","dfs and similar","trees"]},{"ContestId":822,"Index":"E","Name":"Liar","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["binary search","dp","hashing","string suffix structures"]},{"ContestId":822,"Index":"D","Name":"My pretty girl Noora","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["brute force","dp","greedy","math","number theory"]},{"ContestId":822,"Index":"C","Name":"Hacker, pack your bags!","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["binary search","greedy","implementation","sortings"]},{"ContestId":822,"Index":"B","Name":"Crossword solving","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["brute force","implementation","strings"]},{"ContestId":822,"Index":"A","Name":"I'm bored with life","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math","number theory"]},{"ContestId":821,"Index":"E","Name":"Okabe and El Psy Kongroo","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["dp","matrices"]},{"ContestId":821,"Index":"D","Name":"Okabe and City","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dfs and similar","graphs","shortest paths"]},{"ContestId":821,"Index":"C","Name":"Okabe and Boxes","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["data structures","greedy","trees"]},{"ContestId":821,"Index":"B","Name":"Okabe and Banana Trees","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","math"]},{"ContestId":821,"Index":"A","Name":"Okabe and Future Gadget Laboratory","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":820,"Index":"B","Name":"Mister B and Angle in Polygon","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","geometry","math"]},{"ContestId":820,"Index":"A","Name":"Mister B and Book Reading","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":819,"Index":"E","Name":"Mister B and Flight to the Moon","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["constructive algorithms","graphs"]},{"ContestId":819,"Index":"D","Name":"Mister B and Astronomers","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["number theory"]},{"ContestId":819,"Index":"C","Name":"Mister B and Beacons on Field","Type":"PROGRAMMING","Rating":2900,"Points":1500,"Tags":["number theory"]},{"ContestId":819,"Index":"B","Name":"Mister B and PR Shifts","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["data structures","implementation","math"]},{"ContestId":819,"Index":"A","Name":"Mister B and Boring Game","Type":"PROGRAMMING","Rating":2200,"Points":500,"Tags":["games","greedy"]},{"ContestId":818,"Index":"G","Name":"Four Melodies","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["flows","graphs"]},{"ContestId":818,"Index":"F","Name":"Level Generation","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","math","ternary search"]},{"ContestId":818,"Index":"E","Name":"Card Game Again","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures","number theory","two pointers"]},{"ContestId":818,"Index":"D","Name":"Multicolored Cars","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":818,"Index":"C","Name":"Sofa Thief","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":818,"Index":"B","Name":"Permutation Game","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":818,"Index":"A","Name":"Diplomas and Certificates","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":817,"Index":"F","Name":"MEX Queries","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","data structures","trees"]},{"ContestId":817,"Index":"E","Name":"Choosing The Commander","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["bitmasks","data structures","trees"]},{"ContestId":817,"Index":"D","Name":"Imbalanced Array","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","divide and conquer","dsu","sortings"]},{"ContestId":817,"Index":"C","Name":"Really Big Numbers","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","brute force","dp","math"]},{"ContestId":817,"Index":"B","Name":"Makes And The Product","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["combinatorics","implementation","math","sortings"]},{"ContestId":817,"Index":"A","Name":"Treasure Hunt","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","math","number theory"]},{"ContestId":816,"Index":"B","Name":"Karen and Coffee","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["binary search","data structures","implementation"]},{"ContestId":816,"Index":"A","Name":"Karen and Morning","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":815,"Index":"E","Name":"Karen and Neighborhood","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["binary search","constructive algorithms","implementation"]},{"ContestId":815,"Index":"D","Name":"Karen and Cards","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["binary search","combinatorics","data structures","geometry"]},{"ContestId":815,"Index":"C","Name":"Karen and Supermarket","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["brute force","dp","trees"]},{"ContestId":815,"Index":"B","Name":"Karen and Test","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["brute force","combinatorics","constructive algorithms","math"]},{"ContestId":815,"Index":"A","Name":"Karen and Game","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force","greedy","implementation"]},{"ContestId":814,"Index":"E","Name":"An unavoidable detour for home","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["combinatorics","dp","graphs","shortest paths"]},{"ContestId":814,"Index":"D","Name":"An overnight dance in discotheque","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["dfs and similar","dp","geometry","greedy","trees"]},{"ContestId":814,"Index":"C","Name":"An impassioned circulation of affection","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["brute force","dp","strings","two pointers"]},{"ContestId":814,"Index":"B","Name":"An express train to reveries","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":814,"Index":"A","Name":"An abandoned sentiment from past","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["constructive algorithms","greedy","implementation","sortings"]},{"ContestId":813,"Index":"F","Name":"Bipartite Checking","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","dsu","graphs"]},{"ContestId":813,"Index":"E","Name":"Army Creation","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","data structures"]},{"ContestId":813,"Index":"D","Name":"Two Melodies","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["dp","flows"]},{"ContestId":813,"Index":"C","Name":"The Tag Game","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","graphs"]},{"ContestId":813,"Index":"B","Name":"The Golden Age","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","math"]},{"ContestId":813,"Index":"A","Name":"The Contest","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":812,"Index":"E","Name":"Sagheer and Apple Tree","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["games","trees"]},{"ContestId":812,"Index":"D","Name":"Sagheer and Kindergarten","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["dfs and similar","graphs","implementation","trees"]},{"ContestId":812,"Index":"C","Name":"Sagheer and Nubian Market","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["binary search","sortings"]},{"ContestId":812,"Index":"B","Name":"Sagheer, the Hausmeister","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["bitmasks","brute force","dp"]},{"ContestId":812,"Index":"A","Name":"Sagheer and Crossroads","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":811,"Index":"E","Name":"Vladik and Entertaining Flags","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures","dsu","graphs"]},{"ContestId":811,"Index":"D","Name":"Vladik and Favorite Game","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["constructive algorithms","dfs and similar","graphs","interactive"]},{"ContestId":811,"Index":"C","Name":"Vladik and Memorable Trip","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["dp","implementation"]},{"ContestId":811,"Index":"B","Name":"Vladik and Complicated Book","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":811,"Index":"A","Name":"Vladik and Courtesy","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":810,"Index":"B","Name":"Summer sell-off","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":810,"Index":"A","Name":"Straight \u003c\u003cA\u003e\u003e","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":809,"Index":"E","Name":"Surprise me!","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["divide and conquer","math","number theory","trees"]},{"ContestId":809,"Index":"D","Name":"Hitchhiking in the Baltic States","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["data structures","dp"]},{"ContestId":809,"Index":"C","Name":"Find a car","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["combinatorics","divide and conquer","dp"]},{"ContestId":809,"Index":"B","Name":"Glad to see you!","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["binary search","interactive"]},{"ContestId":809,"Index":"A","Name":"Do you want a date?","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["implementation","math","sortings"]},{"ContestId":808,"Index":"G","Name":"Anthem of Berland","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","strings"]},{"ContestId":808,"Index":"F","Name":"Card Game","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","flows","graphs"]},{"ContestId":808,"Index":"E","Name":"Selling Souvenirs","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","dp","greedy","ternary search"]},{"ContestId":808,"Index":"D","Name":"Array Division","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures","implementation"]},{"ContestId":808,"Index":"C","Name":"Tea Party","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":808,"Index":"B","Name":"Average Sleep Time","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["data structures","implementation","math"]},{"ContestId":808,"Index":"A","Name":"Lucky Year","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":807,"Index":"B","Name":"T-Shirt Hunt","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":807,"Index":"A","Name":"Is it rated?","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":805,"Index":"B","Name":"3-palindrome","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":805,"Index":"A","Name":"Fake NP","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","math"]},{"ContestId":804,"Index":"F","Name":"Fake bullions","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["combinatorics","dfs and similar","dp","graphs","number theory"]},{"ContestId":804,"Index":"E","Name":"The same permutation ","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["constructive algorithms"]},{"ContestId":804,"Index":"D","Name":"Expected diameter of a tree","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["binary search","brute force","dfs and similar","dp","sortings","trees"]},{"ContestId":804,"Index":"C","Name":"Ice cream coloring","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["constructive algorithms","dfs and similar","greedy"]},{"ContestId":804,"Index":"B","Name":"Minimum number of steps","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["combinatorics","greedy","implementation","math"]},{"ContestId":804,"Index":"A","Name":"Find Amir","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":803,"Index":"G","Name":"Periodic RMQ Problem","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures"]},{"ContestId":803,"Index":"F","Name":"Coprime Subsequences","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["bitmasks","combinatorics","number theory"]},{"ContestId":803,"Index":"E","Name":"Roma and Poker","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp","graphs"]},{"ContestId":803,"Index":"D","Name":"Magazine Ad","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","greedy"]},{"ContestId":803,"Index":"C","Name":"Maximal GCD","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":803,"Index":"B","Name":"Distances to Zero","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":803,"Index":"A","Name":"Maximal Binary Matrix","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":802,"Index":"O","Name":"April Fools' Problem (hard)","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["binary search","data structures","flows"]},{"ContestId":802,"Index":"N","Name":"April Fools' Problem (medium)","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["binary search","flows","graphs"]},{"ContestId":802,"Index":"M","Name":"April Fools' Problem (easy)","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":802,"Index":"L","Name":"Send the Fool Further! (hard)","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dfs and similar","dp","math","trees"]},{"ContestId":802,"Index":"K","Name":"Send the Fool Further! (medium)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","trees"]},{"ContestId":802,"Index":"J","Name":"Send the Fool Further! (easy)","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":802,"Index":"I","Name":"Fake News (hard)","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["string suffix structures"]},{"ContestId":802,"Index":"H","Name":"Fake News (medium)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms","strings"]},{"ContestId":802,"Index":"G","Name":"Fake News (easy)","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":802,"Index":"F","Name":"Marmots (hard)","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["math","probabilities"]},{"ContestId":802,"Index":"E","Name":"Marmots (medium)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["math"]},{"ContestId":802,"Index":"D","Name":"Marmots (easy)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["math"]},{"ContestId":802,"Index":"C","Name":"Heidi and Library (hard)","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["flows"]},{"ContestId":802,"Index":"B","Name":"Heidi and Library (medium)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":802,"Index":"A","Name":"Heidi and Library (easy)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["greedy"]},{"ContestId":801,"Index":"B","Name":"Valued Keys","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":801,"Index":"A","Name":"Vicious Keyboard","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force"]},{"ContestId":799,"Index":"G","Name":"Cut the pie","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["binary search","data structures","geometry"]},{"ContestId":799,"Index":"F","Name":"Beautiful fountains rows","Type":"PROGRAMMING","Rating":3500,"Points":3250,"Tags":["data structures"]},{"ContestId":799,"Index":"E","Name":"Aquarium decoration","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","greedy","two pointers"]},{"ContestId":799,"Index":"D","Name":"Field expansion","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["brute force","dp","meet-in-the-middle"]},{"ContestId":799,"Index":"C","Name":"Fountains","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["binary search","data structures","implementation"]},{"ContestId":799,"Index":"B","Name":"T-shirt buying","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["data structures","implementation"]},{"ContestId":799,"Index":"A","Name":"Carrot Cakes","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":798,"Index":"E","Name":"Mike and code of a permutation","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["constructive algorithms","data structures","graphs","sortings"]},{"ContestId":798,"Index":"D","Name":"Mike and distribution","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms","sortings"]},{"ContestId":798,"Index":"C","Name":"Mike and gcd problem","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dp","greedy","number theory"]},{"ContestId":798,"Index":"B","Name":"Mike and strings","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","dp","strings"]},{"ContestId":798,"Index":"A","Name":"Mike and palindrome","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","constructive algorithms","strings"]},{"ContestId":797,"Index":"F","Name":"Mice and Holes","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures","dp","greedy","sortings"]},{"ContestId":797,"Index":"E","Name":"Array Queries","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","data structures","dp"]},{"ContestId":797,"Index":"D","Name":"Broken BST","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","dfs and similar"]},{"ContestId":797,"Index":"C","Name":"Minimal string","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["data structures","greedy","strings"]},{"ContestId":797,"Index":"B","Name":"Odd sum","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["dp","greedy","implementation"]},{"ContestId":797,"Index":"A","Name":"k-Factorization","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation","math","number theory"]},{"ContestId":796,"Index":"F","Name":"Sequence Recovery","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["bitmasks","data structures","greedy"]},{"ContestId":796,"Index":"E","Name":"Exam Cheating","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["binary search","dp"]},{"ContestId":796,"Index":"D","Name":"Police Stations","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["constructive algorithms","dfs and similar","dp","graphs","shortest paths","trees"]},{"ContestId":796,"Index":"C","Name":"Bank Hacking","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["constructive algorithms","data structures","dp","trees"]},{"ContestId":796,"Index":"B","Name":"Find The Bone","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["implementation"]},{"ContestId":796,"Index":"A","Name":"Buying A House","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":794,"Index":"G","Name":"Replace All","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["combinatorics","dp","math"]},{"ContestId":794,"Index":"F","Name":"Leha and security system","Type":"PROGRAMMING","Rating":2800,"Points":2750,"Tags":["data structures"]},{"ContestId":794,"Index":"E","Name":"Choosing Carrot","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["games","math"]},{"ContestId":794,"Index":"D","Name":"Labelling Cities","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["dfs and similar","graphs","hashing"]},{"ContestId":794,"Index":"C","Name":"Naming Company","Type":"PROGRAMMING","Rating":1800,"Points":1750,"Tags":["games","greedy","sortings"]},{"ContestId":794,"Index":"B","Name":"Cutting Carrot","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["geometry","math"]},{"ContestId":794,"Index":"A","Name":"Bank Robbery","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":793,"Index":"G","Name":"Oleg and chess","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["data structures","divide and conquer","flows","graph matchings"]},{"ContestId":793,"Index":"F","Name":"Julia the snail","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["data structures","divide and conquer","dp"]},{"ContestId":793,"Index":"E","Name":"Problem of offices","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["constructive algorithms","dfs and similar","dp","trees"]},{"ContestId":793,"Index":"D","Name":"Presents in Bankopolis","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["dp","graphs","shortest paths"]},{"ContestId":793,"Index":"C","Name":"Mice problem","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["geometry","implementation","math","sortings"]},{"ContestId":793,"Index":"B","Name":"Igor and his way to work","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["dfs and similar","graphs","implementation","shortest paths"]},{"ContestId":793,"Index":"A","Name":"Oleg and shares","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":792,"Index":"F","Name":"Mages and Monsters","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["data structures","geometry"]},{"ContestId":792,"Index":"E","Name":"Colored Balls","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["greedy","math","number theory"]},{"ContestId":792,"Index":"D","Name":"Paths in a Complete Binary Tree","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["bitmasks","trees"]},{"ContestId":792,"Index":"C","Name":"Divide by Three","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp","greedy","math","number theory"]},{"ContestId":792,"Index":"B","Name":"Counting-out Rhyme","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation"]},{"ContestId":792,"Index":"A","Name":"New Bus Route","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":791,"Index":"A","Name":"Bear and Big Brother","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":789,"Index":"B","Name":"Masha and geometric depression","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["brute force","implementation","math"]},{"ContestId":789,"Index":"A","Name":"Anastasia and pebbles","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","math"]},{"ContestId":788,"Index":"E","Name":"New task","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["data structures"]},{"ContestId":788,"Index":"D","Name":"Finding lines","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["constructive algorithms","divide and conquer","interactive"]},{"ContestId":788,"Index":"C","Name":"The Great Mixing","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["dfs and similar","graphs","shortest paths"]},{"ContestId":788,"Index":"B","Name":"Weird journey","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["combinatorics","constructive algorithms","dfs and similar","dsu","graphs"]},{"ContestId":788,"Index":"A","Name":"Functions again","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["dp","two pointers"]},{"ContestId":787,"Index":"B","Name":"Not Afraid","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","implementation","math"]},{"ContestId":787,"Index":"A","Name":"The Monster","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","math","number theory"]},{"ContestId":786,"Index":"E","Name":"ALT","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["data structures","flows","graphs","trees"]},{"ContestId":786,"Index":"D","Name":"Rap God","Type":"PROGRAMMING","Rating":3400,"Points":2000,"Tags":["data structures","dfs and similar","hashing","strings","trees"]},{"ContestId":786,"Index":"C","Name":"Till I Collapse","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["data structures","divide and conquer"]},{"ContestId":786,"Index":"B","Name":"Legacy","Type":"PROGRAMMING","Rating":2300,"Points":1000,"Tags":["data structures","graphs","shortest paths"]},{"ContestId":786,"Index":"A","Name":"Berzerk","Type":"PROGRAMMING","Rating":2000,"Points":750,"Tags":["dfs and similar","dp","games"]},{"ContestId":785,"Index":"E","Name":"Anton and Permutation","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["brute force","data structures"]},{"ContestId":785,"Index":"D","Name":"Anton and School - 2","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":785,"Index":"C","Name":"Anton and Fairy Tale","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","math"]},{"ContestId":785,"Index":"B","Name":"Anton and Classes","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":785,"Index":"A","Name":"Anton and Polyhedrons","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":784,"Index":"G","Name":"BF Calculator","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":784,"Index":"F","Name":"Crunching Numbers Just for You","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special","implementation"]},{"ContestId":784,"Index":"E","Name":"Twisted Circuit","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special","brute force","implementation"]},{"ContestId":784,"Index":"D","Name":"Touchy-Feely Palindromes","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special","implementation"]},{"ContestId":784,"Index":"C","Name":"INTERCALC","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","implementation"]},{"ContestId":784,"Index":"B","Name":"Kids' Riddle","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":784,"Index":"A","Name":"Numbers Joke","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special"]},{"ContestId":780,"Index":"H","Name":"Intranet of Buses","Type":"PROGRAMMING","Rating":3100,"Points":3500,"Tags":["binary search","geometry","implementation","two pointers"]},{"ContestId":780,"Index":"G","Name":"Andryusha and Nervous Barriers","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["data structures","dp"]},{"ContestId":780,"Index":"F","Name":"Axel and Marston in Bitland","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["bitmasks","dp","graphs","matrices"]},{"ContestId":780,"Index":"E","Name":"Underground Lab","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":780,"Index":"D","Name":"Innokenty and a Football League","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["2-sat","graphs","greedy","implementation","shortest paths","strings"]},{"ContestId":780,"Index":"C","Name":"Andryusha and Colored Balloons","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["dfs and similar","graphs","greedy","trees"]},{"ContestId":780,"Index":"B","Name":"The Meeting Place Cannot Be Changed","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search"]},{"ContestId":780,"Index":"A","Name":"Andryusha and Socks","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":779,"Index":"C","Name":"Dishonest Sellers","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":779,"Index":"B","Name":"Weird Rounding","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","greedy"]},{"ContestId":779,"Index":"A","Name":"Pupils Redistribution","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":778,"Index":"E","Name":"Selling Numbers","Type":"PROGRAMMING","Rating":3000,"Points":2250,"Tags":["dp","sortings"]},{"ContestId":778,"Index":"D","Name":"Parquet Re-laying","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["constructive algorithms"]},{"ContestId":778,"Index":"C","Name":"Peterson Polyglot","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["brute force","dfs and similar","dsu","hashing","strings","trees"]},{"ContestId":778,"Index":"B","Name":"Bitwise Formula","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["bitmasks","brute force","dfs and similar","expression parsing","implementation"]},{"ContestId":778,"Index":"A","Name":"String Game","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["binary search","greedy","strings"]},{"ContestId":777,"Index":"E","Name":"Hanoi Factory","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["brute force","data structures","dp","greedy","sortings"]},{"ContestId":777,"Index":"D","Name":"Cloud of Hashtags","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["binary search","greedy","implementation","strings"]},{"ContestId":777,"Index":"C","Name":"Alyona and Spreadsheet","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","data structures","dp","greedy","implementation","two pointers"]},{"ContestId":777,"Index":"B","Name":"Game of Credit Cards","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["data structures","dp","greedy","sortings"]},{"ContestId":777,"Index":"A","Name":"Shell Game","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":776,"Index":"G","Name":"Sherlock and the Encrypted Data","Type":"PROGRAMMING","Rating":2900,"Points":3250,"Tags":["bitmasks","combinatorics","dp"]},{"ContestId":776,"Index":"F","Name":"Sherlock's bet to Moriarty","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["constructive algorithms","data structures","divide and conquer","geometry","graphs","implementation","trees"]},{"ContestId":776,"Index":"E","Name":"The Holmes Children","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["math","number theory"]},{"ContestId":776,"Index":"D","Name":"The Door Problem","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["2-sat","dfs and similar","dsu","graphs"]},{"ContestId":776,"Index":"C","Name":"Molly's Chemicals","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["binary search","brute force","data structures","implementation","math"]},{"ContestId":776,"Index":"B","Name":"Sherlock and his girlfriend","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","number theory"]},{"ContestId":776,"Index":"A","Name":"A Serial Killer","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation","strings"]},{"ContestId":775,"Index":"A","Name":"University Schedule","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["*special"]},{"ContestId":774,"Index":"L","Name":"Bars","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special","binary search"]},{"ContestId":774,"Index":"K","Name":"Stepan and Vowels","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","implementation","strings"]},{"ContestId":774,"Index":"J","Name":"Stepan's Series","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special","dp"]},{"ContestId":774,"Index":"I","Name":"Composing Of String","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special","dp"]},{"ContestId":774,"Index":"H","Name":"Repairing Of String","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special","constructive algorithms"]},{"ContestId":774,"Index":"G","Name":"Perfectionist Arkadiy","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["*special","number theory"]},{"ContestId":774,"Index":"F","Name":"Pens And Days Of Week","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["*special","binary search","number theory"]},{"ContestId":774,"Index":"E","Name":"Big Number and Remainder","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special","math","number theory"]},{"ContestId":774,"Index":"D","Name":"Lie or Truth","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","constructive algorithms","implementation","sortings"]},{"ContestId":774,"Index":"C","Name":"Maximum Number","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["*special","constructive algorithms","greedy","implementation"]},{"ContestId":774,"Index":"B","Name":"Significant Cups","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special","binary search","data structures","two pointers"]},{"ContestId":774,"Index":"A","Name":"Amusement Park","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special","ternary search"]},{"ContestId":773,"Index":"F","Name":"Test Data Generation","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["combinatorics","divide and conquer","dp","fft","math","number theory"]},{"ContestId":773,"Index":"E","Name":"Blog Post Rating","Type":"PROGRAMMING","Rating":3000,"Points":2750,"Tags":["data structures","sortings"]},{"ContestId":773,"Index":"D","Name":"Perishable Roads","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["dp","graphs","shortest paths"]},{"ContestId":773,"Index":"C","Name":"Prairie Partition","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["binary search","constructive algorithms","greedy","math"]},{"ContestId":773,"Index":"B","Name":"Dynamic Problem Scoring","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["brute force","greedy"]},{"ContestId":773,"Index":"A","Name":"Success Rate","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["binary search","math"]},{"ContestId":772,"Index":"E","Name":"Verifying Kingdom","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["binary search","divide and conquer","interactive","trees"]},{"ContestId":772,"Index":"D","Name":"Varying Kibibits","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["bitmasks","dp"]},{"ContestId":772,"Index":"C","Name":"Vulnerable Kerbals","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["constructive algorithms","dp","graphs","math","number theory"]},{"ContestId":772,"Index":"B","Name":"Volatile Kite","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["geometry"]},{"ContestId":772,"Index":"A","Name":"Voltage Keepsake","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["binary search","math"]},{"ContestId":771,"Index":"F","Name":"Bear and Isomorphic Points","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["geometry","two pointers"]},{"ContestId":771,"Index":"E","Name":"Bear and Rectangle Strips","Type":"PROGRAMMING","Rating":3000,"Points":2250,"Tags":["dp","greedy"]},{"ContestId":771,"Index":"D","Name":"Bear and Company","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["dp"]},{"ContestId":771,"Index":"C","Name":"Bear and Tree Jumps","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["dfs and similar","dp","trees"]},{"ContestId":771,"Index":"B","Name":"Bear and Different Names","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":771,"Index":"A","Name":"Bear and Friendship Condition","Type":"PROGRAMMING","Rating":1500,"Points":250,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":770,"Index":"D","Name":"Draw Brackets!","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["*special","implementation"]},{"ContestId":770,"Index":"C","Name":"Online Courses In BSU","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["*special","dfs and similar","graphs","implementation"]},{"ContestId":770,"Index":"B","Name":"Maximize Sum of Digits","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["*special","implementation","math"]},{"ContestId":770,"Index":"A","Name":"New Password","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["*special","implementation"]},{"ContestId":769,"Index":"D","Name":"k-Interesting Pairs Of Integers","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["*special","bitmasks","brute force","meet-in-the-middle"]},{"ContestId":769,"Index":"C","Name":"Cycle In Maze","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["*special","dfs and similar","graphs","greedy","shortest paths"]},{"ContestId":769,"Index":"B","Name":"News About Credit","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["*special","greedy","two pointers"]},{"ContestId":769,"Index":"A","Name":"Year of University Entrance","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["*special","implementation","sortings"]},{"ContestId":768,"Index":"G","Name":"The Winds of Winter","Type":"PROGRAMMING","Rating":3300,"Points":2750,"Tags":["binary search","data structures"]},{"ContestId":768,"Index":"F","Name":"Barrels and boxes","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["brute force","combinatorics","math","number theory","probabilities"]},{"ContestId":768,"Index":"E","Name":"Game of Stones","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["bitmasks","dp","games"]},{"ContestId":768,"Index":"D","Name":"Jon and Orbs","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["dp","math","probabilities"]},{"ContestId":768,"Index":"C","Name":"Jon Snow and his Favourite Number","Type":"PROGRAMMING","Rating":1800,"Points":1250,"Tags":["brute force","dp","implementation","sortings"]},{"ContestId":768,"Index":"B","Name":"Code For 1","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["constructive algorithms","dfs and similar","divide and conquer"]},{"ContestId":768,"Index":"A","Name":"Oath of the Night's Watch","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["constructive algorithms","sortings"]},{"ContestId":767,"Index":"E","Name":"Change-free","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["greedy"]},{"ContestId":767,"Index":"D","Name":"Cartons of milk","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","data structures","greedy","sortings","two pointers"]},{"ContestId":767,"Index":"C","Name":"Garland","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dfs and similar","graphs","greedy","trees"]},{"ContestId":767,"Index":"B","Name":"The Queue","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["brute force","greedy"]},{"ContestId":767,"Index":"A","Name":"Snacktower","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["data structures","implementation"]},{"ContestId":766,"Index":"E","Name":"Mahmoud and a xor trip","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["bitmasks","constructive algorithms","data structures","dfs and similar","dp","math","trees"]},{"ContestId":766,"Index":"D","Name":"Mahmoud and a Dictionary","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["data structures","dfs and similar","dp","dsu","graphs"]},{"ContestId":766,"Index":"C","Name":"Mahmoud and a Message","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","dp","greedy","strings"]},{"ContestId":766,"Index":"B","Name":"Mahmoud and a Triangle","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","geometry","greedy","math","number theory","sortings"]},{"ContestId":766,"Index":"A","Name":"Mahmoud and Longest Uncommon Subsequence","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","strings"]},{"ContestId":765,"Index":"G","Name":"Math, math everywhere","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["brute force","dp","math","meet-in-the-middle","number theory"]},{"ContestId":765,"Index":"F","Name":"Souvenirs","Type":"PROGRAMMING","Rating":3100,"Points":3250,"Tags":["data structures"]},{"ContestId":765,"Index":"E","Name":"Tree Folding","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["dfs and similar","dp","greedy","implementation","trees"]},{"ContestId":765,"Index":"D","Name":"Artsem and Saunders","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["constructive algorithms","dsu","math"]},{"ContestId":765,"Index":"C","Name":"Table Tennis Game 2","Type":"PROGRAMMING","Rating":1200,"Points":1250,"Tags":["math"]},{"ContestId":765,"Index":"B","Name":"Code obfuscation","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","implementation","strings"]},{"ContestId":765,"Index":"A","Name":"Neverending competitions","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":764,"Index":"B","Name":"Timofey and cubes","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":764,"Index":"A","Name":"Taymyr is calling you","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":763,"Index":"E","Name":"Timofey and our friends animals","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["data structures","divide and conquer","dsu"]},{"ContestId":763,"Index":"D","Name":"Timofey and a flat tree","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["data structures","graphs","hashing","shortest paths","trees"]},{"ContestId":763,"Index":"C","Name":"Timofey and remoduling","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["brute force","implementation","math","number theory"]},{"ContestId":763,"Index":"B","Name":"Timofey and rectangles","Type":"PROGRAMMING","Rating":2100,"Points":750,"Tags":["constructive algorithms","geometry"]},{"ContestId":763,"Index":"A","Name":"Timofey and a tree","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["dfs and similar","dp","dsu","graphs","implementation","trees"]},{"ContestId":762,"Index":"F","Name":"Tree nesting","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["combinatorics","graphs","trees"]},{"ContestId":762,"Index":"E","Name":"Radio stations","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","data structures"]},{"ContestId":762,"Index":"D","Name":"Maximum path","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","greedy","implementation"]},{"ContestId":762,"Index":"C","Name":"Two strings","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","hashing","strings","two pointers"]},{"ContestId":762,"Index":"B","Name":"USB vs. PS/2","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","implementation","sortings","two pointers"]},{"ContestId":762,"Index":"A","Name":"k-th divisor","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["math","number theory"]},{"ContestId":761,"Index":"F","Name":"Dasha and Photos","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["brute force","data structures","dp","implementation"]},{"ContestId":761,"Index":"E","Name":"Dasha and Puzzle","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"ContestId":761,"Index":"D","Name":"Dasha and Very Difficult Problem","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["binary search","brute force","constructive algorithms","greedy","sortings"]},{"ContestId":761,"Index":"C","Name":"Dasha and Password","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["brute force","dp","implementation"]},{"ContestId":761,"Index":"B","Name":"Dasha and friends","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","implementation","math"]},{"ContestId":761,"Index":"A","Name":"Dasha and Stairs","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","constructive algorithms","implementation","math"]},{"ContestId":760,"Index":"B","Name":"Frodo and pillows","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","greedy"]},{"ContestId":760,"Index":"A","Name":"Petr and a calendar","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":758,"Index":"F","Name":"Geometrical Progression","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["brute force","math","number theory"]},{"ContestId":758,"Index":"E","Name":"Broken Tree","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["dfs and similar","dp","graphs","greedy","trees"]},{"ContestId":758,"Index":"D","Name":"Ability To Convert","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["constructive algorithms","dp","greedy","math","strings"]},{"ContestId":758,"Index":"C","Name":"Unfair Poll","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","constructive algorithms","implementation","math"]},{"ContestId":758,"Index":"B","Name":"Blown Garland","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","implementation","number theory"]},{"ContestId":758,"Index":"A","Name":"Holiday Of Equality","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":757,"Index":"G","Name":"Can Bash Save the Day?","Type":"PROGRAMMING","Rating":3400,"Points":3500,"Tags":["data structures","divide and conquer","graphs","trees"]},{"ContestId":757,"Index":"F","Name":"Team Rocket Rises Again","Type":"PROGRAMMING","Rating":2800,"Points":2750,"Tags":["data structures","graphs","shortest paths"]},{"ContestId":757,"Index":"E","Name":"Bash Plays with Functions","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["brute force","combinatorics","dp","number theory"]},{"ContestId":757,"Index":"D","Name":"Felicity's Big Secret Revealed","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["bitmasks","dp"]},{"ContestId":757,"Index":"C","Name":"Felicity is Coming!","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["data structures","hashing","sortings","strings"]},{"ContestId":757,"Index":"B","Name":"Bash's Big Day","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","math","number theory"]},{"ContestId":757,"Index":"A","Name":"Gotta Catch Em' All!","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":756,"Index":"F","Name":"Long number","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["expression parsing","math","number theory"]},{"ContestId":756,"Index":"E","Name":"Byteland coins","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["combinatorics","dp","math"]},{"ContestId":756,"Index":"D","Name":"Bacterial Melee","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["brute force","combinatorics","dp","string suffix structures"]},{"ContestId":756,"Index":"C","Name":"Nikita and stack","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["data structures"]},{"ContestId":756,"Index":"B","Name":"Travel Card","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search","dp"]},{"ContestId":756,"Index":"A","Name":"Pavel and barbecue","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["constructive algorithms","dfs and similar"]},{"ContestId":755,"Index":"G","Name":"PolandBall and Many Other Balls","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["combinatorics","divide and conquer","dp","fft","math","number theory"]},{"ContestId":755,"Index":"F","Name":"PolandBall and Gifts","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["bitmasks","dp","greedy"]},{"ContestId":755,"Index":"E","Name":"PolandBall and White-Red graph","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["constructive algorithms","graphs","shortest paths"]},{"ContestId":755,"Index":"D","Name":"PolandBall and Polygon","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["data structures"]},{"ContestId":755,"Index":"C","Name":"PolandBall and Forest","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["dfs and similar","dsu","graphs","interactive","trees"]},{"ContestId":755,"Index":"B","Name":"PolandBall and Game","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["binary search","data structures","games","greedy","sortings","strings"]},{"ContestId":755,"Index":"A","Name":"PolandBall and Hypothesis","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","graphs","math","number theory"]},{"ContestId":754,"Index":"E","Name":"Dasha and cyclic table","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["bitmasks","brute force","fft","strings","trees"]},{"ContestId":754,"Index":"D","Name":"Fedor and coupons","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","data structures","greedy","sortings"]},{"ContestId":754,"Index":"C","Name":"Vladik and chat","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["brute force","constructive algorithms","dp","implementation","strings"]},{"ContestId":754,"Index":"B","Name":"Ilya and tic-tac-toe game","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":754,"Index":"A","Name":"Lesha and array splitting","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":753,"Index":"C","Name":"Interactive Bulls and Cows (Hard)","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["brute force","constructive algorithms","interactive"]},{"ContestId":753,"Index":"B","Name":"Interactive Bulls and Cows (Easy)","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":753,"Index":"A","Name":"Santa Claus and Candies","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["dp","greedy","math"]},{"ContestId":750,"Index":"H","Name":"New Year and Snowy Grid","Type":"PROGRAMMING","Rating":3500,"Points":3500,"Tags":["dfs and similar","dsu","graphs","interactive"]},{"ContestId":750,"Index":"G","Name":"New Year and Binary Tree Paths","Type":"PROGRAMMING","Rating":3200,"Points":3250,"Tags":["bitmasks","brute force","combinatorics","dp"]},{"ContestId":750,"Index":"F","Name":"New Year and Finding Roots","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["constructive algorithms","implementation","interactive","trees"]},{"ContestId":750,"Index":"E","Name":"New Year and Old Subsequence","Type":"PROGRAMMING","Rating":2600,"Points":2250,"Tags":["data structures","divide and conquer","dp","matrices"]},{"ContestId":750,"Index":"D","Name":"New Year and Fireworks","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","data structures","dfs and similar","dp","implementation"]},{"ContestId":750,"Index":"C","Name":"New Year and Rating","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search","greedy","math"]},{"ContestId":750,"Index":"B","Name":"New Year and North Pole","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["geometry","implementation"]},{"ContestId":750,"Index":"A","Name":"New Year and Hurry","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["binary search","brute force","implementation","math"]},{"ContestId":749,"Index":"E","Name":"Inversions After Shuffle","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","probabilities"]},{"ContestId":749,"Index":"D","Name":"Leaving Auction","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","data structures"]},{"ContestId":749,"Index":"C","Name":"Voting","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["greedy","implementation","two pointers"]},{"ContestId":749,"Index":"B","Name":"Parallelogram is Back","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","constructive algorithms","geometry"]},{"ContestId":749,"Index":"A","Name":"Bachgold Problem","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","math","number theory"]},{"ContestId":748,"Index":"F","Name":"Santa Clauses and a Soccer Championship","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"ContestId":748,"Index":"E","Name":"Santa Claus and Tangerines","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["binary search","data structures","greedy","two pointers"]},{"ContestId":748,"Index":"D","Name":"Santa Claus and a Palindrome","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":748,"Index":"C","Name":"Santa Claus and Robot","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","math"]},{"ContestId":748,"Index":"B","Name":"Santa Claus and Keyboard Check","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":748,"Index":"A","Name":"Santa Claus and a Place in a Class","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":747,"Index":"F","Name":"Igor and Interesting Numbers","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["brute force","combinatorics","dp","math"]},{"ContestId":747,"Index":"E","Name":"Comments","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["dfs and similar","expression parsing","implementation","strings"]},{"ContestId":747,"Index":"D","Name":"Winter Is Coming","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dp","greedy","sortings"]},{"ContestId":747,"Index":"C","Name":"Servers","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["implementation"]},{"ContestId":747,"Index":"B","Name":"Mammoth's Genome Decoding","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":747,"Index":"A","Name":"Display Size","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","math"]},{"ContestId":746,"Index":"G","Name":"New Roads","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["constructive algorithms","graphs","trees"]},{"ContestId":746,"Index":"F","Name":"Music in Car","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["data structures","greedy","two pointers"]},{"ContestId":746,"Index":"E","Name":"Numbers Exchange","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["greedy","implementation","math"]},{"ContestId":746,"Index":"D","Name":"Green and Black Tea","Type":"PROGRAMMING","Rating":1500,"Points":2000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":746,"Index":"C","Name":"Tram","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":746,"Index":"B","Name":"Decoding","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":746,"Index":"A","Name":"Compote","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":745,"Index":"B","Name":"Hongcow Solves A Puzzle","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation"]},{"ContestId":745,"Index":"A","Name":"Hongcow Learns the Cyclic Shift","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","strings"]},{"ContestId":744,"Index":"E","Name":"Hongcow Masters the Cyclic Shift","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["strings","two pointers"]},{"ContestId":744,"Index":"D","Name":"Hongcow Draws a Circle","Type":"PROGRAMMING","Rating":3200,"Points":2250,"Tags":["geometry"]},{"ContestId":744,"Index":"C","Name":"Hongcow Buys a Deck of Cards","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["bitmasks","brute force","dp"]},{"ContestId":744,"Index":"B","Name":"Hongcow's Game","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["bitmasks","divide and conquer","interactive"]},{"ContestId":744,"Index":"A","Name":"Hongcow Builds A Nation","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["dfs and similar","graphs"]},{"ContestId":743,"Index":"E","Name":"Vladik and cards","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["binary search","bitmasks","brute force","dp"]},{"ContestId":743,"Index":"D","Name":"Chloe and pleasant prizes","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":743,"Index":"C","Name":"Vladik and fractions","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["brute force","constructive algorithms","math","number theory"]},{"ContestId":743,"Index":"B","Name":"Chloe and the sequence ","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["binary search","bitmasks","constructive algorithms","implementation"]},{"ContestId":743,"Index":"A","Name":"Vladik and flights","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":742,"Index":"B","Name":"Arpa‚Äôs obvious problem and Mehrdad‚Äôs terrible solution","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","math","number theory"]},{"ContestId":742,"Index":"A","Name":"Arpa‚Äôs hard exam and Mehrdad‚Äôs naive cheat","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","math","number theory"]},{"ContestId":741,"Index":"E","Name":"Arpa‚Äôs abnormal DNA and Mehrdad‚Äôs deep interest","Type":"PROGRAMMING","Rating":3400,"Points":2500,"Tags":["data structures","string suffix structures"]},{"ContestId":741,"Index":"D","Name":"Arpa‚Äôs letter-marked tree and Mehrdad‚Äôs Dokhtar-kosh paths","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":741,"Index":"C","Name":"Arpa‚Äôs overnight party and Mehrdad‚Äôs silent entering","Type":"PROGRAMMING","Rating":2600,"Points":1250,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":741,"Index":"B","Name":"Arpa's weak amphitheater and Mehrdad's valuable Hoses","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["dfs and similar","dp","dsu"]},{"ContestId":741,"Index":"A","Name":"Arpa's loud Owf and Mehrdad's evil plan","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["dfs and similar","math"]},{"ContestId":740,"Index":"B","Name":"Alyona and flowers","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":740,"Index":"A","Name":"Alyona and copybooks","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":739,"Index":"E","Name":"Gosha is hunting","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["brute force","data structures","dp","flows","math","probabilities","sortings"]},{"ContestId":739,"Index":"D","Name":"Recover a functional graph","Type":"PROGRAMMING","Rating":3400,"Points":2000,"Tags":["graph matchings"]},{"ContestId":739,"Index":"C","Name":"Alyona and towers","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["data structures"]},{"ContestId":739,"Index":"B","Name":"Alyona and a tree","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["binary search","data structures","dfs and similar","graphs","trees"]},{"ContestId":739,"Index":"A","Name":"Alyona and mex","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":737,"Index":"F","Name":"Dirty plates","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["constructive algorithms","math"]},{"ContestId":737,"Index":"E","Name":"Tanya is 5!","Type":"PROGRAMMING","Rating":3300,"Points":2000,"Tags":["graph matchings","graphs","greedy","schedules"]},{"ContestId":736,"Index":"E","Name":"Chess Championship","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["constructive algorithms","flows","greedy","math"]},{"ContestId":736,"Index":"D","Name":"Permutations","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["math","matrices"]},{"ContestId":735,"Index":"E","Name":"Ostap and Tree","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dp","trees"]},{"ContestId":735,"Index":"D","Name":"Taxes","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["math","number theory"]},{"ContestId":735,"Index":"C","Name":"Tennis Championship","Type":"PROGRAMMING","Rating":1600,"Points":1750,"Tags":["combinatorics","constructive algorithms","greedy","math"]},{"ContestId":735,"Index":"B","Name":"Urbanization","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","number theory","sortings"]},{"ContestId":735,"Index":"A","Name":"Ostap and Grasshopper","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":734,"Index":"F","Name":"Anton and School","Type":"PROGRAMMING","Rating":2500,"Points":2750,"Tags":["bitmasks","constructive algorithms","implementation","math"]},{"ContestId":734,"Index":"E","Name":"Anton and Tree","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["dfs and similar","dp","trees"]},{"ContestId":734,"Index":"D","Name":"Anton and Chess","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["implementation"]},{"ContestId":734,"Index":"C","Name":"Anton and Making Potions","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["binary search","dp","greedy","two pointers"]},{"ContestId":734,"Index":"B","Name":"Anton and Digits","Type":"PROGRAMMING","Rating":800,"Points":750,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":734,"Index":"A","Name":"Anton and Danik","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":733,"Index":"F","Name":"Drivers Dissatisfaction","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["data structures","dsu","graphs","trees"]},{"ContestId":733,"Index":"E","Name":"Sleep in Class","Type":"PROGRAMMING","Rating":2400,"Points":2750,"Tags":["constructive algorithms","data structures","math","two pointers"]},{"ContestId":733,"Index":"D","Name":"Kostya the Sculptor","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["data structures","hashing"]},{"ContestId":733,"Index":"C","Name":"Epidemic in Monstropolis","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["constructive algorithms","dp","greedy","two pointers"]},{"ContestId":733,"Index":"B","Name":"Parade","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["math"]},{"ContestId":733,"Index":"A","Name":"Grasshopper And the String","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":732,"Index":"F","Name":"Tourist Reform","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["dfs and similar","graphs"]},{"ContestId":732,"Index":"E","Name":"Sockets","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["greedy","sortings"]},{"ContestId":732,"Index":"D","Name":"Exams","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["binary search","greedy","sortings"]},{"ContestId":732,"Index":"C","Name":"Sanatorium","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["binary search","constructive algorithms","greedy","implementation","math"]},{"ContestId":732,"Index":"B","Name":"Cormen --- The Best Friend Of a Man","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["dp","greedy"]},{"ContestId":732,"Index":"A","Name":"Buy a Shovel","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","constructive algorithms","implementation","math"]},{"ContestId":731,"Index":"F","Name":"Video Cards","Type":"PROGRAMMING","Rating":1900,"Points":3000,"Tags":["brute force","data structures","implementation","math","number theory"]},{"ContestId":731,"Index":"E","Name":"Funny Game","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["dp","games"]},{"ContestId":731,"Index":"D","Name":"80-th Level Archeology","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["brute force","data structures","greedy","sortings"]},{"ContestId":731,"Index":"C","Name":"Socks","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["dfs and similar","dsu","graphs","greedy"]},{"ContestId":731,"Index":"B","Name":"Coupons and Discounts","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","greedy"]},{"ContestId":731,"Index":"A","Name":"Night at the Museum","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":730,"Index":"L","Name":"Expression Queries","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["data structures"]},{"ContestId":730,"Index":"K","Name":"Roads Orientation Problem","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["graphs"]},{"ContestId":730,"Index":"J","Name":"Bottles","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dp"]},{"ContestId":730,"Index":"I","Name":"Olympiad in Programming and Sports","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp","flows","graphs","greedy"]},{"ContestId":730,"Index":"H","Name":"Delete Them","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["constructive algorithms","implementation"]},{"ContestId":730,"Index":"G","Name":"Car Repair Shop","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":730,"Index":"F","Name":"Ber Patio","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":[]},{"ContestId":730,"Index":"E","Name":"Award Ceremony","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":730,"Index":"D","Name":"Running Over The Bridges","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy","implementation","math"]},{"ContestId":730,"Index":"C","Name":"Bulmart","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["binary search","dfs and similar"]},{"ContestId":730,"Index":"B","Name":"Minimum and Maximum","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","interactive"]},{"ContestId":730,"Index":"A","Name":"Toda 2","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":729,"Index":"F","Name":"Financiers Game","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dp"]},{"ContestId":729,"Index":"E","Name":"Subordinates","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms","data structures","graphs","greedy","sortings"]},{"ContestId":729,"Index":"D","Name":"Sea Battle","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":729,"Index":"C","Name":"Road to Cinema","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["binary search","greedy","sortings"]},{"ContestId":729,"Index":"B","Name":"Spotlights","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["dp","implementation"]},{"ContestId":729,"Index":"A","Name":"Interview with Oleg","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","strings"]},{"ContestId":727,"Index":"F","Name":"Polycarp's problems","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["binary search","dp","greedy"]},{"ContestId":727,"Index":"E","Name":"Games on a CD","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["data structures","hashing","string suffix structures","strings"]},{"ContestId":727,"Index":"D","Name":"T-shirts Distribution","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["constructive algorithms","flows","greedy"]},{"ContestId":727,"Index":"C","Name":"Guess the Array","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","interactive","math"]},{"ContestId":727,"Index":"B","Name":"Bill Total Value","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["expression parsing","implementation","strings"]},{"ContestId":727,"Index":"A","Name":"Transformation: from A to B","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["brute force","dfs and similar","math"]},{"ContestId":725,"Index":"G","Name":"Messages on a Tree","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":[]},{"ContestId":725,"Index":"F","Name":"Family Photos","Type":"PROGRAMMING","Rating":2900,"Points":3250,"Tags":["games","greedy"]},{"ContestId":725,"Index":"E","Name":"Too Much Money","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["brute force","greedy"]},{"ContestId":725,"Index":"D","Name":"Contest Balloons","Type":"PROGRAMMING","Rating":1800,"Points":2250,"Tags":["data structures","greedy"]},{"ContestId":725,"Index":"C","Name":"Hidden Word","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","constructive algorithms","implementation","strings"]},{"ContestId":725,"Index":"B","Name":"Food on the Plane","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","math"]},{"ContestId":725,"Index":"A","Name":"Jumping Ball","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":724,"Index":"G","Name":"Xor-matic Number of the Graph","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["bitmasks","graphs","math","number theory","trees"]},{"ContestId":724,"Index":"F","Name":"Uniformly Branched Trees","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["combinatorics","dp","trees"]},{"ContestId":724,"Index":"E","Name":"Goods transportation","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["dp","flows","greedy"]},{"ContestId":724,"Index":"D","Name":"Dense Subsequence","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["data structures","greedy","strings"]},{"ContestId":724,"Index":"C","Name":"Ray Tracing","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["greedy","hashing","implementation","math","number theory","sortings"]},{"ContestId":724,"Index":"B","Name":"Batch Sort","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":724,"Index":"A","Name":"Checking the Calendar","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":723,"Index":"F","Name":"st-Spanning Tree","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["dsu","graphs","greedy","implementation"]},{"ContestId":723,"Index":"E","Name":"One-Way Reform","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["constructive algorithms","dfs and similar","flows","graphs","greedy"]},{"ContestId":723,"Index":"D","Name":"Lakes in Berland","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["dfs and similar","dsu","graphs","greedy","implementation"]},{"ContestId":723,"Index":"C","Name":"Polycarp at the Radio","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["greedy"]},{"ContestId":723,"Index":"B","Name":"Text Document Analysis","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["expression parsing","implementation","strings"]},{"ContestId":723,"Index":"A","Name":"The New Year: Meeting Friends","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math","sortings"]},{"ContestId":722,"Index":"F","Name":"Cyclic Cipher","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["chinese remainder theorem","data structures","implementation","number theory","two pointers"]},{"ContestId":722,"Index":"E","Name":"Research Rover","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["combinatorics","dp"]},{"ContestId":722,"Index":"D","Name":"Generating Sets","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["binary search","data structures","dfs and similar","greedy","strings","trees"]},{"ContestId":722,"Index":"C","Name":"Destroying Array","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["data structures","dsu"]},{"ContestId":722,"Index":"B","Name":"Verse Pattern","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation","strings"]},{"ContestId":722,"Index":"A","Name":"Broken Clock","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":721,"Index":"E","Name":"Road to Home","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["binary search","dp"]},{"ContestId":721,"Index":"D","Name":"Maxim and Array","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","data structures","greedy","math"]},{"ContestId":721,"Index":"C","Name":"Journey","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dp","graphs"]},{"ContestId":721,"Index":"B","Name":"Passwords","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation","math","sortings","strings"]},{"ContestId":721,"Index":"A","Name":"One-dimensional Japanese Crossword","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":720,"Index":"F","Name":"Array Covering","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["data structures"]},{"ContestId":720,"Index":"E","Name":"Cipher","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["implementation"]},{"ContestId":720,"Index":"D","Name":"Slalom","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["data structures","dp","sortings"]},{"ContestId":720,"Index":"C","Name":"Homework","Type":"PROGRAMMING","Rating":3100,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":720,"Index":"B","Name":"Cactusophobia","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dfs and similar","flows"]},{"ContestId":720,"Index":"A","Name":"Closing ceremony","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["greedy"]},{"ContestId":719,"Index":"B","Name":"Anatoly and Cockroaches","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy"]},{"ContestId":719,"Index":"A","Name":"Vitya in the Countryside","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":718,"Index":"E","Name":"Matvey's Birthday","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["bitmasks","graphs"]},{"ContestId":718,"Index":"D","Name":"Andrew and Chemistry","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["dp","hashing","trees"]},{"ContestId":718,"Index":"C","Name":"Sasha and Array","Type":"PROGRAMMING","Rating":2300,"Points":1250,"Tags":["data structures","math","matrices"]},{"ContestId":718,"Index":"A","Name":"Efim and Strange Grade","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["dp","implementation","math"]},{"ContestId":717,"Index":"I","Name":"Cowboy Beblop at his computer","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["geometry"]},{"ContestId":717,"Index":"H","Name":"Pokermon League challenge","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["math","probabilities"]},{"ContestId":717,"Index":"G","Name":"Underfail","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["flows"]},{"ContestId":717,"Index":"F","Name":"Heroes of Making Magic III","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures"]},{"ContestId":717,"Index":"E","Name":"Paint it really, really dark gray","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar"]},{"ContestId":717,"Index":"D","Name":"Dexterina‚Äôs Lab","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["games","matrices","probabilities"]},{"ContestId":717,"Index":"C","Name":"Potions Homework","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":717,"Index":"B","Name":"R3D3‚Äôs Summer Adventure","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["dp","greedy"]},{"ContestId":717,"Index":"A","Name":"Festival Organization","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["combinatorics","math","number theory"]},{"ContestId":716,"Index":"B","Name":"Complete the Word","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","two pointers"]},{"ContestId":716,"Index":"A","Name":"Crazy Computer","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":715,"Index":"E","Name":"Complete the Permutations","Type":"PROGRAMMING","Rating":3400,"Points":2750,"Tags":["combinatorics","fft","graphs","math"]},{"ContestId":715,"Index":"D","Name":"Create a Maze","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["constructive algorithms"]},{"ContestId":715,"Index":"C","Name":"Digit Tree","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["dfs and similar","divide and conquer","dsu","trees"]},{"ContestId":715,"Index":"B","Name":"Complete The Graph","Type":"PROGRAMMING","Rating":2300,"Points":1000,"Tags":["binary search","constructive algorithms","graphs","shortest paths"]},{"ContestId":715,"Index":"A","Name":"Plus and Square Root","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":714,"Index":"B","Name":"Filya and Homework","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":714,"Index":"A","Name":"Meeting of Old Friends","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","math"]},{"ContestId":713,"Index":"E","Name":"Sonya Partymaker","Type":"PROGRAMMING","Rating":3300,"Points":2000,"Tags":["binary search","dp"]},{"ContestId":713,"Index":"D","Name":"Animals and Puzzle","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["binary search","data structures"]},{"ContestId":713,"Index":"C","Name":"Sonya and Problem Wihtout a Legend","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["dp","sortings"]},{"ContestId":713,"Index":"B","Name":"Searching Rectangles","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["binary search","constructive algorithms","interactive"]},{"ContestId":713,"Index":"A","Name":"Sonya and Queries","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["data structures","implementation"]},{"ContestId":712,"Index":"E","Name":"Memory and Casinos","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","math","probabilities"]},{"ContestId":712,"Index":"D","Name":"Memory and Scores","Type":"PROGRAMMING","Rating":2200,"Points":2250,"Tags":["combinatorics","dp","math"]},{"ContestId":712,"Index":"C","Name":"Memory and De-Evolution","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["greedy","math"]},{"ContestId":712,"Index":"B","Name":"Memory and Trident","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":712,"Index":"A","Name":"Memory and Crow","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":711,"Index":"E","Name":"ZS and The Birthday Paradox","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["math","number theory","probabilities"]},{"ContestId":711,"Index":"D","Name":"Directed Roads","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["combinatorics","dfs and similar","graphs","math"]},{"ContestId":711,"Index":"C","Name":"Coloring Trees","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dp"]},{"ContestId":711,"Index":"B","Name":"Chris and Magic Square","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":711,"Index":"A","Name":"Bus to Udayland","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":710,"Index":"F","Name":"String Set Queries","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","data structures","hashing","interactive","string suffix structures","strings"]},{"ContestId":710,"Index":"E","Name":"Generate a String","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dfs and similar","dp"]},{"ContestId":710,"Index":"D","Name":"Two Arithmetic Progressions","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["math","number theory"]},{"ContestId":710,"Index":"C","Name":"Magic Odd Square","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":710,"Index":"B","Name":"Optimal Point on a Line","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","sortings"]},{"ContestId":710,"Index":"A","Name":"King Moves","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":709,"Index":"B","Name":"Checkpoints","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","implementation","sortings"]},{"ContestId":709,"Index":"A","Name":"Juicer","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":708,"Index":"E","Name":"Student's Camp","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["dp","math"]},{"ContestId":708,"Index":"D","Name":"Incorrect Flow","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["flows"]},{"ContestId":708,"Index":"C","Name":"Centroids","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["data structures","dfs and similar","dp","graphs","greedy","trees"]},{"ContestId":708,"Index":"B","Name":"Recover the String","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":708,"Index":"A","Name":"Letters Cyclic Shift","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["constructive algorithms","greedy","implementation","strings"]},{"ContestId":707,"Index":"E","Name":"Garlands","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures"]},{"ContestId":707,"Index":"D","Name":"Persistent Bookcase ","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["bitmasks","data structures","dfs and similar","implementation"]},{"ContestId":707,"Index":"C","Name":"Pythagorean Triples","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["math","number theory"]},{"ContestId":707,"Index":"B","Name":"Bakery","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["graphs"]},{"ContestId":707,"Index":"A","Name":"Brain's Photos","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":706,"Index":"E","Name":"Working routine","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","implementation"]},{"ContestId":706,"Index":"D","Name":"Vasiliy's Multiset","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["binary search","bitmasks","data structures","trees"]},{"ContestId":706,"Index":"C","Name":"Hard problem","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["dp","strings"]},{"ContestId":706,"Index":"B","Name":"Interesting drink","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["binary search","dp","implementation"]},{"ContestId":706,"Index":"A","Name":"Beru-taxi","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","geometry","implementation"]},{"ContestId":705,"Index":"B","Name":"Spider Man","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["games","math"]},{"ContestId":705,"Index":"A","Name":"Hulk","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":704,"Index":"E","Name":"Iron Man","Type":"PROGRAMMING","Rating":3300,"Points":2500,"Tags":["data structures","geometry","trees"]},{"ContestId":704,"Index":"D","Name":"Captain America","Type":"PROGRAMMING","Rating":3100,"Points":2000,"Tags":["flows","greedy"]},{"ContestId":704,"Index":"C","Name":"Black Widow","Type":"PROGRAMMING","Rating":2900,"Points":1250,"Tags":["dp","graphs","implementation","math"]},{"ContestId":704,"Index":"B","Name":"Ant Man","Type":"PROGRAMMING","Rating":2500,"Points":1250,"Tags":["dp","graphs","greedy"]},{"ContestId":704,"Index":"A","Name":"Thor","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["brute force","data structures","implementation"]},{"ContestId":703,"Index":"E","Name":"Mishka and Divisors","Type":"PROGRAMMING","Rating":2600,"Points":2250,"Tags":["dp","number theory"]},{"ContestId":703,"Index":"D","Name":"Mishka and Interesting sum","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["data structures"]},{"ContestId":703,"Index":"C","Name":"Chris and Road","Type":"PROGRAMMING","Rating":2100,"Points":1750,"Tags":["geometry","implementation"]},{"ContestId":703,"Index":"B","Name":"Mishka and trip","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","math"]},{"ContestId":703,"Index":"A","Name":"Mishka and Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":702,"Index":"F","Name":"T-Shirts","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["data structures"]},{"ContestId":702,"Index":"E","Name":"Analysis of Pathes in Functional Graph","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","graphs"]},{"ContestId":702,"Index":"D","Name":"Road to Post Office","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["math"]},{"ContestId":702,"Index":"C","Name":"Cellular Network","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["binary search","implementation","two pointers"]},{"ContestId":702,"Index":"B","Name":"Powers of Two","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","data structures","implementation","math"]},{"ContestId":702,"Index":"A","Name":"Maximum Increase","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["dp","greedy","implementation"]},{"ContestId":701,"Index":"C","Name":"They Are Everywhere","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","strings","two pointers"]},{"ContestId":701,"Index":"B","Name":"Cells Not Under Attack","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["data structures","math"]},{"ContestId":701,"Index":"A","Name":"Cards","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":700,"Index":"E","Name":"Cool Slogans","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["string suffix structures","strings"]},{"ContestId":700,"Index":"D","Name":"Huffman Coding on Segment","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["data structures","greedy"]},{"ContestId":700,"Index":"C","Name":"Break Up","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["dfs and similar","graphs"]},{"ContestId":700,"Index":"B","Name":"Connecting Universities","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":700,"Index":"A","Name":"As Fast As Possible","Type":"PROGRAMMING","Rating":1900,"Points":500,"Tags":["binary search","math"]},{"ContestId":699,"Index":"B","Name":"One Bomb","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation"]},{"ContestId":699,"Index":"A","Name":"Launch of Collider","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":698,"Index":"F","Name":"Coprime Permutation","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["combinatorics","number theory"]},{"ContestId":698,"Index":"E","Name":"Cron","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":[]},{"ContestId":698,"Index":"D","Name":"Limak and Shooting Points","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["brute force","geometry","math"]},{"ContestId":698,"Index":"C","Name":"LRU","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["bitmasks","dp","math","probabilities"]},{"ContestId":698,"Index":"B","Name":"Fix a Tree","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","dfs and similar","dsu","graphs","trees"]},{"ContestId":698,"Index":"A","Name":"Vacations","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["dp"]},{"ContestId":697,"Index":"B","Name":"Barnicle","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","implementation","math","strings"]},{"ContestId":697,"Index":"A","Name":"Pineapple Incident","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":696,"Index":"F","Name":"...Dary!","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["binary search","geometry","two pointers"]},{"ContestId":696,"Index":"E","Name":"...Wait for it...","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["data structures","dsu","trees"]},{"ContestId":696,"Index":"D","Name":"Legen...","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["data structures","dp","matrices","strings"]},{"ContestId":696,"Index":"C","Name":"PLEASE","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["combinatorics","dp","implementation","math","matrices"]},{"ContestId":696,"Index":"B","Name":"Puzzles","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dfs and similar","math","probabilities","trees"]},{"ContestId":696,"Index":"A","Name":"Lorenzo Von Matterhorn","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","data structures","implementation","trees"]},{"ContestId":691,"Index":"F","Name":"Couple Cover","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","dp","number theory"]},{"ContestId":691,"Index":"E","Name":"Xor-sequences","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["matrices"]},{"ContestId":691,"Index":"D","Name":"Swaps in Permutation","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","dsu","math"]},{"ContestId":691,"Index":"C","Name":"Exponential notation","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["implementation","strings"]},{"ContestId":691,"Index":"B","Name":"s-palindrome","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation","strings"]},{"ContestId":691,"Index":"A","Name":"Fashion in Berland","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":690,"Index":"F3","Name":"Tree of Life (hard)","Type":"PROGRAMMING","Rating":3200,"Points":0,"Tags":["trees"]},{"ContestId":690,"Index":"F2","Name":"Tree of Life (medium)","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["constructive algorithms","hashing","trees"]},{"ContestId":690,"Index":"F1","Name":"Tree of Life (easy)","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":[]},{"ContestId":690,"Index":"E2","Name":"Photographs (II)","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":[]},{"ContestId":690,"Index":"E1","Name":"Photographs (I)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":[]},{"ContestId":690,"Index":"D3","Name":"The Wall (hard)","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp"]},{"ContestId":690,"Index":"D2","Name":"The Wall (medium)","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["combinatorics"]},{"ContestId":690,"Index":"D1","Name":"The Wall (easy)","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":[]},{"ContestId":690,"Index":"C3","Name":"Brain Network (hard)","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["trees"]},{"ContestId":690,"Index":"C2","Name":"Brain Network (medium)","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":690,"Index":"C1","Name":"Brain Network (easy)","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":[]},{"ContestId":690,"Index":"B3","Name":"Recover Polygon (hard)","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures"]},{"ContestId":690,"Index":"B2","Name":"Recover Polygon (medium)","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["geometry"]},{"ContestId":690,"Index":"B1","Name":"Recover Polygon (easy)","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":[]},{"ContestId":690,"Index":"A3","Name":"Collective Mindsets (hard)","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":[]},{"ContestId":690,"Index":"A2","Name":"Collective Mindsets (medium)","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":[]},{"ContestId":690,"Index":"A1","Name":"Collective Mindsets (easy)","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":[]},{"ContestId":689,"Index":"E","Name":"Mike and Geometry Problem","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["combinatorics","data structures","dp","geometry","implementation"]},{"ContestId":689,"Index":"D","Name":"Friends and Subsequences","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","data structures"]},{"ContestId":689,"Index":"C","Name":"Mike and Chocolate Thieves","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","combinatorics","math"]},{"ContestId":689,"Index":"B","Name":"Mike and Shortcuts","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["dfs and similar","graphs","greedy","shortest paths"]},{"ContestId":689,"Index":"A","Name":"Mike and Cellphone","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":688,"Index":"B","Name":"Lovely Palindromes","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","math"]},{"ContestId":688,"Index":"A","Name":"Opponents","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":687,"Index":"E","Name":"TOF","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["dfs and similar","graphs"]},{"ContestId":687,"Index":"D","Name":"Dividing Kingdom II","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["brute force","data structures","dsu","graphs","sortings"]},{"ContestId":687,"Index":"C","Name":"The Values You Can Make","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["dp"]},{"ContestId":687,"Index":"B","Name":"Remainders Game","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["chinese remainder theorem","math","number theory"]},{"ContestId":687,"Index":"A","Name":"NP-Hard Problem","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["dfs and similar","graphs"]},{"ContestId":686,"Index":"B","Name":"Little Robber Girl's Zoo","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","implementation","sortings"]},{"ContestId":686,"Index":"A","Name":"Free Ice Cream","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":685,"Index":"E","Name":"Travelling Through the Snow Queen's Kingdom","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["bitmasks","brute force","divide and conquer","graphs"]},{"ContestId":685,"Index":"D","Name":"Kay and Eternity","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["brute force","implementation","sortings"]},{"ContestId":685,"Index":"C","Name":"Optimal Point","Type":"PROGRAMMING","Rating":2900,"Points":1250,"Tags":["binary search","math"]},{"ContestId":685,"Index":"B","Name":"Kay and Snowflake","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["data structures","dfs and similar","dp","trees"]},{"ContestId":685,"Index":"A","Name":"Robbers' watch","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force","combinatorics","dp","math"]},{"ContestId":683,"Index":"J","Name":"The Hero with Bombs","Type":"PROGRAMMING","Rating":3000,"Points":0,"Tags":["*special"]},{"ContestId":683,"Index":"I","Name":"Loader","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["*special","graphs"]},{"ContestId":683,"Index":"H","Name":"Exchange of Books","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":683,"Index":"G","Name":"The Fraction","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":683,"Index":"F","Name":"Reformat the String","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":683,"Index":"E","Name":"Hammer throwing","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":683,"Index":"D","Name":"Chocolate Bar","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","math"]},{"ContestId":683,"Index":"C","Name":"Symmetric Difference","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":683,"Index":"B","Name":"The Teacher of Physical Education","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":683,"Index":"A","Name":"The Check of the Point","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["*special","geometry"]},{"ContestId":682,"Index":"E","Name":"Alyona and Triangles","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["geometry","two pointers"]},{"ContestId":682,"Index":"D","Name":"Alyona and Strings","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dp","strings"]},{"ContestId":682,"Index":"C","Name":"Alyona and the Tree","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":682,"Index":"B","Name":"Alyona and Mex","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["sortings"]},{"ContestId":682,"Index":"A","Name":"Alyona and Numbers","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":681,"Index":"E","Name":"Runaway to a Shadow","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["geometry","sortings"]},{"ContestId":681,"Index":"D","Name":"Gifts by the List","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"ContestId":681,"Index":"C","Name":"Heap Operations","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","data structures","greedy"]},{"ContestId":681,"Index":"B","Name":"Economy Game","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force"]},{"ContestId":681,"Index":"A","Name":"A Good Contest","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":680,"Index":"B","Name":"Bear and Finding Criminals","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":680,"Index":"A","Name":"Bear and Five Cards","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":679,"Index":"E","Name":"Bear and Bad Powers of 42","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["data structures"]},{"ContestId":679,"Index":"D","Name":"Bear and Chase","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["brute force","dfs and similar","graphs","implementation","math","probabilities"]},{"ContestId":679,"Index":"C","Name":"Bear and Square Grid","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["dfs and similar","dsu","implementation"]},{"ContestId":679,"Index":"B","Name":"Bear and Tower of Cubes","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["binary search","dp","greedy"]},{"ContestId":679,"Index":"A","Name":"Bear and Prime 100","Type":"PROGRAMMING","Rating":1400,"Points":750,"Tags":["constructive algorithms","interactive","math"]},{"ContestId":678,"Index":"F","Name":"Lena and Queries","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","divide and conquer","geometry"]},{"ContestId":678,"Index":"E","Name":"Another Sith Tournament","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["bitmasks","dp","math","probabilities"]},{"ContestId":678,"Index":"D","Name":"Iterated Linear Function","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["math","number theory"]},{"ContestId":678,"Index":"C","Name":"Joty and Chocolate","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation","math","number theory"]},{"ContestId":678,"Index":"B","Name":"The Same Calendar","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":678,"Index":"A","Name":"Johny Likes Numbers","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":677,"Index":"E","Name":"Vanya and Balloons","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["binary search","brute force","dp","implementation"]},{"ContestId":677,"Index":"D","Name":"Vanya and Treasure","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["data structures","dp","graphs","shortest paths"]},{"ContestId":677,"Index":"C","Name":"Vanya and Label","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["bitmasks","combinatorics","implementation","strings"]},{"ContestId":677,"Index":"B","Name":"Vanya and Food Processor","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","math"]},{"ContestId":677,"Index":"A","Name":"Vanya and Fence","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":676,"Index":"E","Name":"The Last Fight Between Human and AI","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["math"]},{"ContestId":676,"Index":"D","Name":"Theseus and labyrinth","Type":"PROGRAMMING","Rating":2000,"Points":2250,"Tags":["graphs","implementation","shortest paths"]},{"ContestId":676,"Index":"C","Name":"Vasya and String","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["binary search","dp","strings","two pointers"]},{"ContestId":676,"Index":"B","Name":"Pyramid of Glasses","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["implementation","math","math"]},{"ContestId":676,"Index":"A","Name":"Nicholas and Permutation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":675,"Index":"E","Name":"Trains and Statistic","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["data structures","dp","greedy"]},{"ContestId":675,"Index":"D","Name":"Tree Construction","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["data structures","trees"]},{"ContestId":675,"Index":"C","Name":"Money Transfers","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["constructive algorithms","data structures","greedy","sortings"]},{"ContestId":675,"Index":"B","Name":"Restoring Painting","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":675,"Index":"A","Name":"Infinite Sequence","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["math"]},{"ContestId":673,"Index":"B","Name":"Problems for Round","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["greedy","implementation"]},{"ContestId":673,"Index":"A","Name":"Bear and Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":672,"Index":"B","Name":"Different is Good","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","implementation","strings"]},{"ContestId":672,"Index":"A","Name":"Summer Camp","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":671,"Index":"E","Name":"Organizing a Race","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["data structures","greedy"]},{"ContestId":671,"Index":"D","Name":"Roads in Yusland","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["data structures","dp","greedy"]},{"ContestId":671,"Index":"C","Name":"Ultimate Weirdness of an Array","Type":"PROGRAMMING","Rating":2800,"Points":1500,"Tags":["data structures","number theory"]},{"ContestId":671,"Index":"B","Name":"Robin Hood","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["binary search","greedy"]},{"ContestId":671,"Index":"A","Name":"Recycling Bottles","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["dp","geometry","greedy","implementation"]},{"ContestId":670,"Index":"F","Name":"Restore a Number","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["brute force","constructive algorithms","strings"]},{"ContestId":670,"Index":"E","Name":"Correct Bracket Sequence Editor","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["data structures","dsu","strings"]},{"ContestId":670,"Index":"D2","Name":"Magic Powder - 2","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["binary search","implementation"]},{"ContestId":670,"Index":"D1","Name":"Magic Powder - 1","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["binary search","brute force","implementation"]},{"ContestId":670,"Index":"C","Name":"Cinema","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":670,"Index":"B","Name":"Game of Robots","Type":"PROGRAMMING","Rating":1000,"Points":750,"Tags":["implementation"]},{"ContestId":670,"Index":"A","Name":"Holidays","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","constructive algorithms","greedy","math"]},{"ContestId":669,"Index":"A","Name":"Little Artem and Presents","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":667,"Index":"B","Name":"Coat of Anticubism","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","geometry"]},{"ContestId":667,"Index":"A","Name":"Pouring Rain","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["geometry","math"]},{"ContestId":666,"Index":"E","Name":"Forensic Examination","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["data structures","string suffix structures"]},{"ContestId":666,"Index":"D","Name":"Chain Reaction","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["brute force","geometry"]},{"ContestId":666,"Index":"C","Name":"Codeword","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["combinatorics","strings"]},{"ContestId":666,"Index":"B","Name":"World Tour","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["graphs","shortest paths"]},{"ContestId":666,"Index":"A","Name":"Reberland Linguistics","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["dp","implementation","strings"]},{"ContestId":665,"Index":"F","Name":"Four Divisors","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","dp","math","number theory","sortings","two pointers"]},{"ContestId":665,"Index":"E","Name":"Beautiful Subarrays","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","divide and conquer","strings","trees"]},{"ContestId":665,"Index":"D","Name":"Simple Subset","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","greedy","number theory"]},{"ContestId":665,"Index":"C","Name":"Simple Strings","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dp","greedy","strings"]},{"ContestId":665,"Index":"B","Name":"Shopping","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force"]},{"ContestId":665,"Index":"A","Name":"Buses Between Cities","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":664,"Index":"A","Name":"Complicated GCD","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math","number theory"]},{"ContestId":663,"Index":"A","Name":"Rebus","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["constructive algorithms","expression parsing","greedy","math"]},{"ContestId":662,"Index":"E","Name":"To Hack or not to Hack","Type":"PROGRAMMING","Rating":3100,"Points":2250,"Tags":["brute force","dp","greedy"]},{"ContestId":662,"Index":"D","Name":"International Olympiad","Type":"PROGRAMMING","Rating":2000,"Points":250,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":662,"Index":"C","Name":"Binary Table","Type":"PROGRAMMING","Rating":2600,"Points":2250,"Tags":["bitmasks","brute force","divide and conquer","dp","fft","math"]},{"ContestId":662,"Index":"B","Name":"Graph Coloring","Type":"PROGRAMMING","Rating":2200,"Points":250,"Tags":["dfs and similar","graphs"]},{"ContestId":662,"Index":"A","Name":"Gambling Nim","Type":"PROGRAMMING","Rating":2400,"Points":500,"Tags":["bitmasks","math","matrices","probabilities"]},{"ContestId":661,"Index":"H","Name":"Rotate Matrix","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["*special"]},{"ContestId":661,"Index":"G","Name":"Hungarian Notation","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special"]},{"ContestId":661,"Index":"F","Name":"Primes in Interval","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":661,"Index":"E","Name":"Divisibility Check","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":661,"Index":"D","Name":"Maximal Difference","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special"]},{"ContestId":661,"Index":"C","Name":"Array Sum","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":661,"Index":"B","Name":"Seasons","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":661,"Index":"A","Name":"Lazy Caterer Sequence","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["*special"]},{"ContestId":660,"Index":"F","Name":"Bear and Bowling 4","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["binary search","data structures","divide and conquer","geometry","ternary search"]},{"ContestId":660,"Index":"E","Name":"Different Subsets For All Tuples","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":660,"Index":"D","Name":"Number of Parallelograms","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["geometry"]},{"ContestId":660,"Index":"C","Name":"Hard Process","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","dp","two pointers"]},{"ContestId":660,"Index":"B","Name":"Seating On Bus","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":660,"Index":"A","Name":"Co-prime Array","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","implementation","math","number theory"]},{"ContestId":659,"Index":"G","Name":"Fence Divercity","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["combinatorics","dp","number theory"]},{"ContestId":659,"Index":"F","Name":"Polycarp and Hay","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dfs and similar","dsu","graphs","greedy","sortings"]},{"ContestId":659,"Index":"E","Name":"New Reform","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["data structures","dfs and similar","dsu","graphs","greedy"]},{"ContestId":659,"Index":"D","Name":"Bicycle Race","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["geometry","implementation","math"]},{"ContestId":659,"Index":"C","Name":"Tanya and Toys","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":659,"Index":"B","Name":"Qualifying Contest","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","sortings"]},{"ContestId":659,"Index":"A","Name":"Round House","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","math"]},{"ContestId":658,"Index":"A","Name":"Bear and Reverse Radewoosh","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":656,"Index":"G","Name":"You're a Professional","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":656,"Index":"F","Name":"Ace It!","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":656,"Index":"E","Name":"Out of Controls","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":656,"Index":"D","Name":"Rosetta Problem","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special"]},{"ContestId":656,"Index":"C","Name":"Without Text","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":656,"Index":"B","Name":"Scrambled","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special","implementation"]},{"ContestId":656,"Index":"A","Name":"Da Vinci Powers","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":653,"Index":"G","Name":"Move by Prime","Type":"PROGRAMMING","Rating":3100,"Points":3500,"Tags":["combinatorics","math","number theory"]},{"ContestId":653,"Index":"F","Name":"Paper task","Type":"PROGRAMMING","Rating":2600,"Points":3500,"Tags":["data structures","string suffix structures","strings"]},{"ContestId":653,"Index":"E","Name":"Bear and Forgotten Tree 2","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["dfs and similar","dsu","graphs","trees"]},{"ContestId":653,"Index":"D","Name":"Delivery Bears","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["binary search","flows","graphs"]},{"ContestId":653,"Index":"C","Name":"Bear and Up-Down","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","implementation"]},{"ContestId":653,"Index":"B","Name":"Bear and Compressing","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","dfs and similar","dp","strings"]},{"ContestId":653,"Index":"A","Name":"Bear and Three Balls","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation","sortings"]},{"ContestId":652,"Index":"F","Name":"Ants on a Circle","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":652,"Index":"E","Name":"Pursuit For Artifacts","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dfs and similar","dsu","graphs","trees"]},{"ContestId":652,"Index":"D","Name":"Nested Segments","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","sortings"]},{"ContestId":652,"Index":"C","Name":"Foe Pairs","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["combinatorics","sortings","two pointers"]},{"ContestId":652,"Index":"B","Name":"z-sort","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["sortings"]},{"ContestId":652,"Index":"A","Name":"Gabriel and Caterpillar","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["implementation","math"]},{"ContestId":651,"Index":"B","Name":"Beautiful Paintings","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":651,"Index":"A","Name":"Joysticks","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["dp","greedy","implementation","math"]},{"ContestId":650,"Index":"E","Name":"Clockwork Bomb","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["data structures","dfs and similar","dsu","greedy","trees"]},{"ContestId":650,"Index":"D","Name":"Zip-line","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["binary search","data structures","dp","hashing"]},{"ContestId":650,"Index":"C","Name":"Table Compression","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["dfs and similar","dp","dsu","graphs","greedy"]},{"ContestId":650,"Index":"B","Name":"Image Preview","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["binary search","brute force","dp","two pointers"]},{"ContestId":650,"Index":"A","Name":"Watchmen","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["data structures","geometry","math"]},{"ContestId":649,"Index":"E","Name":"–ê–≤—Ç–æ–±—É—Å","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["binary search","data structures","greedy","sortings"]},{"ContestId":649,"Index":"D","Name":"–î–µ—Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞—Ü–∏—è –ø–∞–º—è—Ç–∏","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":649,"Index":"C","Name":"–ü–µ—á–∞—Ç—å —É—Å–ª–æ–≤–∏–π","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["greedy","sortings"]},{"ContestId":649,"Index":"B","Name":"–≠—Ç–∞–∂–∏","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":649,"Index":"A","Name":"–õ—é–±–∏–º—ã–µ —á–∏—Å–ª–∞ –ü–æ–ª–∏–∫–∞—Ä–ø–∞","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":648,"Index":"E","Name":"–°–æ–±–µ—Ä–∏ —á–∏—Å–ª–æ","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["graphs","shortest paths"]},{"ContestId":648,"Index":"D","Name":"–°–æ–±–∞—á–∫–∏ –∏ –º–∏—Å–∫–∏","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["data structures","greedy","sortings"]},{"ContestId":648,"Index":"C","Name":"–ü—É—Ç—å –†–æ–±–æ—Ç–∞","Type":"PROGRAMMING","Rating":1100,"Points":1500,"Tags":["dfs and similar","graphs"]},{"ContestId":648,"Index":"B","Name":"–°–æ–±–µ—Ä–∏ —Å—Ç–æ–ª","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["constructive algorithms","sortings"]},{"ContestId":648,"Index":"A","Name":"–ù–∞–∏–±–æ–ª—å—à–∏–π –ø–æ–¥—ä–µ–º","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":645,"Index":"G","Name":"Armistice Area Apportionment","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["binary search","geometry"]},{"ContestId":645,"Index":"F","Name":"Cowslip Collections","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["combinatorics","math","number theory"]},{"ContestId":645,"Index":"E","Name":"Intellectual Inquiry","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["dp","greedy","strings"]},{"ContestId":645,"Index":"D","Name":"Robot Rapping Results Report","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["binary search","dp","graphs"]},{"ContestId":645,"Index":"C","Name":"Enduring Exodus","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","two pointers"]},{"ContestId":645,"Index":"B","Name":"Mischievous Mess Makers","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","math"]},{"ContestId":645,"Index":"A","Name":"Amity Assessment","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":644,"Index":"C","Name":"Hostname Aliases","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["*special","binary search","data structures","implementation","sortings","strings"]},{"ContestId":644,"Index":"B","Name":"Processing Queries","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["*special","constructive algorithms","data structures","two pointers"]},{"ContestId":644,"Index":"A","Name":"Parliament of Berland","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["*special","constructive algorithms"]},{"ContestId":643,"Index":"G","Name":"Choosing Ads","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["data structures"]},{"ContestId":643,"Index":"F","Name":"Bears and Juice","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["dp","math","meet-in-the-middle"]},{"ContestId":643,"Index":"E","Name":"Bear and Destroying Subtrees","Type":"PROGRAMMING","Rating":2700,"Points":2250,"Tags":["dp","math","probabilities","trees"]},{"ContestId":643,"Index":"D","Name":"Bearish Fanpages","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":[]},{"ContestId":643,"Index":"C","Name":"Levels and Regions","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["dp"]},{"ContestId":643,"Index":"B","Name":"Bear and Two Paths","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["constructive algorithms","graphs"]},{"ContestId":643,"Index":"A","Name":"Bear and Colors","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["implementation"]},{"ContestId":641,"Index":"G","Name":"Little Artem and Graph","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":[]},{"ContestId":641,"Index":"F","Name":"Little Artem and 2-SAT","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":[]},{"ContestId":641,"Index":"E","Name":"Little Artem and Time Machine","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["data structures"]},{"ContestId":641,"Index":"D","Name":"Little Artem and Random Variable","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["dp","implementation","math","probabilities"]},{"ContestId":641,"Index":"C","Name":"Little Artem and Dance","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":641,"Index":"B","Name":"Little Artem and Matrix","Type":"PROGRAMMING","Rating":1400,"Points":750,"Tags":["implementation"]},{"ContestId":641,"Index":"A","Name":"Little Artem and Grasshopper","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":639,"Index":"F","Name":"Bear and Chemistry","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["data structures","dfs and similar","graphs","trees"]},{"ContestId":639,"Index":"E","Name":"Bear and Paradox","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["binary search","greedy","math","sortings"]},{"ContestId":639,"Index":"D","Name":"Bear and Contribution","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["data structures","greedy","sortings","two pointers"]},{"ContestId":639,"Index":"C","Name":"Bear and Polynomials","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["hashing","implementation","math"]},{"ContestId":639,"Index":"B","Name":"Bear and Forgotten Tree 3","Type":"PROGRAMMING","Rating":1600,"Points":750,"Tags":["constructive algorithms","graphs","trees"]},{"ContestId":639,"Index":"A","Name":"Bear and Displayed Friends","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":638,"Index":"D","Name":"Three-dimensional Turtle Super Computer ","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["brute force","dfs and similar","graphs"]},{"ContestId":638,"Index":"C","Name":"Road Improvement","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["*special","dfs and similar","graphs","greedy","trees"]},{"ContestId":638,"Index":"B","Name":"Making Genome in Berland","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["*special","dfs and similar","strings"]},{"ContestId":638,"Index":"A","Name":"Home Numbers","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["*special","constructive algorithms","math"]},{"ContestId":637,"Index":"D","Name":"Running with Obstacles","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["*special","data structures","dp","greedy"]},{"ContestId":637,"Index":"C","Name":"Promocodes with Mistakes","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["*special","brute force","constructive algorithms","implementation"]},{"ContestId":637,"Index":"B","Name":"Chat Order","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["*special","binary search","constructive algorithms","data structures","sortings"]},{"ContestId":637,"Index":"A","Name":"Voting for Photos","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["*special","constructive algorithms","implementation"]},{"ContestId":635,"Index":"A","Name":"Orchestra","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":634,"Index":"A","Name":"Island Puzzle","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":633,"Index":"H","Name":"Fibonacci-ish II","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["data structures","implementation"]},{"ContestId":633,"Index":"G","Name":"Yash And Trees","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["bitmasks","data structures","dfs and similar","math","number theory"]},{"ContestId":633,"Index":"F","Name":"The Chocolate Spree","Type":"PROGRAMMING","Rating":2600,"Points":2750,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":633,"Index":"E","Name":"Startup Funding","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","constructive algorithms","data structures","probabilities","two pointers"]},{"ContestId":633,"Index":"D","Name":"Fibonacci-ish","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["brute force","dp","hashing","implementation","math"]},{"ContestId":633,"Index":"C","Name":"Spy Syndrome 2","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["data structures","dp","hashing","implementation","sortings","string suffix structures","strings"]},{"ContestId":633,"Index":"B","Name":"A Trivial Problem","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["brute force","constructive algorithms","math","number theory"]},{"ContestId":633,"Index":"A","Name":"Ebony and Ivory","Type":"PROGRAMMING","Rating":1100,"Points":250,"Tags":["brute force","math","number theory"]},{"ContestId":632,"Index":"F","Name":"Magic Matrix","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["brute force","divide and conquer","graphs","matrices","trees"]},{"ContestId":632,"Index":"E","Name":"Thief in a Shop","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["divide and conquer","dp","fft","math"]},{"ContestId":632,"Index":"D","Name":"Longest Subsequence","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":632,"Index":"C","Name":"The Smallest String Concatenation","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["sortings","strings"]},{"ContestId":632,"Index":"B","Name":"Alice, Bob, Two Teams","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force","constructive algorithms"]},{"ContestId":632,"Index":"A","Name":"Grandma Laura and Apples","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":[]},{"ContestId":631,"Index":"E","Name":"Product Sum","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures","dp","geometry"]},{"ContestId":631,"Index":"D","Name":"Messenger","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["data structures","hashing","implementation","string suffix structures","strings"]},{"ContestId":631,"Index":"C","Name":"Report","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["data structures","sortings"]},{"ContestId":631,"Index":"B","Name":"Print Check","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":631,"Index":"A","Name":"Interview","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":630,"Index":"R","Name":"Game","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["games","math"]},{"ContestId":630,"Index":"Q","Name":"Pyramids","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["geometry","math"]},{"ContestId":630,"Index":"P","Name":"Area of a Star","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["geometry"]},{"ContestId":630,"Index":"O","Name":"Arrow","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["geometry"]},{"ContestId":630,"Index":"N","Name":"Forecast","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["math"]},{"ContestId":630,"Index":"M","Name":"Turn","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["geometry","math"]},{"ContestId":630,"Index":"L","Name":"Cracking the Code","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["implementation","math"]},{"ContestId":630,"Index":"K","Name":"Indivisibility","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["math","number theory"]},{"ContestId":630,"Index":"J","Name":"Divisibility","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math","number theory"]},{"ContestId":630,"Index":"I","Name":"Parking Lot","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":630,"Index":"H","Name":"Benches","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":630,"Index":"G","Name":"Challenge Pennants","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":630,"Index":"F","Name":"Selection of Personnel","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":630,"Index":"E","Name":"A rectangle","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["math"]},{"ContestId":630,"Index":"D","Name":"Hexagons!","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math"]},{"ContestId":630,"Index":"C","Name":"Lucky Numbers","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["combinatorics","math"]},{"ContestId":630,"Index":"B","Name":"Moore's Law","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["math"]},{"ContestId":630,"Index":"A","Name":"Again Twenty Five!","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["number theory"]},{"ContestId":629,"Index":"E","Name":"Famil Door and Roads","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["combinatorics","data structures","dfs and similar","dp","probabilities","trees"]},{"ContestId":629,"Index":"D","Name":"Babaei and Birthday Cake","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["data structures","dp"]},{"ContestId":629,"Index":"C","Name":"Famil Door and Brackets","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["dp","strings"]},{"ContestId":629,"Index":"B","Name":"Far Relative‚Äôs Problem","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force"]},{"ContestId":629,"Index":"A","Name":"Far Relative‚Äôs Birthday Cake","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","combinatorics","constructive algorithms","implementation"]},{"ContestId":628,"Index":"F","Name":"Bear and Fair Set","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["flows","graphs"]},{"ContestId":628,"Index":"E","Name":"Zbazi in Zeydabad","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":628,"Index":"D","Name":"Magic Numbers","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp"]},{"ContestId":628,"Index":"C","Name":"Bear and String Distance","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy","strings"]},{"ContestId":628,"Index":"B","Name":"New Skateboard","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dp"]},{"ContestId":628,"Index":"A","Name":"Tennis Tournament","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","math"]},{"ContestId":627,"Index":"F","Name":"Island Puzzle","Type":"PROGRAMMING","Rating":3400,"Points":3000,"Tags":["dfs and similar","dsu","graphs","trees"]},{"ContestId":627,"Index":"E","Name":"Orchestra","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["two pointers"]},{"ContestId":627,"Index":"D","Name":"Preorder Test","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["binary search","dfs and similar","dp","graphs","greedy","trees"]},{"ContestId":627,"Index":"C","Name":"Package Delivery","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["data structures","divide and conquer","greedy"]},{"ContestId":627,"Index":"B","Name":"Factory Repairs","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["data structures"]},{"ContestId":627,"Index":"A","Name":"XOR Equation","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["dp","math"]},{"ContestId":626,"Index":"G","Name":"Raffles","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["data structures","dp","greedy","math"]},{"ContestId":626,"Index":"F","Name":"Group Projects","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["dp"]},{"ContestId":626,"Index":"E","Name":"Simple Skewness","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["binary search","math","ternary search"]},{"ContestId":626,"Index":"D","Name":"Jerry's Protest","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["brute force","combinatorics","dp","probabilities"]},{"ContestId":626,"Index":"C","Name":"Block Towers","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["brute force","greedy","math","number theory"]},{"ContestId":626,"Index":"B","Name":"Cards","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["constructive algorithms","dp","math"]},{"ContestId":626,"Index":"A","Name":"Robot Sequence","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":625,"Index":"E","Name":"Frog Fights","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["data structures","greedy"]},{"ContestId":625,"Index":"D","Name":"Finals in arithmetic","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":625,"Index":"C","Name":"K-special Tables","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":625,"Index":"B","Name":"War of the Corporations","Type":"PROGRAMMING","Rating":1200,"Points":750,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":625,"Index":"A","Name":"Guest From the Past","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["implementation","math"]},{"ContestId":624,"Index":"B","Name":"Making a String","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":624,"Index":"A","Name":"Save Luke","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":623,"Index":"E","Name":"Transforming Sequence","Type":"PROGRAMMING","Rating":3300,"Points":2250,"Tags":["combinatorics","dp","fft","math"]},{"ContestId":623,"Index":"D","Name":"Birthday","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["greedy","math","probabilities"]},{"ContestId":623,"Index":"C","Name":"Electric Charges","Type":"PROGRAMMING","Rating":2900,"Points":1750,"Tags":["binary search","dp"]},{"ContestId":623,"Index":"B","Name":"Array GCD","Type":"PROGRAMMING","Rating":2300,"Points":1000,"Tags":["dp","greedy","number theory"]},{"ContestId":623,"Index":"A","Name":"Graph and String","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["constructive algorithms","graphs"]},{"ContestId":622,"Index":"F","Name":"The Sum of the k-th Powers","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["math"]},{"ContestId":622,"Index":"E","Name":"Ants in Leaves","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dfs and similar","greedy","sortings","trees"]},{"ContestId":622,"Index":"D","Name":"Optimal Number Permutation","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":622,"Index":"C","Name":"Not Equal on a Segment","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":622,"Index":"B","Name":"The Time","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":622,"Index":"A","Name":"Infinite Sequence","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","math"]},{"ContestId":621,"Index":"E","Name":"Wet Shark and Blocks","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["dp","matrices"]},{"ContestId":621,"Index":"D","Name":"Rat Kwesh and Cheese","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":621,"Index":"C","Name":"Wet Shark and Flowers","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["combinatorics","math","number theory","probabilities"]},{"ContestId":621,"Index":"B","Name":"Wet Shark and Bishops","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["combinatorics","implementation"]},{"ContestId":621,"Index":"A","Name":"Wet Shark and Odd and Even","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":620,"Index":"F","Name":"Xors on Segments","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["data structures","strings","trees"]},{"ContestId":620,"Index":"E","Name":"New Year Tree","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["bitmasks","data structures","trees"]},{"ContestId":620,"Index":"D","Name":"Professor GukiZ and Two Arrays","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["binary search","two pointers"]},{"ContestId":620,"Index":"C","Name":"Pearls in a Row","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy"]},{"ContestId":620,"Index":"B","Name":"Grandfather Dovlet‚Äôs calculator","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":620,"Index":"A","Name":"Professor GukiZ's Robot","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation","math"]},{"ContestId":618,"Index":"G","Name":"Combining Slimes","Type":"PROGRAMMING","Rating":3300,"Points":3500,"Tags":["dp","math","matrices","probabilities"]},{"ContestId":618,"Index":"F","Name":"Double Knapsack","Type":"PROGRAMMING","Rating":3000,"Points":2750,"Tags":["constructive algorithms","two pointers"]},{"ContestId":618,"Index":"E","Name":"Robot Arm","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","geometry"]},{"ContestId":618,"Index":"D","Name":"Hamiltonian Spanning Tree","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["dfs and similar","dp","graph matchings","greedy","trees"]},{"ContestId":618,"Index":"C","Name":"Constellation","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["geometry","implementation"]},{"ContestId":618,"Index":"B","Name":"Guess the Permutation","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":618,"Index":"A","Name":"Slime Combining","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":617,"Index":"E","Name":"XOR and Favorite Number","Type":"PROGRAMMING","Rating":2200,"Points":2750,"Tags":["data structures"]},{"ContestId":617,"Index":"D","Name":"Polyline","Type":"PROGRAMMING","Rating":1700,"Points":1750,"Tags":["constructive algorithms","implementation"]},{"ContestId":617,"Index":"C","Name":"Watering Flowers","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["implementation"]},{"ContestId":617,"Index":"B","Name":"Chocolate","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["combinatorics"]},{"ContestId":617,"Index":"A","Name":"Elephant","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math"]},{"ContestId":616,"Index":"F","Name":"Expensive Strings","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["string suffix structures","strings"]},{"ContestId":616,"Index":"E","Name":"Sum of Remainders","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["implementation","math","number theory"]},{"ContestId":616,"Index":"D","Name":"Longest k-Good Segment","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["binary search","data structures","two pointers"]},{"ContestId":616,"Index":"C","Name":"The Labyrinth","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["dfs and similar"]},{"ContestId":616,"Index":"B","Name":"Dinner with Emma","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["games","greedy"]},{"ContestId":616,"Index":"A","Name":"Comparing Two Long Integers","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation","strings"]},{"ContestId":615,"Index":"E","Name":"Hexagons","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["binary search","implementation","math"]},{"ContestId":615,"Index":"D","Name":"Multipliers","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["math","number theory"]},{"ContestId":615,"Index":"C","Name":"Running Track","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["dp","greedy","strings","trees"]},{"ContestId":615,"Index":"B","Name":"Longtail Hedgehog","Type":"PROGRAMMING","Rating":1600,"Points":1250,"Tags":["dp","graphs"]},{"ContestId":615,"Index":"A","Name":"Bulbs","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":614,"Index":"B","Name":"Gena's Code","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","math"]},{"ContestId":614,"Index":"A","Name":"Link/Cut Tree","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":613,"Index":"E","Name":"Puzzle Lover","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["dp","hashing","strings"]},{"ContestId":613,"Index":"D","Name":"Kingdom and its Cities","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["dfs and similar","divide and conquer","dp","graphs","sortings","trees"]},{"ContestId":613,"Index":"C","Name":"Necklace","Type":"PROGRAMMING","Rating":2500,"Points":1250,"Tags":["constructive algorithms","math"]},{"ContestId":613,"Index":"B","Name":"Skills","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["binary search","brute force","dp","greedy","sortings","two pointers"]},{"ContestId":613,"Index":"A","Name":"Peter and Snow Blower","Type":"PROGRAMMING","Rating":1900,"Points":750,"Tags":["binary search","geometry","ternary search"]},{"ContestId":612,"Index":"F","Name":"Simba on the Circle","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["dp"]},{"ContestId":612,"Index":"E","Name":"Square Root of Permutation","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["combinatorics","constructive algorithms","dfs and similar","graphs","math"]},{"ContestId":612,"Index":"D","Name":"The Union of k-Segments","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":612,"Index":"C","Name":"Replace To Make Regular Bracket Sequence","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["data structures","expression parsing","math"]},{"ContestId":612,"Index":"B","Name":"HDD is Outdated Technology","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","math"]},{"ContestId":612,"Index":"A","Name":"The Text Splitting","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force","implementation","strings"]},{"ContestId":611,"Index":"H","Name":"New Year  and Forgotten Tree","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["constructive algorithms","flows","graphs"]},{"ContestId":611,"Index":"G","Name":"New Year and Cake","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["geometry","two pointers"]},{"ContestId":611,"Index":"F","Name":"New Year and Cleaning","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["binary search","implementation"]},{"ContestId":611,"Index":"E","Name":"New Year and Three Musketeers","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","greedy","sortings"]},{"ContestId":611,"Index":"D","Name":"New Year and Ancient Prophecy","Type":"PROGRAMMING","Rating":2000,"Points":1750,"Tags":["dp","hashing","strings"]},{"ContestId":611,"Index":"C","Name":"New Year and Domino","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["dp","implementation"]},{"ContestId":611,"Index":"B","Name":"New Year and Old Property","Type":"PROGRAMMING","Rating":1300,"Points":750,"Tags":["bitmasks","brute force","implementation"]},{"ContestId":611,"Index":"A","Name":"New Year and Days","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":610,"Index":"E","Name":"Alphabet Permutations","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","strings"]},{"ContestId":610,"Index":"D","Name":"Vika and Segments","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["constructive algorithms","data structures","geometry","two pointers"]},{"ContestId":610,"Index":"C","Name":"Harmony Analysis","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":610,"Index":"B","Name":"Vika and Squares","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":610,"Index":"A","Name":"Pasha and Stick","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["combinatorics","math"]},{"ContestId":609,"Index":"F","Name":"Frogs and mosquitoes","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","greedy"]},{"ContestId":609,"Index":"E","Name":"Minimum spanning tree for each edge","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["data structures","dfs and similar","dsu","graphs","trees"]},{"ContestId":609,"Index":"D","Name":"Gadgets for dollars and pounds","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","greedy","two pointers"]},{"ContestId":609,"Index":"C","Name":"Load Balancing","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["implementation","math"]},{"ContestId":609,"Index":"B","Name":"The Best Gift","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["constructive algorithms","implementation"]},{"ContestId":609,"Index":"A","Name":"USB Flash Drives","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":608,"Index":"B","Name":"Hamming Distance Sum","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["combinatorics","strings"]},{"ContestId":608,"Index":"A","Name":"Saitama Destroys Hotel","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","math"]},{"ContestId":607,"Index":"E","Name":"Cross Sum","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["binary search","geometry"]},{"ContestId":607,"Index":"D","Name":"Power Tree","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["data structures","trees"]},{"ContestId":607,"Index":"C","Name":"Marbles","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["hashing","strings"]},{"ContestId":607,"Index":"B","Name":"Zuma","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["dp"]},{"ContestId":607,"Index":"A","Name":"Chain Reaction","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["binary search","dp"]},{"ContestId":606,"Index":"B","Name":"Testing Robots","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["implementation"]},{"ContestId":606,"Index":"A","Name":"Magic Spheres","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":605,"Index":"E","Name":"Intergalaxy Trips","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["probabilities","shortest paths"]},{"ContestId":605,"Index":"D","Name":"Board Game","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["data structures","dfs and similar"]},{"ContestId":605,"Index":"C","Name":"Freelancer's Dreams","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["geometry"]},{"ContestId":605,"Index":"B","Name":"Lazy Student","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","data structures","graphs"]},{"ContestId":605,"Index":"A","Name":"Sorting Railway Cars","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":604,"Index":"B","Name":"More Cowbell","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["binary search","greedy"]},{"ContestId":604,"Index":"A","Name":"Uncowed Forces","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":603,"Index":"E","Name":"Pastoral Oddities","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["data structures","divide and conquer","dsu","math","trees"]},{"ContestId":603,"Index":"D","Name":"Ruminations on Ruminants","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["geometry","math"]},{"ContestId":603,"Index":"C","Name":"Lieges of Legendre","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["games","math"]},{"ContestId":603,"Index":"B","Name":"Moodular Arithmetic","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["combinatorics","dfs and similar","dsu","math","number theory"]},{"ContestId":603,"Index":"A","Name":"Alternative Thinking","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["dp","greedy","math"]},{"ContestId":602,"Index":"B","Name":"Approximating a Constant Range","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["dp","implementation","two pointers"]},{"ContestId":602,"Index":"A","Name":"Two Bases","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":601,"Index":"E","Name":"A Museum Robbery","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["data structures","dp"]},{"ContestId":601,"Index":"D","Name":"Acyclic Organic Compounds","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures","dfs and similar","dsu","hashing","strings","trees"]},{"ContestId":601,"Index":"C","Name":"Kleof√°≈° and the n-thlon","Type":"PROGRAMMING","Rating":2300,"Points":1250,"Tags":["dp","math","probabilities"]},{"ContestId":601,"Index":"B","Name":"Lipshitz Sequence","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["data structures","math"]},{"ContestId":601,"Index":"A","Name":"The Two Routes","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["graphs","shortest paths"]},{"ContestId":600,"Index":"F","Name":"Edge coloring of bipartite graph","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["graphs"]},{"ContestId":600,"Index":"E","Name":"Lomsat gelral","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures","dfs and similar","dsu","trees"]},{"ContestId":600,"Index":"D","Name":"Area of Two Circles' Intersection","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["geometry"]},{"ContestId":600,"Index":"C","Name":"Make Palindrome","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":600,"Index":"B","Name":"Queries about less or equal elements","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["binary search","data structures","sortings","two pointers"]},{"ContestId":600,"Index":"A","Name":"Extract Numbers","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation","strings"]},{"ContestId":599,"Index":"E","Name":"Sandy and Nuts","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["bitmasks","dp","trees"]},{"ContestId":599,"Index":"D","Name":"Spongebob and Squares","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["brute force","math"]},{"ContestId":599,"Index":"C","Name":"Day at the Beach","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["sortings"]},{"ContestId":599,"Index":"B","Name":"Spongebob and Joke","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["implementation"]},{"ContestId":599,"Index":"A","Name":"Patrick and Shopping","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":598,"Index":"F","Name":"Cut Length","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["geometry"]},{"ContestId":598,"Index":"E","Name":"Chocolate Bar","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","dp"]},{"ContestId":598,"Index":"D","Name":"Igor In the Museum","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dfs and similar","graphs","shortest paths"]},{"ContestId":598,"Index":"C","Name":"Nearest vectors","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["geometry","sortings"]},{"ContestId":598,"Index":"B","Name":"Queries on a String","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation","strings"]},{"ContestId":598,"Index":"A","Name":"Tricky Sum","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["math"]},{"ContestId":597,"Index":"C","Name":"Subsequences","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["data structures","dp"]},{"ContestId":597,"Index":"B","Name":"Restaurant","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["dp","greedy","sortings"]},{"ContestId":597,"Index":"A","Name":"Divisibility","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["math"]},{"ContestId":596,"Index":"E","Name":"Wilbur and Strings","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dfs and similar","dp","graphs","strings"]},{"ContestId":596,"Index":"D","Name":"Wilbur and Trees","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["dp","math","probabilities","sortings"]},{"ContestId":596,"Index":"C","Name":"Wilbur and Points","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["combinatorics","greedy","sortings"]},{"ContestId":596,"Index":"B","Name":"Wilbur and Array","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":596,"Index":"A","Name":"Wilbur and Swimming Pool","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["geometry","implementation"]},{"ContestId":595,"Index":"B","Name":"Pasha and Phone","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search","math"]},{"ContestId":595,"Index":"A","Name":"Vitaly and Night","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":594,"Index":"E","Name":"Cutting the Line","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["string suffix structures","strings"]},{"ContestId":594,"Index":"D","Name":"REQ","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["data structures","number theory"]},{"ContestId":594,"Index":"C","Name":"Edo and Magnets","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["brute force","greedy","implementation","two pointers"]},{"ContestId":594,"Index":"B","Name":"Max and Bike","Type":"PROGRAMMING","Rating":2500,"Points":1000,"Tags":["binary search","geometry"]},{"ContestId":594,"Index":"A","Name":"Warrior and Archer","Type":"PROGRAMMING","Rating":2300,"Points":500,"Tags":["games"]},{"ContestId":593,"Index":"E","Name":"Strange Calculation and Cats","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["dp","matrices"]},{"ContestId":593,"Index":"D","Name":"Happy Tree Party","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["data structures","dfs and similar","graphs","math","trees"]},{"ContestId":593,"Index":"C","Name":"Beautiful Function","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["constructive algorithms","math"]},{"ContestId":593,"Index":"B","Name":"Anton and Lines","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["geometry","sortings"]},{"ContestId":593,"Index":"A","Name":"2Char","Type":"PROGRAMMING","Rating":1200,"Points":250,"Tags":["brute force","implementation"]},{"ContestId":592,"Index":"E","Name":"BCPC","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["binary search","geometry","two pointers"]},{"ContestId":592,"Index":"D","Name":"Super M","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":592,"Index":"C","Name":"The Big Race","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["math"]},{"ContestId":592,"Index":"B","Name":"The Monster and the Squirrel","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["math"]},{"ContestId":592,"Index":"A","Name":"PawnChess","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":591,"Index":"B","Name":"Rebranding","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":591,"Index":"A","Name":"Wizards' Duel","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":590,"Index":"E","Name":"Birthday","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["graph matchings","strings"]},{"ContestId":590,"Index":"D","Name":"Top Secret Task","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["dp"]},{"ContestId":590,"Index":"C","Name":"Three States","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["dfs and similar","graphs","shortest paths"]},{"ContestId":590,"Index":"B","Name":"Chip 'n Dale Rescue Rangers","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["binary search","geometry","math"]},{"ContestId":590,"Index":"A","Name":"Median Smoothing","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["implementation"]},{"ContestId":588,"Index":"B","Name":"Duff in Love","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["math"]},{"ContestId":588,"Index":"A","Name":"Duff and Meat","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["greedy"]},{"ContestId":587,"Index":"F","Name":"Duff is Mad","Type":"PROGRAMMING","Rating":3000,"Points":2750,"Tags":["data structures","strings"]},{"ContestId":587,"Index":"E","Name":"Duff as a Queen","Type":"PROGRAMMING","Rating":2900,"Points":2750,"Tags":["data structures"]},{"ContestId":587,"Index":"D","Name":"Duff in Mafia","Type":"PROGRAMMING","Rating":3100,"Points":2000,"Tags":["2-sat","binary search"]},{"ContestId":587,"Index":"C","Name":"Duff in the Army","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["data structures","trees"]},{"ContestId":587,"Index":"B","Name":"Duff in Beach","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["dp"]},{"ContestId":587,"Index":"A","Name":"Duff and Weight Lifting","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["greedy"]},{"ContestId":586,"Index":"B","Name":"Laurenty and Shop","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":586,"Index":"A","Name":"Alena's Schedule","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":585,"Index":"F","Name":"Digits of Number Pi","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["dp","implementation","strings"]},{"ContestId":585,"Index":"E","Name":"Present for Vitalik the Philatelist ","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["combinatorics","math","number theory"]},{"ContestId":585,"Index":"D","Name":"Lizard Era: Beginning","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["meet-in-the-middle"]},{"ContestId":585,"Index":"C","Name":"Alice, Bob, Oranges and Apples","Type":"PROGRAMMING","Rating":2400,"Points":1250,"Tags":["number theory"]},{"ContestId":585,"Index":"B","Name":"Phillip and Trains","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["dfs and similar","graphs","shortest paths"]},{"ContestId":585,"Index":"A","Name":"Gennady the Dentist","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":584,"Index":"E","Name":"Anton and Ira","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":584,"Index":"D","Name":"Dima and Lisa","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["brute force","math","number theory"]},{"ContestId":584,"Index":"C","Name":"Marina and Vasya","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","greedy","strings"]},{"ContestId":584,"Index":"B","Name":"Kolya and Tanya ","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["combinatorics"]},{"ContestId":584,"Index":"A","Name":"Olesya and Rodion","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["math"]},{"ContestId":583,"Index":"B","Name":"Robot's Task","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":583,"Index":"A","Name":"Asphalting Roads","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":582,"Index":"E","Name":"Boolean Function","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["bitmasks","dp","expression parsing"]},{"ContestId":582,"Index":"D","Name":"Number of Binominal Coefficients","Type":"PROGRAMMING","Rating":3300,"Points":2250,"Tags":["dp","math","number theory"]},{"ContestId":582,"Index":"C","Name":"Superior Periodic Subarrays","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["number theory"]},{"ContestId":582,"Index":"B","Name":"Once Again...","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["constructive algorithms","dp","matrices"]},{"ContestId":582,"Index":"A","Name":"GCD Table","Type":"PROGRAMMING","Rating":1700,"Points":750,"Tags":["constructive algorithms","greedy","number theory"]},{"ContestId":581,"Index":"F","Name":"Zublicanes and Mumocrates","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["dp","trees","two pointers"]},{"ContestId":581,"Index":"E","Name":"Kojiro and Furrari","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["dp","greedy"]},{"ContestId":581,"Index":"D","Name":"Three Logos","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["bitmasks","brute force","constructive algorithms","geometry","implementation","math"]},{"ContestId":581,"Index":"C","Name":"Developing Skills","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["implementation","math","sortings"]},{"ContestId":581,"Index":"B","Name":"Luxurious Houses","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation","math"]},{"ContestId":581,"Index":"A","Name":"Vasya the Hipster","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":580,"Index":"E","Name":"Kefa and Watch","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","hashing","strings"]},{"ContestId":580,"Index":"D","Name":"Kefa and Dishes","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["bitmasks","dp"]},{"ContestId":580,"Index":"C","Name":"Kefa and Park","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":580,"Index":"B","Name":"Kefa and Company","Type":"PROGRAMMING","Rating":1500,"Points":1250,"Tags":["binary search","sortings","two pointers"]},{"ContestId":580,"Index":"A","Name":"Kefa and First Steps","Type":"PROGRAMMING","Rating":900,"Points":750,"Tags":["brute force","dp","implementation"]},{"ContestId":579,"Index":"B","Name":"Finding Team Member","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["brute force","implementation","sortings"]},{"ContestId":579,"Index":"A","Name":"Raising Bacteria","Type":"PROGRAMMING","Rating":1000,"Points":250,"Tags":["bitmasks"]},{"ContestId":578,"Index":"F","Name":"Mirror Box","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["matrices","trees"]},{"ContestId":578,"Index":"E","Name":"Walking!","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["constructive algorithms","greedy"]},{"ContestId":578,"Index":"D","Name":"LCS Again","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["dp","greedy"]},{"ContestId":578,"Index":"C","Name":"Weakness and Poorness","Type":"PROGRAMMING","Rating":2000,"Points":750,"Tags":["ternary search"]},{"ContestId":578,"Index":"B","Name":"\"Or\" Game","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":578,"Index":"A","Name":"A Problem about Polyline","Type":"PROGRAMMING","Rating":1700,"Points":250,"Tags":["geometry","math"]},{"ContestId":577,"Index":"B","Name":"Modulo Sum","Type":"PROGRAMMING","Rating":1900,"Points":1250,"Tags":["combinatorics","data structures","dp","two pointers"]},{"ContestId":577,"Index":"A","Name":"Multiplication Table","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","number theory"]},{"ContestId":576,"Index":"E","Name":"Painting Edges","Type":"PROGRAMMING","Rating":3300,"Points":2750,"Tags":["binary search","data structures"]},{"ContestId":576,"Index":"D","Name":"Flights for Regular Customers","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["dp","matrices"]},{"ContestId":576,"Index":"C","Name":"Points on Plane","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["constructive algorithms","divide and conquer","geometry","greedy","sortings"]},{"ContestId":576,"Index":"B","Name":"Invariance of Tree","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"ContestId":576,"Index":"A","Name":"Vasya and Petya's Game","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["math","number theory"]},{"ContestId":575,"Index":"I","Name":"Robots protection","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["data structures"]},{"ContestId":575,"Index":"H","Name":"Bots","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":575,"Index":"G","Name":"Run for beer","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dfs and similar","shortest paths"]},{"ContestId":575,"Index":"F","Name":"Bulbo","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","greedy"]},{"ContestId":575,"Index":"E","Name":"Spectator Riots","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["geometry"]},{"ContestId":575,"Index":"D","Name":"Tablecity","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["constructive algorithms","implementation"]},{"ContestId":575,"Index":"C","Name":"Party","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["bitmasks","brute force","graph matchings"]},{"ContestId":575,"Index":"B","Name":"Bribes","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":575,"Index":"A","Name":"Fibonotci","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","math","matrices"]},{"ContestId":574,"Index":"B","Name":"Bear and Three Musketeers","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","dfs and similar","graphs","hashing"]},{"ContestId":574,"Index":"A","Name":"Bear and Elections","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":573,"Index":"E","Name":"Bear and Bowling","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["data structures","greedy"]},{"ContestId":573,"Index":"D","Name":"Bear and Cavalry","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["data structures","divide and conquer","dp"]},{"ContestId":573,"Index":"C","Name":"Bear and Drawing","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["constructive algorithms","dfs and similar","trees"]},{"ContestId":573,"Index":"B","Name":"Bear and Blocks","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search","data structures","dp","math"]},{"ContestId":573,"Index":"A","Name":"Bear and Poker","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation","math","number theory"]},{"ContestId":572,"Index":"B","Name":"Order Book","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["data structures","greedy","implementation","sortings"]},{"ContestId":572,"Index":"A","Name":"Arrays","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["sortings"]},{"ContestId":571,"Index":"E","Name":"Geometric Progressions","Type":"PROGRAMMING","Rating":3200,"Points":2750,"Tags":["math"]},{"ContestId":571,"Index":"D","Name":"Campus","Type":"PROGRAMMING","Rating":3100,"Points":2000,"Tags":["binary search","data structures","dsu","trees"]},{"ContestId":571,"Index":"C","Name":"CNF 2","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"ContestId":571,"Index":"B","Name":"Minimization","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["dp","greedy","sortings"]},{"ContestId":571,"Index":"A","Name":"Lengthening Sticks","Type":"PROGRAMMING","Rating":2100,"Points":750,"Tags":["combinatorics","implementation","math"]},{"ContestId":570,"Index":"E","Name":"Pig and Palindromes","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["combinatorics","dp"]},{"ContestId":570,"Index":"D","Name":"Tree Requests","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["binary search","bitmasks","constructive algorithms","dfs and similar","graphs","trees"]},{"ContestId":570,"Index":"C","Name":"Replacement","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","data structures","implementation"]},{"ContestId":570,"Index":"B","Name":"Simple Game","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","games","greedy","implementation","math"]},{"ContestId":570,"Index":"A","Name":"Elections","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":569,"Index":"B","Name":"Inventory","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","math"]},{"ContestId":569,"Index":"A","Name":"Music","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["implementation","math"]},{"ContestId":568,"Index":"E","Name":"Longest Increasing Subsequence","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["data structures","dp"]},{"ContestId":568,"Index":"D","Name":"Sign Posts","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["brute force","geometry","math"]},{"ContestId":568,"Index":"C","Name":"New Language","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["2-sat","greedy"]},{"ContestId":568,"Index":"B","Name":"Symmetric and Transitive","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["combinatorics","dp","math"]},{"ContestId":568,"Index":"A","Name":"Primes or Palindromes?","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["brute force","implementation","math","number theory"]},{"ContestId":567,"Index":"F","Name":"Mausoleum","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["dp"]},{"ContestId":567,"Index":"E","Name":"President and Roads","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["dfs and similar","graphs","hashing","shortest paths"]},{"ContestId":567,"Index":"D","Name":"One-Dimensional Battle Ships","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["binary search","data structures","greedy","sortings"]},{"ContestId":567,"Index":"C","Name":"Geometric Progression","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","data structures","dp"]},{"ContestId":567,"Index":"B","Name":"Berland National Library","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":567,"Index":"A","Name":"Lineland Mail","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":566,"Index":"G","Name":"Max and Min","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["geometry"]},{"ContestId":566,"Index":"F","Name":"Clique in the Divisibility Graph","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["dp","math","number theory"]},{"ContestId":566,"Index":"E","Name":"Restoring Map","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["bitmasks","constructive algorithms","trees"]},{"ContestId":566,"Index":"D","Name":"Restructuring Company","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["data structures","dsu"]},{"ContestId":566,"Index":"C","Name":"Logistical Questions","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["dfs and similar","divide and conquer","trees"]},{"ContestId":566,"Index":"B","Name":"Replicating Processes","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["constructive algorithms","greedy"]},{"ContestId":566,"Index":"A","Name":"Matching Names","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["dfs and similar","strings","trees"]},{"ContestId":560,"Index":"B","Name":"Gerald is into Art","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":560,"Index":"A","Name":"Currency System in Geraldion","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":559,"Index":"E","Name":"Gerald and Path","Type":"PROGRAMMING","Rating":3000,"Points":2250,"Tags":["dp","sortings"]},{"ContestId":559,"Index":"D","Name":"Randomizer","Type":"PROGRAMMING","Rating":2800,"Points":2250,"Tags":["combinatorics","geometry","probabilities"]},{"ContestId":559,"Index":"C","Name":"Gerald and Giant Chess","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":559,"Index":"B","Name":"Equivalent Strings","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["divide and conquer","hashing","sortings","strings"]},{"ContestId":559,"Index":"A","Name":"Gerald's Hexagon","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["brute force","geometry","math"]},{"ContestId":558,"Index":"E","Name":"A Simple Task","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["data structures","sortings","strings"]},{"ContestId":558,"Index":"D","Name":"Guess Your Way Out! II","Type":"PROGRAMMING","Rating":2300,"Points":2250,"Tags":["data structures","implementation","sortings"]},{"ContestId":558,"Index":"C","Name":"Amr and Chemistry","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","graphs","greedy","math","shortest paths"]},{"ContestId":558,"Index":"B","Name":"Amr and The Large Array","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":558,"Index":"A","Name":"Lala Land and Apple Trees","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation","sortings"]},{"ContestId":557,"Index":"E","Name":"Ann and Half-Palindrome","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["data structures","dp","graphs","string suffix structures","strings","trees"]},{"ContestId":557,"Index":"D","Name":"Vitaly and Cycle","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["combinatorics","dfs and similar","graphs","math"]},{"ContestId":557,"Index":"C","Name":"Arthur and Table","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","data structures","dp","greedy","math","sortings"]},{"ContestId":557,"Index":"B","Name":"Pasha and Tea","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["constructive algorithms","implementation","math","sortings"]},{"ContestId":557,"Index":"A","Name":"Ilya and Diplomas","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":556,"Index":"B","Name":"Case of Fake Numbers","Type":"PROGRAMMING","Rating":1100,"Points":250,"Tags":["brute force","implementation"]},{"ContestId":556,"Index":"A","Name":"Case of the Zeros and Ones","Type":"PROGRAMMING","Rating":900,"Points":250,"Tags":["greedy"]},{"ContestId":555,"Index":"E","Name":"Case of Computer Network","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":555,"Index":"D","Name":"Case of a Top Secret","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["binary search","implementation","math"]},{"ContestId":555,"Index":"C","Name":"Case of Chocolate","Type":"PROGRAMMING","Rating":2200,"Points":1250,"Tags":["data structures"]},{"ContestId":555,"Index":"B","Name":"Case of Fugitive","Type":"PROGRAMMING","Rating":2000,"Points":750,"Tags":["data structures","greedy","sortings"]},{"ContestId":555,"Index":"A","Name":"Case of Matryoshkas","Type":"PROGRAMMING","Rating":1500,"Points":250,"Tags":["implementation"]},{"ContestId":554,"Index":"B","Name":"Ohana Cleans Up","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","greedy","strings"]},{"ContestId":554,"Index":"A","Name":"Kyoya and Photobooks","Type":"PROGRAMMING","Rating":900,"Points":250,"Tags":["brute force","math","strings"]},{"ContestId":553,"Index":"E","Name":"Kyoya and Train","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["dp","fft","graphs","math","probabilities"]},{"ContestId":553,"Index":"D","Name":"Nudist Beach","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["binary search","graphs","greedy"]},{"ContestId":553,"Index":"C","Name":"Love Triangles","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":553,"Index":"B","Name":"Kyoya and Permutation","Type":"PROGRAMMING","Rating":1900,"Points":500,"Tags":["binary search","combinatorics","constructive algorithms","greedy","implementation","math"]},{"ContestId":553,"Index":"A","Name":"Kyoya and Colored Balls","Type":"PROGRAMMING","Rating":1500,"Points":250,"Tags":["combinatorics","dp","math"]},{"ContestId":552,"Index":"E","Name":"Vanya and Brackets","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["brute force","dp","expression parsing","greedy","implementation","strings"]},{"ContestId":552,"Index":"D","Name":"Vanya and Triangles","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["brute force","combinatorics","data structures","geometry","math","sortings"]},{"ContestId":552,"Index":"C","Name":"Vanya and Scales","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","dp","greedy","math","meet-in-the-middle","number theory"]},{"ContestId":552,"Index":"B","Name":"Vanya and Books","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","math"]},{"ContestId":552,"Index":"A","Name":"Vanya and Table","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","math"]},{"ContestId":551,"Index":"E","Name":"GukiZ and GukiZiana","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["binary search","data structures","implementation"]},{"ContestId":551,"Index":"D","Name":"GukiZ and Binary Operations","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["combinatorics","implementation","math","matrices","number theory"]},{"ContestId":551,"Index":"C","Name":"GukiZ hates Boxes","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["binary search","greedy"]},{"ContestId":551,"Index":"B","Name":"ZgukistringZ","Type":"PROGRAMMING","Rating":1800,"Points":1250,"Tags":["brute force","constructive algorithms","implementation","strings"]},{"ContestId":551,"Index":"A","Name":"GukiZ and Contest","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation","sortings"]},{"ContestId":550,"Index":"E","Name":"Brackets in Implications","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":550,"Index":"D","Name":"Regular Bridge","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms","graphs","implementation"]},{"ContestId":550,"Index":"C","Name":"Divisibility by Eight","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","dp","math"]},{"ContestId":550,"Index":"B","Name":"Preparing Olympiad","Type":"PROGRAMMING","Rating":1400,"Points":750,"Tags":["bitmasks","brute force"]},{"ContestId":550,"Index":"A","Name":"Two Substrings","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","dp","greedy","implementation","strings"]},{"ContestId":549,"Index":"H","Name":"Degenerate Matrix","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["binary search","math"]},{"ContestId":549,"Index":"G","Name":"Happy Line","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":549,"Index":"F","Name":"Yura and Developers","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["data structures","divide and conquer"]},{"ContestId":549,"Index":"E","Name":"Sasha Circle","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["geometry","math"]},{"ContestId":549,"Index":"D","Name":"Haar Features","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":549,"Index":"C","Name":"The Game Of Parity","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["games"]},{"ContestId":549,"Index":"B","Name":"Looksery Party","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"ContestId":549,"Index":"A","Name":"Face Detection","Type":"PROGRAMMING","Rating":900,"Points":250,"Tags":["implementation","strings"]},{"ContestId":548,"Index":"B","Name":"Mike and Fun","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","dp","greedy","implementation"]},{"ContestId":548,"Index":"A","Name":"Mike and Fax","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation","strings"]},{"ContestId":547,"Index":"E","Name":"Mike and Friends","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["data structures","string suffix structures","strings","trees"]},{"ContestId":547,"Index":"D","Name":"Mike and Fish","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":547,"Index":"C","Name":"Mike and Foam","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["bitmasks","combinatorics","dp","math","number theory"]},{"ContestId":547,"Index":"B","Name":"Mike and Feet","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["binary search","data structures","dp","dsu"]},{"ContestId":547,"Index":"A","Name":"Mike and Frog","Type":"PROGRAMMING","Rating":2200,"Points":750,"Tags":["brute force","greedy","implementation","math"]},{"ContestId":546,"Index":"E","Name":"Soldier and Traveling","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["flows","graphs","math"]},{"ContestId":546,"Index":"D","Name":"Soldier and Number Game","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","dp","math","number theory"]},{"ContestId":546,"Index":"C","Name":"Soldier and Cards","Type":"PROGRAMMING","Rating":1400,"Points":1250,"Tags":["brute force","dfs and similar","games"]},{"ContestId":546,"Index":"B","Name":"Soldier and Badges","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","greedy","implementation","sortings"]},{"ContestId":546,"Index":"A","Name":"Soldier and Bananas","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":545,"Index":"E","Name":"Paths and Trees","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["graphs","greedy","shortest paths"]},{"ContestId":545,"Index":"D","Name":"Queue","Type":"PROGRAMMING","Rating":1300,"Points":1750,"Tags":["greedy","implementation","sortings"]},{"ContestId":545,"Index":"C","Name":"Woodcutters","Type":"PROGRAMMING","Rating":1500,"Points":1750,"Tags":["dp","greedy"]},{"ContestId":545,"Index":"B","Name":"Equidistant String","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy"]},{"ContestId":545,"Index":"A","Name":"Toy Cars","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":544,"Index":"B","Name":"Sea and Islands","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":544,"Index":"A","Name":"Set of Strings","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","strings"]},{"ContestId":543,"Index":"E","Name":"Listening to Music","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["constructive algorithms","data structures"]},{"ContestId":543,"Index":"D","Name":"Road Improvement","Type":"PROGRAMMING","Rating":2300,"Points":1750,"Tags":["dp","trees"]},{"ContestId":543,"Index":"C","Name":"Remembering Strings","Type":"PROGRAMMING","Rating":2500,"Points":1750,"Tags":["bitmasks","dp"]},{"ContestId":543,"Index":"B","Name":"Destroying Roads","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["constructive algorithms","graphs","shortest paths"]},{"ContestId":543,"Index":"A","Name":"Writing Code","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["dp"]},{"ContestId":542,"Index":"F","Name":"Quest","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["dp","greedy"]},{"ContestId":542,"Index":"E","Name":"Playing on Graph","Type":"PROGRAMMING","Rating":2600,"Points":2250,"Tags":["graphs","shortest paths"]},{"ContestId":542,"Index":"D","Name":"Superhero's Job","Type":"PROGRAMMING","Rating":2600,"Points":2250,"Tags":["dfs and similar","dp","hashing","math","number theory"]},{"ContestId":542,"Index":"C","Name":"Idempotent functions","Type":"PROGRAMMING","Rating":2000,"Points":750,"Tags":["constructive algorithms","graphs","math"]},{"ContestId":542,"Index":"B","Name":"Duck Hunt","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["data structures"]},{"ContestId":542,"Index":"A","Name":"Place Your Ad Here","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures","sortings"]},{"ContestId":540,"Index":"E","Name":"Infinite Inversions","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["binary search","data structures","implementation","sortings","trees"]},{"ContestId":540,"Index":"D","Name":"Bad Luck Island","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dp","probabilities"]},{"ContestId":540,"Index":"C","Name":"Ice Cave","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dfs and similar"]},{"ContestId":540,"Index":"B","Name":"School Marks","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":540,"Index":"A","Name":"Combination Lock","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":538,"Index":"H","Name":"Summer Dichotomy","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["2-sat","data structures","dfs and similar","greedy"]},{"ContestId":538,"Index":"G","Name":"Berserk Robot ","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["constructive algorithms","math","sortings"]},{"ContestId":538,"Index":"F","Name":"A Heap of Heaps","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["brute force","data structures","math","sortings"]},{"ContestId":538,"Index":"E","Name":"Demiurges Play Again","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dfs and similar","dp","math","trees"]},{"ContestId":538,"Index":"D","Name":"Weird Chess","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":538,"Index":"C","Name":"Tourist's Notes","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","brute force","greedy","implementation","math"]},{"ContestId":538,"Index":"B","Name":"Quasi Binary","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms","dp","greedy","implementation"]},{"ContestId":538,"Index":"A","Name":"Cutting Banner","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":536,"Index":"E","Name":"Tavas on the Path","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["data structures","divide and conquer","trees"]},{"ContestId":536,"Index":"D","Name":"Tavas in Kansas","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["dp","games"]},{"ContestId":535,"Index":"E","Name":"Tavas and Pashmaks","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["geometry","math"]},{"ContestId":535,"Index":"D","Name":"Tavas and Malekas","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["greedy","hashing","string suffix structures","strings"]},{"ContestId":535,"Index":"C","Name":"Tavas and Karafs","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["binary search","greedy","math"]},{"ContestId":535,"Index":"B","Name":"Tavas and SaDDas","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["bitmasks","brute force","combinatorics","implementation"]},{"ContestId":535,"Index":"A","Name":"Tavas and Nafas","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":534,"Index":"F","Name":"Simplified Nonogram","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["bitmasks","dp","hashing","meet-in-the-middle"]},{"ContestId":534,"Index":"E","Name":"Berland Local Positioning System","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["constructive algorithms","greedy","hashing","implementation"]},{"ContestId":534,"Index":"D","Name":"Handshakes","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","constructive algorithms","data structures","greedy"]},{"ContestId":534,"Index":"C","Name":"Polycarpus' Dice","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["math"]},{"ContestId":534,"Index":"B","Name":"Covered Path","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["dp","greedy","math"]},{"ContestId":534,"Index":"A","Name":"Exam","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":533,"Index":"F","Name":"Encoding","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["hashing","string suffix structures","strings"]},{"ContestId":533,"Index":"E","Name":"Correcting Mistakes","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["constructive algorithms","dp","greedy","hashing","strings","two pointers"]},{"ContestId":533,"Index":"D","Name":"Landmarks","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["data structures","dp"]},{"ContestId":533,"Index":"C","Name":"Board Game","Type":"PROGRAMMING","Rating":1700,"Points":250,"Tags":["games","greedy","implementation","math"]},{"ContestId":533,"Index":"B","Name":"Work Group","Type":"PROGRAMMING","Rating":2000,"Points":750,"Tags":["dfs and similar","dp","graphs","strings","trees"]},{"ContestId":533,"Index":"A","Name":"Berland Miners","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["binary search","data structures","dfs and similar","greedy","trees"]},{"ContestId":530,"Index":"I","Name":"Different variables","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["*special"]},{"ContestId":530,"Index":"H","Name":"Points in triangle","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special","geometry"]},{"ContestId":530,"Index":"G","Name":"Levenshtein distance","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special"]},{"ContestId":530,"Index":"F","Name":"Jumping frogs","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special"]},{"ContestId":530,"Index":"E","Name":"Sum and product","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special"]},{"ContestId":530,"Index":"D","Name":"Set subtraction","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":530,"Index":"C","Name":"Diophantine equation","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special"]},{"ContestId":530,"Index":"B","Name":"String inside out","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":530,"Index":"A","Name":"Quadratic equation","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special"]},{"ContestId":529,"Index":"B","Name":"Group Photo 2 (online mirror version)","Type":"PROGRAMMING","Rating":1900,"Points":500,"Tags":["brute force","greedy","sortings"]},{"ContestId":528,"Index":"E","Name":"Triangles 3000","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["geometry","sortings"]},{"ContestId":528,"Index":"D","Name":"Fuzzy Search","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["bitmasks","brute force","fft"]},{"ContestId":527,"Index":"E","Name":"Data Center Drama","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["dfs and similar","graphs"]},{"ContestId":527,"Index":"D","Name":"Clique Problem","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["data structures","dp","greedy","implementation","sortings"]},{"ContestId":527,"Index":"C","Name":"Glass Carving","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["binary search","data structures","implementation"]},{"ContestId":527,"Index":"B","Name":"Error Correct System","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy"]},{"ContestId":527,"Index":"A","Name":"Playing with Paper","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","math"]},{"ContestId":526,"Index":"G","Name":"Spiders Evil Plan","Type":"PROGRAMMING","Rating":3300,"Points":3000,"Tags":["greedy","trees"]},{"ContestId":526,"Index":"F","Name":"Pudding Monsters","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["data structures","divide and conquer"]},{"ContestId":526,"Index":"E","Name":"Transmitting Levels","Type":"PROGRAMMING","Rating":2400,"Points":2250,"Tags":["dp","implementation"]},{"ContestId":526,"Index":"D","Name":"Om Nom and Necklace","Type":"PROGRAMMING","Rating":2200,"Points":1750,"Tags":["hashing","string suffix structures","strings"]},{"ContestId":526,"Index":"C","Name":"Om Nom and Candies","Type":"PROGRAMMING","Rating":2000,"Points":1250,"Tags":["brute force","greedy","math"]},{"ContestId":526,"Index":"B","Name":"Om Nom and Dark Park","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["dfs and similar","greedy","implementation"]},{"ContestId":526,"Index":"A","Name":"King of Thieves","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":525,"Index":"E","Name":"Anya and Cubes","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["binary search","bitmasks","brute force","dp","math","meet-in-the-middle"]},{"ContestId":525,"Index":"D","Name":"Arthur and Walls","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["constructive algorithms","data structures","graphs","greedy","shortest paths"]},{"ContestId":525,"Index":"C","Name":"Ilya and Sticks","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["greedy","math","sortings"]},{"ContestId":525,"Index":"B","Name":"Pasha and String","Type":"PROGRAMMING","Rating":1400,"Points":750,"Tags":["constructive algorithms","greedy","math","strings"]},{"ContestId":525,"Index":"A","Name":"Vitaliy and Pie","Type":"PROGRAMMING","Rating":1100,"Points":250,"Tags":["greedy","hashing","strings"]},{"ContestId":524,"Index":"F","Name":"And Yet Another Bracket Sequence","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["data structures","greedy","hashing","string suffix structures","strings"]},{"ContestId":524,"Index":"E","Name":"Rooks and Rectangles","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["data structures","sortings"]},{"ContestId":524,"Index":"D","Name":"Social Network","Type":"PROGRAMMING","Rating":2100,"Points":1250,"Tags":["greedy","two pointers"]},{"ContestId":524,"Index":"C","Name":"The Art of Dealing with ATM","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["binary search","sortings"]},{"ContestId":524,"Index":"B","Name":"–§–æ—Ç–æ –Ω–∞ –ø–∞–º—è—Ç—å - 2 (round version)","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["dp","greedy"]},{"ContestId":524,"Index":"A","Name":"–í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –∑–Ω–∞–µ—Ç–µ —ç—Ç–∏—Ö –ª—é–¥–µ–π?","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["implementation"]},{"ContestId":523,"Index":"D","Name":"Statistics of Recompressing Videos","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["*special","data structures","implementation"]},{"ContestId":523,"Index":"C","Name":"Name Quest","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["*special","greedy"]},{"ContestId":523,"Index":"B","Name":"Mean Requests","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["*special","implementation"]},{"ContestId":523,"Index":"A","Name":"Rotate, Flip and Zoom","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["*special","implementation"]},{"ContestId":522,"Index":"D","Name":"Closest Equals","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["*special","data structures"]},{"ContestId":522,"Index":"C","Name":"Chicken or Fish?","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["greedy"]},{"ContestId":522,"Index":"B","Name":"Photo to Remember","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["*special","data structures","dp","implementation"]},{"ContestId":522,"Index":"A","Name":"Reposts","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["*special","dfs and similar","dp","graphs","trees"]},{"ContestId":521,"Index":"E","Name":"Cycling City","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["dfs and similar","graphs"]},{"ContestId":521,"Index":"D","Name":"Shop","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["greedy"]},{"ContestId":520,"Index":"E","Name":"Pluses everywhere","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["combinatorics","dp","math","number theory"]},{"ContestId":520,"Index":"D","Name":"Cubes","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["games","greedy","implementation"]},{"ContestId":520,"Index":"C","Name":"DNA Alignment","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["math","strings"]},{"ContestId":520,"Index":"B","Name":"Two Buttons","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["dfs and similar","graphs","greedy","implementation","math","shortest paths"]},{"ContestId":520,"Index":"A","Name":"Pangram","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":519,"Index":"E","Name":"A and B and Lecture Rooms","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["binary search","data structures","dfs and similar","dp","trees"]},{"ContestId":519,"Index":"D","Name":"A and B and Interesting Substrings","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["data structures","dp","two pointers"]},{"ContestId":519,"Index":"C","Name":"A and B and Team Training","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["greedy","implementation","math","number theory"]},{"ContestId":519,"Index":"B","Name":"A and B and Compilation Errors","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["data structures","implementation","sortings"]},{"ContestId":519,"Index":"A","Name":"A and B and Chess","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":518,"Index":"F","Name":"Pasha and Pipe","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["binary search","brute force","combinatorics","dp","implementation"]},{"ContestId":518,"Index":"E","Name":"Arthur and Questions","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["greedy","implementation","math","ternary search"]},{"ContestId":518,"Index":"D","Name":"Ilya and Escalator","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":518,"Index":"C","Name":"Anya and Smartphone","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","data structures","implementation"]},{"ContestId":518,"Index":"B","Name":"Tanya and Postcard","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","implementation","strings"]},{"ContestId":518,"Index":"A","Name":"Vitaly and Strings","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["constructive algorithms","strings"]},{"ContestId":516,"Index":"E","Name":"Drazil and His Happy Friends","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["math","number theory"]},{"ContestId":516,"Index":"D","Name":"Drazil and Morning Exercise","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["dfs and similar","dp","dsu","trees","two pointers"]},{"ContestId":515,"Index":"E","Name":"Drazil and Park","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["data structures"]},{"ContestId":515,"Index":"D","Name":"Drazil and Tiles","Type":"PROGRAMMING","Rating":2000,"Points":3000,"Tags":["constructive algorithms","greedy"]},{"ContestId":515,"Index":"C","Name":"Drazil and Factorial","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","math","sortings"]},{"ContestId":515,"Index":"B","Name":"Drazil and His Happy Friends","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","dsu","meet-in-the-middle","number theory"]},{"ContestId":515,"Index":"A","Name":"Drazil and Date","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["math"]},{"ContestId":514,"Index":"E","Name":"Darth Vader and Tree","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["dp","matrices"]},{"ContestId":514,"Index":"D","Name":"R2D2 and Droid Army","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","data structures","two pointers"]},{"ContestId":514,"Index":"C","Name":"Watto and Mechanism","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","data structures","hashing","string suffix structures","strings"]},{"ContestId":514,"Index":"B","Name":"Han Solo and Lazer Gun","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","data structures","geometry","implementation","math"]},{"ContestId":514,"Index":"A","Name":"Chewba—Åca and Number","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":513,"Index":"G3","Name":"Inversions problem","Type":"PROGRAMMING","Rating":3100,"Points":16,"Tags":["dp"]},{"ContestId":513,"Index":"G2","Name":"Inversions problem","Type":"PROGRAMMING","Rating":2400,"Points":5,"Tags":["dp","probabilities"]},{"ContestId":513,"Index":"G1","Name":"Inversions problem","Type":"PROGRAMMING","Rating":1800,"Points":3,"Tags":["brute force","dfs and similar","dp","meet-in-the-middle"]},{"ContestId":513,"Index":"F2","Name":"Scaygerboss","Type":"PROGRAMMING","Rating":2800,"Points":6,"Tags":["flows"]},{"ContestId":513,"Index":"F1","Name":"Scaygerboss","Type":"PROGRAMMING","Rating":2700,"Points":14,"Tags":["flows"]},{"ContestId":513,"Index":"E2","Name":"Subarray Cuts","Type":"PROGRAMMING","Rating":2700,"Points":12,"Tags":["dp"]},{"ContestId":513,"Index":"E1","Name":"Subarray Cuts","Type":"PROGRAMMING","Rating":2600,"Points":9,"Tags":["dp"]},{"ContestId":513,"Index":"D2","Name":"Constrained Tree","Type":"PROGRAMMING","Rating":2600,"Points":8,"Tags":["constructive algorithms","data structures"]},{"ContestId":513,"Index":"D1","Name":"Constrained Tree","Type":"PROGRAMMING","Rating":2400,"Points":9,"Tags":["dfs and similar"]},{"ContestId":513,"Index":"C","Name":"Second price auction","Type":"PROGRAMMING","Rating":2000,"Points":8,"Tags":["bitmasks","probabilities"]},{"ContestId":513,"Index":"B2","Name":"Permutations","Type":"PROGRAMMING","Rating":1800,"Points":4,"Tags":["bitmasks","divide and conquer","math"]},{"ContestId":513,"Index":"B1","Name":"Permutations","Type":"PROGRAMMING","Rating":1400,"Points":3,"Tags":["brute force"]},{"ContestId":513,"Index":"A","Name":"Game","Type":"PROGRAMMING","Rating":800,"Points":3,"Tags":["constructive algorithms","math"]},{"ContestId":512,"Index":"E","Name":"Fox And Polygon","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["constructive algorithms","divide and conquer"]},{"ContestId":512,"Index":"D","Name":"Fox And Travelling","Type":"PROGRAMMING","Rating":2900,"Points":2250,"Tags":["dp","trees"]},{"ContestId":510,"Index":"E","Name":"Fox And Dinner","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["flows"]},{"ContestId":510,"Index":"D","Name":"Fox And Jumping","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["bitmasks","brute force","dp","math"]},{"ContestId":510,"Index":"C","Name":"Fox And Names","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["dfs and similar","graphs","sortings"]},{"ContestId":510,"Index":"B","Name":"Fox And Two Dots","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dfs and similar"]},{"ContestId":510,"Index":"A","Name":"Fox And Snake","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":509,"Index":"F","Name":"Progress Monitoring","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dp","trees"]},{"ContestId":509,"Index":"E","Name":"Pretty Song","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["math","strings"]},{"ContestId":509,"Index":"D","Name":"Restoring Numbers","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["constructive algorithms","math"]},{"ContestId":509,"Index":"C","Name":"Sums of Digits","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp","greedy","implementation"]},{"ContestId":509,"Index":"B","Name":"Painting Pebbles","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":509,"Index":"A","Name":"Maximum in Table","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":508,"Index":"E","Name":"Arthur and Brackets","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["dp","greedy"]},{"ContestId":508,"Index":"D","Name":"Tanya and Password","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dfs and similar","graphs"]},{"ContestId":508,"Index":"C","Name":"Anya and Ghosts","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":508,"Index":"B","Name":"Anton and currency you all know","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","math","strings"]},{"ContestId":508,"Index":"A","Name":"Pasha and Pixels","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force"]},{"ContestId":507,"Index":"E","Name":"Breaking Good","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["dfs and similar","dp","graphs","shortest paths"]},{"ContestId":507,"Index":"D","Name":"The Maths Lecture","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dp","implementation"]},{"ContestId":507,"Index":"C","Name":"Guess Your Way Out!","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["implementation","math","trees"]},{"ContestId":507,"Index":"B","Name":"Amr and Pins","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["geometry","math"]},{"ContestId":507,"Index":"A","Name":"Amr and Music","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":506,"Index":"E","Name":"Mr. Kitayuta's Gift","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["combinatorics","dp","matrices","strings"]},{"ContestId":506,"Index":"D","Name":"Mr. Kitayuta's Colorful Graph","Type":"PROGRAMMING","Rating":2400,"Points":1750,"Tags":["brute force","dfs and similar","dsu","graphs"]},{"ContestId":505,"Index":"E","Name":"Mr. Kitayuta vs. Bamboos","Type":"PROGRAMMING","Rating":2900,"Points":2750,"Tags":["binary search","greedy"]},{"ContestId":505,"Index":"D","Name":"Mr. Kitayuta's Technology","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dfs and similar"]},{"ContestId":505,"Index":"C","Name":"Mr. Kitayuta, the Treasure Hunter","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["dfs and similar","dp","two pointers"]},{"ContestId":505,"Index":"B","Name":"Mr. Kitayuta's Colorful Graph","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["dfs and similar","dp","dsu","graphs"]},{"ContestId":505,"Index":"A","Name":"Mr. Kitayuta's Gift","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation","strings"]},{"ContestId":504,"Index":"E","Name":"Misha and LCP on Tree","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["binary search","dfs and similar","hashing","string suffix structures","trees"]},{"ContestId":504,"Index":"D","Name":"Misha and XOR","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["bitmasks"]},{"ContestId":501,"Index":"E","Name":"Misha and Palindrome Degree","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["binary search","combinatorics","implementation"]},{"ContestId":501,"Index":"D","Name":"Misha and Permutations Summation","Type":"PROGRAMMING","Rating":2000,"Points":3000,"Tags":["data structures"]},{"ContestId":501,"Index":"C","Name":"Misha and Forest","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","data structures","greedy","sortings","trees"]},{"ContestId":501,"Index":"B","Name":"Misha and Changing Handles","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["data structures","dsu","strings"]},{"ContestId":501,"Index":"A","Name":"Contest","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":500,"Index":"G","Name":"New Year Running","Type":"PROGRAMMING","Rating":3200,"Points":3500,"Tags":["number theory","trees"]},{"ContestId":500,"Index":"F","Name":"New Year Shopping","Type":"PROGRAMMING","Rating":2700,"Points":2750,"Tags":["divide and conquer","dp"]},{"ContestId":500,"Index":"E","Name":"New Year Domino","Type":"PROGRAMMING","Rating":2300,"Points":2750,"Tags":["data structures","dp","dsu"]},{"ContestId":500,"Index":"D","Name":"New Year Santa Network","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["combinatorics","dfs and similar","graphs","trees"]},{"ContestId":500,"Index":"C","Name":"New Year Book Reading","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["constructive algorithms","greedy","implementation","math"]},{"ContestId":500,"Index":"B","Name":"New Year Permutation","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["dfs and similar","dsu","graphs","greedy","math","sortings"]},{"ContestId":500,"Index":"A","Name":"New Year Transportation","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["dfs and similar","graphs","implementation"]},{"ContestId":499,"Index":"B","Name":"Lecture","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","strings"]},{"ContestId":499,"Index":"A","Name":"Watching a movie","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":498,"Index":"E","Name":"Stairs and Lines","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["dp","matrices"]},{"ContestId":498,"Index":"D","Name":"Traffic Jams in the Land","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures","dp","number theory"]},{"ContestId":498,"Index":"C","Name":"Array and Operations","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["flows","graph matchings","number theory"]},{"ContestId":498,"Index":"B","Name":"Name That Tune","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["dp","probabilities","two pointers"]},{"ContestId":498,"Index":"A","Name":"Crazy Town","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["geometry"]},{"ContestId":497,"Index":"E","Name":"Subsequences Return","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["dp","matrices"]},{"ContestId":497,"Index":"D","Name":"Gears","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["brute force","geometry","math"]},{"ContestId":496,"Index":"E","Name":"Distributing Parts ","Type":"PROGRAMMING","Rating":2100,"Points":2250,"Tags":["greedy","sortings"]},{"ContestId":496,"Index":"D","Name":"Tennis Game","Type":"PROGRAMMING","Rating":1900,"Points":2250,"Tags":["binary search"]},{"ContestId":496,"Index":"C","Name":"Removing Columns","Type":"PROGRAMMING","Rating":1500,"Points":1750,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":496,"Index":"B","Name":"Secret Combination","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":496,"Index":"A","Name":"Minimum Difficulty","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":495,"Index":"B","Name":"Modular Equations","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["math","number theory"]},{"ContestId":495,"Index":"A","Name":"Digital Counter","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":494,"Index":"E","Name":"Sharti","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["data structures","games"]},{"ContestId":494,"Index":"D","Name":"Birthday","Type":"PROGRAMMING","Rating":2700,"Points":1750,"Tags":["data structures","dfs and similar","dp","trees"]},{"ContestId":494,"Index":"C","Name":"Helping People","Type":"PROGRAMMING","Rating":2600,"Points":1750,"Tags":["dp","probabilities"]},{"ContestId":494,"Index":"B","Name":"Obsessive String","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["dp","strings"]},{"ContestId":494,"Index":"A","Name":"Treasure","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["greedy"]},{"ContestId":493,"Index":"E","Name":"Vasya and Polynomial","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["math"]},{"ContestId":493,"Index":"D","Name":"Vasya and Chess","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","games","math"]},{"ContestId":493,"Index":"C","Name":"Vasya and Basketball","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["binary search","brute force","data structures","implementation","sortings","two pointers"]},{"ContestId":493,"Index":"B","Name":"Vasya and Wrestling","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation"]},{"ContestId":493,"Index":"A","Name":"Vasya and Football","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation"]},{"ContestId":492,"Index":"E","Name":"Vanya and Field","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["math"]},{"ContestId":492,"Index":"D","Name":"Vanya and Computer Game","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["binary search","implementation","math","sortings"]},{"ContestId":492,"Index":"C","Name":"Vanya and Exams","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy","sortings"]},{"ContestId":492,"Index":"B","Name":"Vanya and Lanterns","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["binary search","implementation","math","sortings"]},{"ContestId":492,"Index":"A","Name":"Vanya and Cubes","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":491,"Index":"C","Name":"Deciphering","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["flows","graph matchings"]},{"ContestId":491,"Index":"B","Name":"New York Hotel","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["greedy","math"]},{"ContestId":491,"Index":"A","Name":"Up the hill","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":490,"Index":"F","Name":"Treeland Tour","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["data structures","dfs and similar","dp","trees"]},{"ContestId":490,"Index":"E","Name":"Restoring Increasing Sequence","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","brute force","greedy","implementation"]},{"ContestId":490,"Index":"D","Name":"Chocolate","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["brute force","dfs and similar","math","meet-in-the-middle","number theory"]},{"ContestId":490,"Index":"C","Name":"Hacking Cypher","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","math","number theory","strings"]},{"ContestId":490,"Index":"B","Name":"Queue","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dsu","implementation"]},{"ContestId":490,"Index":"A","Name":"Team Olympiad","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":489,"Index":"F","Name":"Special Matrices","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["combinatorics","dp"]},{"ContestId":489,"Index":"E","Name":"Hiking","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["binary search","dp"]},{"ContestId":489,"Index":"D","Name":"Unbearable Controversy of Being","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["brute force","combinatorics","dfs and similar","graphs"]},{"ContestId":489,"Index":"C","Name":"Given Length and Sum of Digits...","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["dp","greedy","implementation"]},{"ContestId":489,"Index":"B","Name":"BerSU Ball","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["dfs and similar","dp","graph matchings","greedy","sortings","two pointers"]},{"ContestId":489,"Index":"A","Name":"SwapSort","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":488,"Index":"B","Name":"Candy Boxes","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":488,"Index":"A","Name":"Giga Tower","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force"]},{"ContestId":487,"Index":"E","Name":"Tourists","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["data structures","dfs and similar","graphs","trees"]},{"ContestId":487,"Index":"D","Name":"Conveyor Belts","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["data structures"]},{"ContestId":487,"Index":"C","Name":"Prefix Product Sequence","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":487,"Index":"B","Name":"Strip","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["binary search","data structures","dp","two pointers"]},{"ContestId":487,"Index":"A","Name":"Fight the Monster","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["binary search","brute force","implementation"]},{"ContestId":486,"Index":"E","Name":"LIS of Sequence","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["data structures","dp","greedy","hashing","math"]},{"ContestId":486,"Index":"D","Name":"Valid Sets","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["dfs and similar","dp","math","trees"]},{"ContestId":486,"Index":"C","Name":"Palindrome Transformation","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","greedy","implementation"]},{"ContestId":486,"Index":"B","Name":"OR in Matrix","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","hashing","implementation"]},{"ContestId":486,"Index":"A","Name":"Calculating Function","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":485,"Index":"B","Name":"Valuable Resources","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":485,"Index":"A","Name":"Factory","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","math","matrices"]},{"ContestId":484,"Index":"E","Name":"Sign on Fence","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["binary search","constructive algorithms","data structures"]},{"ContestId":484,"Index":"D","Name":"Kindergarten","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures","dp","greedy"]},{"ContestId":484,"Index":"C","Name":"Strange Sorting","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["implementation","math"]},{"ContestId":484,"Index":"B","Name":"Maximum Value","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["binary search","math","sortings","two pointers"]},{"ContestId":484,"Index":"A","Name":"Bits","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["bitmasks","constructive algorithms"]},{"ContestId":483,"Index":"B","Name":"Friends and Presents","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["binary search","math"]},{"ContestId":483,"Index":"A","Name":"Counterexample ","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation","math","number theory"]},{"ContestId":482,"Index":"E","Name":"ELCA","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["data structures","trees"]},{"ContestId":482,"Index":"D","Name":"Random Function and Tree","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["combinatorics","dp","trees"]},{"ContestId":482,"Index":"C","Name":"Game with Strings","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["bitmasks","dp","probabilities"]},{"ContestId":482,"Index":"B","Name":"Interesting Array","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["constructive algorithms","data structures","trees"]},{"ContestId":482,"Index":"A","Name":"Diverse Permutation","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":480,"Index":"E","Name":"Parking Lot","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["data structures","divide and conquer"]},{"ContestId":480,"Index":"D","Name":"Parcels","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["dp","graphs"]},{"ContestId":479,"Index":"E","Name":"Riding in a Lift","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["combinatorics","dp"]},{"ContestId":479,"Index":"D","Name":"Long Jumps","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["binary search","greedy","implementation"]},{"ContestId":479,"Index":"C","Name":"Exams","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy","sortings"]},{"ContestId":479,"Index":"B","Name":"Towers","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","constructive algorithms","greedy","implementation","sortings"]},{"ContestId":479,"Index":"A","Name":"Expression","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","math"]},{"ContestId":478,"Index":"E","Name":"Wavy numbers","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["brute force","dfs and similar","meet-in-the-middle","sortings"]},{"ContestId":478,"Index":"D","Name":"Red-Green Towers","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dp"]},{"ContestId":478,"Index":"C","Name":"Table Decorations","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["greedy"]},{"ContestId":478,"Index":"B","Name":"Random Teams","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["combinatorics","constructive algorithms","greedy","math"]},{"ContestId":478,"Index":"A","Name":"Initial Bet","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":477,"Index":"E","Name":"Dreamoon and Notepad","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["data structures"]},{"ContestId":477,"Index":"D","Name":"Dreamoon and Binary","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["dp","strings"]},{"ContestId":476,"Index":"E","Name":"Dreamoon and Strings","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["dp","strings"]},{"ContestId":476,"Index":"D","Name":"Dreamoon and Sets","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":476,"Index":"C","Name":"Dreamoon and Sums","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["math"]},{"ContestId":476,"Index":"B","Name":"Dreamoon and WiFi","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["bitmasks","brute force","combinatorics","dp","math","probabilities"]},{"ContestId":476,"Index":"A","Name":"Dreamoon and Stairs","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","math"]},{"ContestId":475,"Index":"F","Name":"Meta-universe","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["data structures"]},{"ContestId":475,"Index":"E","Name":"Strongly Connected City 2","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["dfs and similar"]},{"ContestId":475,"Index":"D","Name":"CGCDSSQ","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["brute force","data structures","math"]},{"ContestId":475,"Index":"C","Name":"Kamal-ol-molk's Painting","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":475,"Index":"B","Name":"Strongly Connected City","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","dfs and similar","graphs","implementation"]},{"ContestId":475,"Index":"A","Name":"Bayan Bus","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":474,"Index":"F","Name":"Ant colony","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["data structures","math","number theory"]},{"ContestId":474,"Index":"E","Name":"Pillars","Type":"PROGRAMMING","Rating":2000,"Points":3000,"Tags":["binary search","data structures","dp","sortings","trees"]},{"ContestId":474,"Index":"D","Name":"Flowers","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["dp"]},{"ContestId":474,"Index":"C","Name":"Captain Marmot","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["brute force","geometry"]},{"ContestId":474,"Index":"B","Name":"Worms","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["binary search","implementation"]},{"ContestId":474,"Index":"A","Name":"Keyboard","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":472,"Index":"G","Name":"Design Tutorial: Increase the Constraints","Type":"PROGRAMMING","Rating":2800,"Points":3500,"Tags":["bitmasks","data structures","fft"]},{"ContestId":472,"Index":"F","Name":"Design Tutorial: Change the Goal","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["constructive algorithms","math","matrices"]},{"ContestId":472,"Index":"E","Name":"Design Tutorial: Learn from a Game","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["constructive algorithms","implementation"]},{"ContestId":472,"Index":"D","Name":"Design Tutorial: Inverse the Problem","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dfs and similar","dsu","shortest paths","trees"]},{"ContestId":472,"Index":"C","Name":"Design Tutorial: Make It Nondeterministic","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy"]},{"ContestId":472,"Index":"B","Name":"Design Tutorial: Learn from Life","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":[]},{"ContestId":472,"Index":"A","Name":"Design Tutorial: Learn from Math","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["math","number theory"]},{"ContestId":471,"Index":"E","Name":"MUH and Lots and Lots of Segments","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["data structures","dsu"]},{"ContestId":471,"Index":"D","Name":"MUH and Cube Walls","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["string suffix structures","strings"]},{"ContestId":471,"Index":"C","Name":"MUH and House of Cards","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["binary search","brute force","greedy","math"]},{"ContestId":471,"Index":"B","Name":"MUH and Important Things","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":471,"Index":"A","Name":"MUH and Sticks","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":470,"Index":"H","Name":"Array Sorting","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special"]},{"ContestId":470,"Index":"G","Name":"Hamming Distance","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special"]},{"ContestId":470,"Index":"F","Name":"Pairwise Sums","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special"]},{"ContestId":470,"Index":"E","Name":"Chessboard","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":470,"Index":"D","Name":"Caesar Cipher","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":470,"Index":"C","Name":"Eval","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":470,"Index":"B","Name":"Hexakosioihexekontahexaphobia","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":470,"Index":"A","Name":"Crystal Ball Sequence","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","implementation"]},{"ContestId":469,"Index":"B","Name":"Chat Online","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":469,"Index":"A","Name":"I Wanna Be the Guy","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":468,"Index":"E","Name":"Permanent","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["dp","graph matchings","math","meet-in-the-middle"]},{"ContestId":468,"Index":"D","Name":"Tree","Type":"PROGRAMMING","Rating":3100,"Points":2000,"Tags":["graph matchings"]},{"ContestId":468,"Index":"C","Name":"Hack it!","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["binary search","constructive algorithms","math"]},{"ContestId":468,"Index":"B","Name":"Two Sets","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["2-sat","dfs and similar","dsu","graph matchings","greedy"]},{"ContestId":468,"Index":"A","Name":"24 Game","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":467,"Index":"E","Name":"Alex and Complicated Task","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["data structures","dp","greedy"]},{"ContestId":467,"Index":"D","Name":"Fedor and Essay","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["dfs and similar","dp","graphs","hashing","strings"]},{"ContestId":467,"Index":"C","Name":"George and Job","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dp","implementation"]},{"ContestId":467,"Index":"B","Name":"Fedor and New Game","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["bitmasks","brute force","constructive algorithms","implementation"]},{"ContestId":467,"Index":"A","Name":"George and Accommodation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":466,"Index":"E","Name":"Information Graph","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["dfs and similar","dsu","graphs","trees"]},{"ContestId":466,"Index":"D","Name":"Increase Sequence","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["combinatorics","dp"]},{"ContestId":466,"Index":"C","Name":"Number of Ways","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","brute force","data structures","dp","two pointers"]},{"ContestId":466,"Index":"B","Name":"Wonder Room","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["brute force","math"]},{"ContestId":466,"Index":"A","Name":"Cheap Travel","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":465,"Index":"B","Name":"Inbox (100500)","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["implementation"]},{"ContestId":465,"Index":"A","Name":"inc ARG","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":464,"Index":"E","Name":"The Classic Problem","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["data structures","graphs","shortest paths"]},{"ContestId":464,"Index":"D","Name":"World of Darkraft - 2","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["dp","probabilities"]},{"ContestId":464,"Index":"C","Name":"Substitutes in Number","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dp"]},{"ContestId":464,"Index":"B","Name":"Restore Cube ","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["brute force","geometry"]},{"ContestId":464,"Index":"A","Name":"No to Palindromes!","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["greedy","strings"]},{"ContestId":463,"Index":"E","Name":"Caisa and Tree","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["brute force","dfs and similar","math","number theory","trees"]},{"ContestId":463,"Index":"D","Name":"Gargari and Permutations","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dfs and similar","dp","graphs","implementation"]},{"ContestId":463,"Index":"C","Name":"Gargari and Bishops","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["greedy","hashing","implementation"]},{"ContestId":463,"Index":"B","Name":"Caisa and Pylons","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","implementation","math"]},{"ContestId":463,"Index":"A","Name":"Caisa and Sugar","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":462,"Index":"B","Name":"Appleman and Card Game","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy"]},{"ContestId":462,"Index":"A","Name":"Appleman and Easy Task","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":461,"Index":"E","Name":"Appleman and a Game","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["binary search","shortest paths","strings"]},{"ContestId":461,"Index":"D","Name":"Appleman and Complicated Task","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["dsu","math"]},{"ContestId":461,"Index":"C","Name":"Appleman and a Sheet of Paper","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["data structures","implementation"]},{"ContestId":461,"Index":"B","Name":"Appleman and Tree","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["dfs and similar","dp","trees"]},{"ContestId":461,"Index":"A","Name":"Appleman and Toastman","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":460,"Index":"E","Name":"Roland and Rose","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["brute force","geometry","math","sortings"]},{"ContestId":460,"Index":"D","Name":"Little Victor and Set","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["brute force","constructive algorithms","math"]},{"ContestId":460,"Index":"C","Name":"Present","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","data structures","greedy"]},{"ContestId":460,"Index":"B","Name":"Little Dima and Equation","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","implementation","math","number theory"]},{"ContestId":460,"Index":"A","Name":"Vasya and Socks","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":459,"Index":"E","Name":"Pashmak and Graph","Type":"PROGRAMMING","Rating":1900,"Points":3000,"Tags":["dp","sortings"]},{"ContestId":459,"Index":"D","Name":"Pashmak and Parmida's problem","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["data structures","divide and conquer","sortings"]},{"ContestId":459,"Index":"C","Name":"Pashmak and Buses","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["combinatorics","constructive algorithms","math"]},{"ContestId":459,"Index":"B","Name":"Pashmak and Flowers","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["combinatorics","implementation","sortings"]},{"ContestId":459,"Index":"A","Name":"Pashmak and Garden","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":457,"Index":"F","Name":"An easy problem about trees","Type":"PROGRAMMING","Rating":3200,"Points":3000,"Tags":["dp","games","greedy","trees"]},{"ContestId":457,"Index":"E","Name":"Flow Optimality","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["constructive algorithms","flows","math"]},{"ContestId":457,"Index":"D","Name":"Bingo!","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["combinatorics","math","probabilities"]},{"ContestId":457,"Index":"C","Name":"Elections","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["brute force"]},{"ContestId":457,"Index":"B","Name":"Distributed Join","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["greedy"]},{"ContestId":457,"Index":"A","Name":"Golden System","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["math","meet-in-the-middle"]},{"ContestId":456,"Index":"B","Name":"Fedya and Maths","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["math","number theory"]},{"ContestId":456,"Index":"A","Name":"Laptops","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["sortings"]},{"ContestId":455,"Index":"E","Name":"Function","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["data structures"]},{"ContestId":455,"Index":"D","Name":"Serega and Fun","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["data structures"]},{"ContestId":455,"Index":"C","Name":"Civilization","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dfs and similar","dp","dsu","ternary search","trees"]},{"ContestId":455,"Index":"B","Name":"A Lot of Games","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["dfs and similar","dp","games","implementation","strings","trees"]},{"ContestId":455,"Index":"A","Name":"Boredom","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["dp"]},{"ContestId":454,"Index":"B","Name":"Little Pony and Sort by Shift","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation"]},{"ContestId":454,"Index":"A","Name":"Little Pony and Crystal Mine","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":453,"Index":"E","Name":"Little Pony and Lord Tirek","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["data structures"]},{"ContestId":453,"Index":"D","Name":"Little Pony and Elements of Harmony","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["dp","matrices"]},{"ContestId":453,"Index":"C","Name":"Little Pony and Summer Sun Celebration","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":453,"Index":"B","Name":"Little Pony and Harmony Chest","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["bitmasks","brute force","dp"]},{"ContestId":453,"Index":"A","Name":"Little Pony and Expected Maximum","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["probabilities"]},{"ContestId":452,"Index":"F","Name":"Permutation","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["data structures","divide and conquer","hashing"]},{"ContestId":452,"Index":"E","Name":"Three strings","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","dsu","string suffix structures","strings"]},{"ContestId":452,"Index":"D","Name":"Washer, Dryer, Folder","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["greedy","implementation"]},{"ContestId":452,"Index":"C","Name":"Magic Trick","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["combinatorics","math","probabilities"]},{"ContestId":452,"Index":"B","Name":"4-point polyline","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["brute force","constructive algorithms","geometry","trees"]},{"ContestId":452,"Index":"A","Name":"Eevee","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","implementation","strings"]},{"ContestId":451,"Index":"E","Name":"Devu and Flowers","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["bitmasks","combinatorics","number theory"]},{"ContestId":451,"Index":"D","Name":"Count Good Substrings","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["math"]},{"ContestId":451,"Index":"C","Name":"Predict Outcome of the Game","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","implementation","math"]},{"ContestId":451,"Index":"B","Name":"Sort the Array","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":451,"Index":"A","Name":"Game With Sticks","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":450,"Index":"B","Name":"Jzzhu and Sequences","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","math"]},{"ContestId":450,"Index":"A","Name":"Jzzhu and Children","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":449,"Index":"E","Name":"Jzzhu and Squares","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["dp","math","number theory"]},{"ContestId":449,"Index":"D","Name":"Jzzhu and Numbers","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["bitmasks","combinatorics","dp"]},{"ContestId":449,"Index":"C","Name":"Jzzhu and Apples","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["constructive algorithms","number theory"]},{"ContestId":449,"Index":"B","Name":"Jzzhu and Cities","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["graphs","greedy","shortest paths"]},{"ContestId":449,"Index":"A","Name":"Jzzhu and Chocolate","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["greedy","math"]},{"ContestId":448,"Index":"E","Name":"Divisors","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["brute force","dfs and similar","implementation","number theory"]},{"ContestId":448,"Index":"D","Name":"Multiplication Table","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["binary search","brute force"]},{"ContestId":448,"Index":"C","Name":"Painting Fence","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["divide and conquer","dp","greedy"]},{"ContestId":448,"Index":"B","Name":"Suffix Structures","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":448,"Index":"A","Name":"Rewards","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":447,"Index":"B","Name":"DZY Loves Strings","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":447,"Index":"A","Name":"DZY Loves Hash","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":446,"Index":"E","Name":"DZY Loves Bridges","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["math","matrices"]},{"ContestId":446,"Index":"D","Name":"DZY Loves Games","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["math","matrices","probabilities"]},{"ContestId":446,"Index":"C","Name":"DZY Loves Fibonacci Numbers","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["data structures","math","number theory"]},{"ContestId":446,"Index":"B","Name":"DZY Loves Modification","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["brute force","data structures","greedy"]},{"ContestId":446,"Index":"A","Name":"DZY Loves Sequences","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["dp","implementation","two pointers"]},{"ContestId":445,"Index":"B","Name":"DZY Loves Chemistry","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["dfs and similar","dsu","greedy"]},{"ContestId":445,"Index":"A","Name":"DZY Loves Chessboard","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["dfs and similar","implementation"]},{"ContestId":444,"Index":"E","Name":"DZY Loves Planting","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["binary search","dsu","trees"]},{"ContestId":444,"Index":"D","Name":"DZY Loves Strings","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["binary search","hashing","strings","two pointers"]},{"ContestId":444,"Index":"C","Name":"DZY Loves Colors","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures"]},{"ContestId":444,"Index":"B","Name":"DZY Loves FFT","Type":"PROGRAMMING","Rating":2300,"Points":1000,"Tags":["probabilities"]},{"ContestId":444,"Index":"A","Name":"DZY Loves Physics","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["greedy","math"]},{"ContestId":443,"Index":"B","Name":"Kolya and Tandem Repeat","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","implementation","strings"]},{"ContestId":443,"Index":"A","Name":"Anton and Letters","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":442,"Index":"E","Name":"Gena and Second Distance","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["geometry"]},{"ContestId":442,"Index":"D","Name":"Adam and Tree","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["data structures","trees"]},{"ContestId":442,"Index":"C","Name":"Artem and Array ","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["data structures","greedy"]},{"ContestId":442,"Index":"B","Name":"Andrey and Problem","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["greedy","math","probabilities"]},{"ContestId":442,"Index":"A","Name":"Borya and Hanabi","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["bitmasks","brute force","implementation"]},{"ContestId":441,"Index":"E","Name":"Valera and Number","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["bitmasks","dp","math","probabilities"]},{"ContestId":441,"Index":"D","Name":"Valera and Swaps","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["constructive algorithms","dsu","graphs","implementation","math","string suffix structures"]},{"ContestId":441,"Index":"C","Name":"Valera and Tubes ","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","dfs and similar","implementation"]},{"ContestId":441,"Index":"B","Name":"Valera and Fruits","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":441,"Index":"A","Name":"Valera and Antique Items","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":440,"Index":"D","Name":"Berland Federalization","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dp","trees"]},{"ContestId":440,"Index":"C","Name":"One-Based Arithmetic","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["brute force","dfs and similar","divide and conquer"]},{"ContestId":440,"Index":"B","Name":"Balancer","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":440,"Index":"A","Name":"Forgotten Episode","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":439,"Index":"E","Name":"Devu and Birthday Celebration","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["combinatorics","dp","math"]},{"ContestId":439,"Index":"D","Name":"Devu and his Brother","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["binary search","sortings","ternary search","two pointers"]},{"ContestId":439,"Index":"C","Name":"Devu and Partitioning of the Array","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","constructive algorithms","implementation","number theory"]},{"ContestId":439,"Index":"B","Name":"Devu, the Dumb Guy","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":439,"Index":"A","Name":"Devu, the Singer and Churu, the Joker","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":438,"Index":"E","Name":"The Child and Binary Tree","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["combinatorics","divide and conquer","fft","number theory"]},{"ContestId":438,"Index":"D","Name":"The Child and Sequence","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["data structures","math"]},{"ContestId":437,"Index":"E","Name":"The Child and Polygon","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dp","geometry"]},{"ContestId":437,"Index":"D","Name":"The Child and Zoo","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dsu","sortings"]},{"ContestId":437,"Index":"C","Name":"The Child and Toy","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["graphs","greedy","sortings"]},{"ContestId":437,"Index":"B","Name":"The Child and Set","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["bitmasks","greedy","implementation","sortings"]},{"ContestId":437,"Index":"A","Name":"The Child and Homework","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation"]},{"ContestId":436,"Index":"F","Name":"Banners","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["brute force","data structures","dp"]},{"ContestId":436,"Index":"E","Name":"Cardboard Box","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures","greedy"]},{"ContestId":436,"Index":"D","Name":"Pudding Monsters","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["dp"]},{"ContestId":436,"Index":"C","Name":"Dungeons and Candies","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dsu","graphs","greedy","trees"]},{"ContestId":436,"Index":"B","Name":"Om Nom and Spiders","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","math"]},{"ContestId":436,"Index":"A","Name":"Feed with Candy","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy"]},{"ContestId":435,"Index":"E","Name":"Special Graph","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":[]},{"ContestId":435,"Index":"D","Name":"Special Grid","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["brute force","dp","greedy"]},{"ContestId":435,"Index":"C","Name":"Cardiogram","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["implementation"]},{"ContestId":435,"Index":"B","Name":"Pasha Maximizes","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy"]},{"ContestId":435,"Index":"A","Name":"Queue on Bus Stop","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":434,"Index":"E","Name":"Furukawa Nagisa's Tree","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["binary search","divide and conquer","sortings","trees"]},{"ContestId":434,"Index":"D","Name":"Nanami's Power Plant","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["flows"]},{"ContestId":433,"Index":"E","Name":"Tachibana Kanade's Tofu","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dp"]},{"ContestId":433,"Index":"D","Name":"Nanami's Digital Board","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dsu","implementation"]},{"ContestId":433,"Index":"C","Name":"Ryouko's Memory Note","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["implementation","math","sortings"]},{"ContestId":433,"Index":"B","Name":"Kuriyama Mirai's Stones","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["dp","implementation","sortings"]},{"ContestId":433,"Index":"A","Name":"Kitahara Haruki's Gift","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":432,"Index":"E","Name":"Square Tiling","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["constructive algorithms","greedy"]},{"ContestId":432,"Index":"D","Name":"Prefixes and Suffixes","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dp","string suffix structures","strings","two pointers"]},{"ContestId":432,"Index":"C","Name":"Prime Swaps","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["greedy","sortings"]},{"ContestId":432,"Index":"B","Name":"Football Kit","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","greedy","implementation"]},{"ContestId":432,"Index":"A","Name":"Choosing Teams","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":431,"Index":"E","Name":"Chemistry Experiment","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["binary search","data structures","ternary search"]},{"ContestId":431,"Index":"D","Name":"Random Task","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","bitmasks","combinatorics","dp","math"]},{"ContestId":431,"Index":"C","Name":"k-Tree","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["dp","implementation","trees"]},{"ContestId":431,"Index":"B","Name":"Shower Line","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["brute force","implementation"]},{"ContestId":431,"Index":"A","Name":"Black Square","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":430,"Index":"B","Name":"Balls Game","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","two pointers"]},{"ContestId":430,"Index":"A","Name":"Points and Segments (easy)","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["constructive algorithms","sortings"]},{"ContestId":429,"Index":"E","Name":"Points and Segments","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["graphs"]},{"ContestId":429,"Index":"D","Name":"Tricky Function","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["data structures","divide and conquer","geometry"]},{"ContestId":429,"Index":"C","Name":"Guess the Tree","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["bitmasks","constructive algorithms","dp","greedy","trees"]},{"ContestId":429,"Index":"B","Name":"Working out","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["dp"]},{"ContestId":429,"Index":"A","Name":"Xor-tree","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["dfs and similar","trees"]},{"ContestId":427,"Index":"E","Name":"Police Patrol","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["greedy","implementation","math","ternary search"]},{"ContestId":427,"Index":"D","Name":"Match \u0026 Catch","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dp","string suffix structures","strings"]},{"ContestId":427,"Index":"C","Name":"Checkposts","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dfs and similar","graphs","two pointers"]},{"ContestId":427,"Index":"B","Name":"Prison Transfer","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["data structures","implementation"]},{"ContestId":427,"Index":"A","Name":"Police Recruits","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":426,"Index":"B","Name":"Sereja and Mirroring","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":426,"Index":"A","Name":"Sereja and Mugs","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":425,"Index":"E","Name":"Sereja and Sets","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp"]},{"ContestId":425,"Index":"D","Name":"Sereja and Squares","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["binary search","data structures","hashing"]},{"ContestId":425,"Index":"C","Name":"Sereja and Two Sequences","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["data structures","dp"]},{"ContestId":425,"Index":"B","Name":"Sereja and Table ","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["bitmasks","greedy"]},{"ContestId":425,"Index":"A","Name":"Sereja and Swaps","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","sortings"]},{"ContestId":424,"Index":"E","Name":"Colored Jenga","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["dfs and similar","dp","probabilities"]},{"ContestId":424,"Index":"D","Name":"Biathlon Track","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["binary search","brute force","constructive algorithms","data structures","dp"]},{"ContestId":424,"Index":"C","Name":"Magic Formulas","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["math"]},{"ContestId":424,"Index":"B","Name":"Megacity","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["binary search","greedy","implementation","sortings"]},{"ContestId":424,"Index":"A","Name":"Squats","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":421,"Index":"D","Name":"Bug in Code","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","data structures","sortings"]},{"ContestId":421,"Index":"A","Name":"Pasha and Hamsters","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":420,"Index":"E","Name":"Playing the ball","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["geometry"]},{"ContestId":420,"Index":"D","Name":"Cup Trick","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["data structures"]},{"ContestId":420,"Index":"C","Name":"Bug in Code","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["data structures","graphs","implementation","two pointers"]},{"ContestId":420,"Index":"B","Name":"Online Meeting","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["implementation"]},{"ContestId":420,"Index":"A","Name":"Start Up","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":418,"Index":"E","Name":"Tricky Password","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["data structures"]},{"ContestId":418,"Index":"D","Name":"Big Problems for Organizers","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["data structures","graphs","trees"]},{"ContestId":417,"Index":"E","Name":"Square Table","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["constructive algorithms","math","probabilities"]},{"ContestId":417,"Index":"D","Name":"Cunning Gena","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["bitmasks","dp","greedy","sortings"]},{"ContestId":417,"Index":"C","Name":"Football","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","graphs","implementation"]},{"ContestId":417,"Index":"B","Name":"Crash","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation"]},{"ContestId":417,"Index":"A","Name":"Elimination","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["dp","implementation","math"]},{"ContestId":416,"Index":"E","Name":"President's Path","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dp","graphs","shortest paths"]},{"ContestId":416,"Index":"D","Name":"Population Size","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["greedy","implementation","math"]},{"ContestId":416,"Index":"C","Name":"Booking System","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","dp","greedy","implementation"]},{"ContestId":416,"Index":"B","Name":"Art Union","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","dp","implementation"]},{"ContestId":416,"Index":"A","Name":"Guess a number!","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["greedy","implementation","two pointers"]},{"ContestId":415,"Index":"B","Name":"Mashmokh and Tokens","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","greedy","implementation","math"]},{"ContestId":415,"Index":"A","Name":"Mashmokh and Lights","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":414,"Index":"E","Name":"Mashmokh's Designed Problem","Type":"PROGRAMMING","Rating":3200,"Points":2500,"Tags":["data structures"]},{"ContestId":414,"Index":"D","Name":"Mashmokh and Water Tanks","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["binary search","data structures","greedy","trees","two pointers"]},{"ContestId":414,"Index":"C","Name":"Mashmokh and Reverse Operation","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["combinatorics","divide and conquer"]},{"ContestId":414,"Index":"B","Name":"Mashmokh and ACM","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["combinatorics","dp","number theory"]},{"ContestId":414,"Index":"A","Name":"Mashmokh and Numbers","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["constructive algorithms","number theory"]},{"ContestId":413,"Index":"E","Name":"Maze 2D","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["data structures","divide and conquer"]},{"ContestId":413,"Index":"D","Name":"2048","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["bitmasks","dp"]},{"ContestId":413,"Index":"C","Name":"Jeopardy!","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy","math"]},{"ContestId":413,"Index":"B","Name":"Spyke Chatting","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":413,"Index":"A","Name":"Data Recovery","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":412,"Index":"E","Name":"E-mail Addresses","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["implementation"]},{"ContestId":412,"Index":"D","Name":"Giving Awards","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dfs and similar"]},{"ContestId":412,"Index":"C","Name":"Pattern","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["implementation","strings"]},{"ContestId":412,"Index":"B","Name":"Network Configuration","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":412,"Index":"A","Name":"Poster","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":411,"Index":"C","Name":"Kicker","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["implementation"]},{"ContestId":411,"Index":"B","Name":"Multi-core Processor","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":411,"Index":"A","Name":"Password Check","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["*special","implementation"]},{"ContestId":409,"Index":"I","Name":"Feed the Golorp","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["*special"]},{"ContestId":409,"Index":"H","Name":"A + B Strikes Back","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","brute force","constructive algorithms","dsu","implementation"]},{"ContestId":409,"Index":"G","Name":"On a plane","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special","geometry"]},{"ContestId":409,"Index":"F","Name":"000001","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":409,"Index":"E","Name":"Dome","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":409,"Index":"D","Name":"Big Data","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special"]},{"ContestId":409,"Index":"C","Name":"Magnum Opus","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special"]},{"ContestId":409,"Index":"B","Name":"Mysterious Language","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special"]},{"ContestId":409,"Index":"A","Name":"The Great Game","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special"]},{"ContestId":408,"Index":"B","Name":"Garland","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation"]},{"ContestId":408,"Index":"A","Name":"Line to Cashier","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":407,"Index":"E","Name":"k-d-sequence","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["data structures"]},{"ContestId":407,"Index":"D","Name":"Largest Submatrix 3","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["dp","hashing"]},{"ContestId":407,"Index":"C","Name":"Curious Array","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["brute force","combinatorics","implementation","math"]},{"ContestId":407,"Index":"B","Name":"Long Path","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["dp","implementation"]},{"ContestId":407,"Index":"A","Name":"Triangle","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["brute force","geometry","implementation","math"]},{"ContestId":406,"Index":"E","Name":"Hamming Triples","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["implementation","math","two pointers"]},{"ContestId":406,"Index":"D","Name":"Hill Climbing","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dfs and similar","geometry","trees"]},{"ContestId":405,"Index":"E","Name":"Graph Cutting","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["dfs and similar","graphs"]},{"ContestId":405,"Index":"D","Name":"Toy Sum","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["greedy","implementation","math"]},{"ContestId":405,"Index":"C","Name":"Unusual Product","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["implementation","math"]},{"ContestId":405,"Index":"B","Name":"Domino Effect","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":[]},{"ContestId":405,"Index":"A","Name":"Gravity Flip","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":404,"Index":"E","Name":"Maze 1D","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["binary search","greedy","implementation"]},{"ContestId":404,"Index":"D","Name":"Minesweeper 1D","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dp","implementation"]},{"ContestId":404,"Index":"C","Name":"Restore Graph","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dfs and similar","graphs","sortings"]},{"ContestId":404,"Index":"B","Name":"Marathon","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["implementation","math"]},{"ContestId":404,"Index":"A","Name":"Valera and X","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":403,"Index":"E","Name":"Two Rooted Trees","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["data structures","implementation","trees"]},{"ContestId":403,"Index":"D","Name":"Beautiful Pairs of Numbers","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["combinatorics","dp"]},{"ContestId":402,"Index":"E","Name":"Strictly Positive Matrix","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["graphs","math"]},{"ContestId":402,"Index":"D","Name":"Upgrading Array","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dp","greedy","math","number theory"]},{"ContestId":402,"Index":"C","Name":"Searching for Graph","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["brute force","constructive algorithms","graphs"]},{"ContestId":402,"Index":"B","Name":"Trees in a Row","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":402,"Index":"A","Name":"Nuts","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","math"]},{"ContestId":401,"Index":"E","Name":"Olympic Games","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["math"]},{"ContestId":401,"Index":"D","Name":"Roman and Numbers","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["bitmasks","brute force","combinatorics","dp","number theory"]},{"ContestId":401,"Index":"C","Name":"Team","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":401,"Index":"B","Name":"Sereja and Contests","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","implementation","math"]},{"ContestId":401,"Index":"A","Name":"Vanya and Cards","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":400,"Index":"E","Name":"Inna and Binary Logic","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["binary search","bitmasks","data structures"]},{"ContestId":400,"Index":"D","Name":"Dima and Bacteria","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dsu","graphs","shortest paths"]},{"ContestId":400,"Index":"C","Name":"Inna and Huge Candy Matrix","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["implementation","math"]},{"ContestId":400,"Index":"B","Name":"Inna and New Matrix of Candies","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","implementation","schedules"]},{"ContestId":400,"Index":"A","Name":"Inna and Choose Options","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":399,"Index":"B","Name":"Red and Blue Balls","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":[]},{"ContestId":399,"Index":"A","Name":"Pages","Type":"PROGRAMMING","Rating":0,"Points":500,"Tags":["implementation"]},{"ContestId":398,"Index":"E","Name":"Sorting Permutations","Type":"PROGRAMMING","Rating":0,"Points":2500,"Tags":[]},{"ContestId":398,"Index":"D","Name":"Instant Messanger","Type":"PROGRAMMING","Rating":0,"Points":2000,"Tags":["data structures"]},{"ContestId":398,"Index":"C","Name":"Tree and Array","Type":"PROGRAMMING","Rating":0,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":398,"Index":"B","Name":"Painting The Wall","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":["dp","probabilities"]},{"ContestId":398,"Index":"A","Name":"Cards","Type":"PROGRAMMING","Rating":0,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":397,"Index":"B","Name":"On Corruption and Numbers","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":397,"Index":"A","Name":"On Segment's Own Points","Type":"PROGRAMMING","Rating":0,"Points":500,"Tags":["implementation"]},{"ContestId":396,"Index":"E","Name":"On Iteration of One Well-Known Function","Type":"PROGRAMMING","Rating":0,"Points":2500,"Tags":["math"]},{"ContestId":396,"Index":"D","Name":"On Sum of Number of Inversions in Permutations","Type":"PROGRAMMING","Rating":0,"Points":2000,"Tags":["combinatorics","math"]},{"ContestId":396,"Index":"C","Name":"On Changing Tree","Type":"PROGRAMMING","Rating":0,"Points":1500,"Tags":["data structures","graphs","trees"]},{"ContestId":396,"Index":"B","Name":"On Sum of Fractions","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":["math","number theory"]},{"ContestId":396,"Index":"A","Name":"On Number of Decompositions into Multipliers","Type":"PROGRAMMING","Rating":0,"Points":500,"Tags":["combinatorics","math","number theory"]},{"ContestId":394,"Index":"E","Name":"Lightbulb for Minister","Type":"PROGRAMMING","Rating":0,"Points":2500,"Tags":["geometry"]},{"ContestId":394,"Index":"D","Name":"Physical Education and Buns","Type":"PROGRAMMING","Rating":0,"Points":2000,"Tags":["brute force","implementation","math"]},{"ContestId":394,"Index":"C","Name":"Dominoes","Type":"PROGRAMMING","Rating":0,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":394,"Index":"B","Name":"Very Beautiful Number","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":["math"]},{"ContestId":394,"Index":"A","Name":"Counting Sticks","Type":"PROGRAMMING","Rating":0,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":393,"Index":"B","Name":"Three matrices","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":[]},{"ContestId":393,"Index":"A","Name":"Nineteen","Type":"PROGRAMMING","Rating":0,"Points":500,"Tags":[]},{"ContestId":392,"Index":"E","Name":"Deleting Substrings","Type":"PROGRAMMING","Rating":0,"Points":2500,"Tags":[]},{"ContestId":392,"Index":"D","Name":"Three Arrays","Type":"PROGRAMMING","Rating":0,"Points":2000,"Tags":["data structures"]},{"ContestId":392,"Index":"C","Name":"Yet Another Number Sequence","Type":"PROGRAMMING","Rating":0,"Points":1500,"Tags":["combinatorics","math","matrices"]},{"ContestId":392,"Index":"B","Name":"Tower of Hanoi","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":["dp"]},{"ContestId":392,"Index":"A","Name":"Blocked Points","Type":"PROGRAMMING","Rating":0,"Points":500,"Tags":["math"]},{"ContestId":391,"Index":"F3","Name":"Stock Trading","Type":"PROGRAMMING","Rating":0,"Points":10,"Tags":[]},{"ContestId":391,"Index":"F2","Name":"Stock Trading","Type":"PROGRAMMING","Rating":0,"Points":15,"Tags":["greedy"]},{"ContestId":391,"Index":"F1","Name":"Stock Trading","Type":"PROGRAMMING","Rating":0,"Points":8,"Tags":["dp"]},{"ContestId":391,"Index":"E2","Name":"Three Trees","Type":"PROGRAMMING","Rating":0,"Points":13,"Tags":[]},{"ContestId":391,"Index":"E1","Name":"Three Trees","Type":"PROGRAMMING","Rating":0,"Points":11,"Tags":[]},{"ContestId":391,"Index":"D2","Name":"Supercollider","Type":"PROGRAMMING","Rating":0,"Points":16,"Tags":["data structures"]},{"ContestId":391,"Index":"D1","Name":"Supercollider","Type":"PROGRAMMING","Rating":0,"Points":3,"Tags":["brute force"]},{"ContestId":391,"Index":"C3","Name":"The Tournament","Type":"PROGRAMMING","Rating":0,"Points":8,"Tags":[]},{"ContestId":391,"Index":"C2","Name":"The Tournament","Type":"PROGRAMMING","Rating":0,"Points":4,"Tags":["greedy"]},{"ContestId":391,"Index":"C1","Name":"The Tournament","Type":"PROGRAMMING","Rating":0,"Points":4,"Tags":["brute force"]},{"ContestId":391,"Index":"B","Name":"Word Folding","Type":"PROGRAMMING","Rating":0,"Points":5,"Tags":["brute force"]},{"ContestId":391,"Index":"A","Name":"Genetic Engineering","Type":"PROGRAMMING","Rating":0,"Points":3,"Tags":["implementation","two pointers"]},{"ContestId":390,"Index":"E","Name":"Inna and Large Sweet Matrix","Type":"PROGRAMMING","Rating":0,"Points":2500,"Tags":[]},{"ContestId":390,"Index":"D","Name":"Inna and Sweet Matrix","Type":"PROGRAMMING","Rating":0,"Points":2000,"Tags":["constructive algorithms"]},{"ContestId":390,"Index":"C","Name":"Inna and Candy Boxes","Type":"PROGRAMMING","Rating":0,"Points":1500,"Tags":["data structures"]},{"ContestId":390,"Index":"B","Name":"Inna, Dima and Song","Type":"PROGRAMMING","Rating":0,"Points":1000,"Tags":["implementation"]},{"ContestId":390,"Index":"A","Name":"Inna and Alarm Clock","Type":"PROGRAMMING","Rating":0,"Points":500,"Tags":["implementation"]},{"ContestId":389,"Index":"B","Name":"Fox and Cross","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":389,"Index":"A","Name":"Fox and Number Game","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","math"]},{"ContestId":388,"Index":"E","Name":"Fox and Meteor Shower","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["geometry"]},{"ContestId":388,"Index":"D","Name":"Fox and Perfect Sets","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["math"]},{"ContestId":388,"Index":"C","Name":"Fox and Card Game","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["games","greedy","sortings"]},{"ContestId":388,"Index":"B","Name":"Fox and Minimal path","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["bitmasks","constructive algorithms","graphs","implementation","math"]},{"ContestId":388,"Index":"A","Name":"Fox and Box Accumulation","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":387,"Index":"E","Name":"George and Cards","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["binary search","data structures"]},{"ContestId":387,"Index":"D","Name":"George and Interesting Graph","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["graph matchings"]},{"ContestId":387,"Index":"C","Name":"George and Number","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["greedy","implementation"]},{"ContestId":387,"Index":"B","Name":"George and Round","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","greedy","two pointers"]},{"ContestId":387,"Index":"A","Name":"George and Sleep","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":386,"Index":"D","Name":"Game with Points","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["dp","graphs","implementation","shortest paths"]},{"ContestId":386,"Index":"C","Name":"Diverse Substrings","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp","strings","two pointers"]},{"ContestId":386,"Index":"B","Name":"Fly, freebies, fly!","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["binary search","brute force","implementation"]},{"ContestId":386,"Index":"A","Name":"Second-Price Auction","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":385,"Index":"E","Name":"Bear in the Field","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["math","matrices"]},{"ContestId":385,"Index":"D","Name":"Bear and Floodlight","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["bitmasks","dp","geometry"]},{"ContestId":385,"Index":"C","Name":"Bear and Prime Numbers","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","brute force","data structures","dp","implementation","math","number theory"]},{"ContestId":385,"Index":"B","Name":"Bear and Strings","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","greedy","implementation","math","strings"]},{"ContestId":385,"Index":"A","Name":"Bear and Raspberry","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","greedy","implementation"]},{"ContestId":384,"Index":"B","Name":"Multitasking","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","implementation","sortings","two pointers"]},{"ContestId":384,"Index":"A","Name":"Coder","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":383,"Index":"E","Name":"Vowels","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["combinatorics","divide and conquer","dp"]},{"ContestId":383,"Index":"D","Name":"Antimatter","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["dp"]},{"ContestId":383,"Index":"C","Name":"Propagating tree","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":383,"Index":"B","Name":"Volcanoes","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["binary search","implementation","sortings","two pointers"]},{"ContestId":383,"Index":"A","Name":"Milking cows","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["data structures","greedy"]},{"ContestId":382,"Index":"E","Name":"Ksenia and Combinatorics","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["combinatorics","dp"]},{"ContestId":382,"Index":"D","Name":"Ksenia and Pawns","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["dfs and similar","graphs","implementation","trees"]},{"ContestId":382,"Index":"C","Name":"Arithmetic Progression","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["implementation","sortings"]},{"ContestId":382,"Index":"B","Name":"Number Busters","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["binary search","math"]},{"ContestId":382,"Index":"A","Name":"Ksenia and Pan Scales","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":381,"Index":"B","Name":"Sereja and Stairs","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","implementation","sortings"]},{"ContestId":381,"Index":"A","Name":"Sereja and Dima","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","two pointers"]},{"ContestId":380,"Index":"E","Name":"Sereja and Dividing","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures"]},{"ContestId":380,"Index":"D","Name":"Sereja and Cinema","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["combinatorics","math"]},{"ContestId":380,"Index":"C","Name":"Sereja and Brackets","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["data structures","schedules"]},{"ContestId":380,"Index":"B","Name":"Sereja and Tree","Type":"PROGRAMMING","Rating":2400,"Points":1000,"Tags":["graphs","implementation"]},{"ContestId":380,"Index":"A","Name":"Sereja and Prefixes","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["binary search","brute force"]},{"ContestId":379,"Index":"G","Name":"New Year Cactus","Type":"PROGRAMMING","Rating":3100,"Points":3500,"Tags":["dp"]},{"ContestId":379,"Index":"F","Name":"New Year Tree","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["data structures","divide and conquer","trees"]},{"ContestId":379,"Index":"E","Name":"New Year Tree Decorations","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["geometry","schedules","sortings"]},{"ContestId":379,"Index":"D","Name":"New Year Letter","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["bitmasks","brute force","dp"]},{"ContestId":379,"Index":"C","Name":"New Year Ratings Change","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy","sortings"]},{"ContestId":379,"Index":"B","Name":"New Year Present","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":379,"Index":"A","Name":"New Year Candles","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":378,"Index":"B","Name":"Semifinals","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":378,"Index":"A","Name":"Playing with Dice","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":377,"Index":"E","Name":"Cookie Clicker","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["dp","geometry"]},{"ContestId":377,"Index":"D","Name":"Developing Game","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures"]},{"ContestId":377,"Index":"C","Name":"Captains Mode","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["bitmasks","dp","games"]},{"ContestId":377,"Index":"B","Name":"Preparing for the Contest","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["binary search","data structures","greedy","sortings"]},{"ContestId":377,"Index":"A","Name":"Maze","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["dfs and similar"]},{"ContestId":376,"Index":"B","Name":"I.O.U.","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":376,"Index":"A","Name":"Lever","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":375,"Index":"E","Name":"Red and Black Tree","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["dp","implementation","math"]},{"ContestId":375,"Index":"D","Name":"Tree and Queries","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":375,"Index":"C","Name":"Circling Round Treasures","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["bitmasks","shortest paths"]},{"ContestId":375,"Index":"B","Name":"Maximum Submatrix 2","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["data structures","dp","implementation","sortings"]},{"ContestId":375,"Index":"A","Name":"Divisible by Seven","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["math","number theory"]},{"ContestId":374,"Index":"E","Name":"Inna and Babies","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["binary search","data structures","dsu","geometry","implementation"]},{"ContestId":374,"Index":"D","Name":"Inna and Sequence ","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","data structures","dp","trees"]},{"ContestId":374,"Index":"C","Name":"Inna and Dima","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["dfs and similar","dp","graphs","implementation"]},{"ContestId":374,"Index":"B","Name":"Inna and Nine","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["combinatorics","greedy"]},{"ContestId":374,"Index":"A","Name":"Inna and Pink Pony","Type":"PROGRAMMING","Rating":2000,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":373,"Index":"B","Name":"Making Sequences is Fun","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search","implementation","math"]},{"ContestId":373,"Index":"A","Name":"Collecting Beats is Fun","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":372,"Index":"E","Name":"Drawing Circles is Fun","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["combinatorics","geometry"]},{"ContestId":372,"Index":"D","Name":"Choosing Subtree is Fun","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["binary search","data structures","dfs and similar","trees","two pointers"]},{"ContestId":372,"Index":"C","Name":"Watching Fireworks is Fun","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["data structures","dp","math"]},{"ContestId":372,"Index":"B","Name":"Counting Rectangles is Fun","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["brute force","divide and conquer","dp"]},{"ContestId":372,"Index":"A","Name":"Counting Kangaroos is Fun","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["binary search","greedy","sortings","two pointers"]},{"ContestId":371,"Index":"E","Name":"Subway Innovation","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["greedy","math","two pointers"]},{"ContestId":371,"Index":"D","Name":"Vessels","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["data structures","dsu","implementation","trees"]},{"ContestId":371,"Index":"C","Name":"Hamburgers","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","brute force"]},{"ContestId":371,"Index":"B","Name":"Fox Dividing Cheese","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["math","number theory"]},{"ContestId":371,"Index":"A","Name":"K-Periodic Array","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":370,"Index":"E","Name":"Summer Reading","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["dp","greedy"]},{"ContestId":370,"Index":"D","Name":"Broken Monitor","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["brute force","constructive algorithms","greedy","implementation"]},{"ContestId":370,"Index":"C","Name":"Mittens","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":370,"Index":"B","Name":"Berland Bingo","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation"]},{"ContestId":370,"Index":"A","Name":"Rook, Bishop and King","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["graphs","math","shortest paths"]},{"ContestId":369,"Index":"E","Name":"Valera and Queries","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["binary search","data structures"]},{"ContestId":369,"Index":"D","Name":"Valera and Fools","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dfs and similar","dp","graphs","shortest paths"]},{"ContestId":369,"Index":"C","Name":"Valera and Elections","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":369,"Index":"B","Name":"Valera and Contest","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":369,"Index":"A","Name":"Valera and Plates","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":368,"Index":"B","Name":"Sereja and Suffixes","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["data structures","dp"]},{"ContestId":368,"Index":"A","Name":"Sereja and Coat Rack","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":367,"Index":"E","Name":"Sereja and Intervals","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["combinatorics","dp"]},{"ContestId":367,"Index":"D","Name":"Sereja and Sets","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["bitmasks","dfs and similar"]},{"ContestId":367,"Index":"C","Name":"Sereja and the Arrangement of Numbers","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["graphs","greedy","sortings"]},{"ContestId":367,"Index":"B","Name":"Sereja ans Anagrams","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["binary search","data structures"]},{"ContestId":367,"Index":"A","Name":"Sereja and Algorithm ","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["data structures","implementation"]},{"ContestId":366,"Index":"E","Name":"Dima and Magic Guitar","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["brute force","implementation","math"]},{"ContestId":366,"Index":"D","Name":"Dima and Trap Graph","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","data structures","dfs and similar","dsu","shortest paths","two pointers"]},{"ContestId":366,"Index":"C","Name":"Dima and Salad","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["dp"]},{"ContestId":366,"Index":"B","Name":"Dima and To-do List","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":366,"Index":"A","Name":"Dima and Guards","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":365,"Index":"B","Name":"The Fibonacci Segment","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation"]},{"ContestId":365,"Index":"A","Name":"Good Number","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":364,"Index":"E","Name":"Empty Rectangles","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["divide and conquer","two pointers"]},{"ContestId":364,"Index":"D","Name":"Ghd","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["brute force","math","probabilities"]},{"ContestId":364,"Index":"C","Name":"Beautiful Set","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["brute force","number theory"]},{"ContestId":364,"Index":"B","Name":"Free Market","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["dp","greedy"]},{"ContestId":364,"Index":"A","Name":"Matrix","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["combinatorics","data structures","implementation"]},{"ContestId":363,"Index":"E","Name":"Two Circles","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["brute force","data structures","implementation"]},{"ContestId":363,"Index":"D","Name":"Renting Bikes","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["binary search","greedy"]},{"ContestId":363,"Index":"C","Name":"Fixing Typos","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy","implementation"]},{"ContestId":363,"Index":"B","Name":"Fence","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","dp"]},{"ContestId":363,"Index":"A","Name":"Soroban","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":362,"Index":"E","Name":"Petya and Pipes","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["flows","graphs","shortest paths"]},{"ContestId":362,"Index":"D","Name":"Fools and Foolproof Roads","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["data structures","dfs and similar","dsu","graphs","greedy"]},{"ContestId":362,"Index":"C","Name":"Insertion Sort","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["data structures","dp","implementation","math"]},{"ContestId":362,"Index":"B","Name":"Petya and Staircases","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":362,"Index":"A","Name":"Two Semiknights Meet","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","math"]},{"ContestId":361,"Index":"B","Name":"Levko and Permutation","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":361,"Index":"A","Name":"Levko and Table","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":360,"Index":"E","Name":"Levko and Game","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["graphs","greedy","shortest paths"]},{"ContestId":360,"Index":"D","Name":"Levko and Sets","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["number theory"]},{"ContestId":360,"Index":"C","Name":"Levko and Strings","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["combinatorics","dp"]},{"ContestId":360,"Index":"B","Name":"Levko and Array","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["binary search","dp"]},{"ContestId":360,"Index":"A","Name":"Levko and Array Recovery","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":359,"Index":"E","Name":"Neatness","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["constructive algorithms","dfs and similar"]},{"ContestId":359,"Index":"D","Name":"Pair of Numbers","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["binary search","brute force","data structures","math","two pointers"]},{"ContestId":359,"Index":"C","Name":"Prime Number","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["math","number theory"]},{"ContestId":359,"Index":"B","Name":"Permutation","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms","dp","math"]},{"ContestId":359,"Index":"A","Name":"Table","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":358,"Index":"E","Name":"Dima and Kicks","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["brute force","dsu","graphs","implementation"]},{"ContestId":358,"Index":"D","Name":"Dima and Hares","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dp","greedy"]},{"ContestId":358,"Index":"C","Name":"Dima and Containers","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":358,"Index":"B","Name":"Dima and Text Messages","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","strings"]},{"ContestId":358,"Index":"A","Name":"Dima and Continuous Line","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":357,"Index":"B","Name":"Flag Day","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":357,"Index":"A","Name":"Group of Students","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","greedy","implementation"]},{"ContestId":356,"Index":"E","Name":"Xenia and String Problem","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["dp","hashing","implementation","string suffix structures","strings"]},{"ContestId":356,"Index":"D","Name":"Bags and Coins","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["bitmasks","constructive algorithms","dp","greedy"]},{"ContestId":356,"Index":"C","Name":"Compartments","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["combinatorics","constructive algorithms","greedy","implementation"]},{"ContestId":356,"Index":"B","Name":"Xenia and Hamming","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["implementation","math"]},{"ContestId":356,"Index":"A","Name":"Knight Tournament","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["data structures","dsu"]},{"ContestId":355,"Index":"B","Name":"Vasya and Public Transport","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":355,"Index":"A","Name":"Vasya and Digital Root","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":354,"Index":"E","Name":"Lucky Number Representation","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["constructive algorithms","dfs and similar","dp"]},{"ContestId":354,"Index":"D","Name":"Transferring Pyramid","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["dp"]},{"ContestId":354,"Index":"C","Name":"Vasya and Beautiful Arrays","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["brute force","dp","number theory"]},{"ContestId":354,"Index":"B","Name":"Game with Strings","Type":"PROGRAMMING","Rating":2400,"Points":1000,"Tags":["bitmasks","dp","games"]},{"ContestId":354,"Index":"A","Name":"Vasya and Robot","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","greedy","math"]},{"ContestId":353,"Index":"E","Name":"Antichain","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["dp","graph matchings","greedy"]},{"ContestId":353,"Index":"D","Name":"Queue","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["constructive algorithms","dp"]},{"ContestId":353,"Index":"C","Name":"Find Maximum","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["implementation","math","number theory"]},{"ContestId":353,"Index":"B","Name":"Two Heaps","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["combinatorics","constructive algorithms","greedy","implementation","math","sortings"]},{"ContestId":353,"Index":"A","Name":"Domino","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation","math"]},{"ContestId":352,"Index":"B","Name":"Jeff and Periods","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":352,"Index":"A","Name":"Jeff and Digits","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","implementation","math"]},{"ContestId":351,"Index":"E","Name":"Jeff and Permutation","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["greedy"]},{"ContestId":351,"Index":"D","Name":"Jeff and Removing Periods","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["data structures"]},{"ContestId":351,"Index":"C","Name":"Jeff and Brackets","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["dp","matrices"]},{"ContestId":351,"Index":"B","Name":"Jeff and Furik","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["combinatorics","dp","probabilities"]},{"ContestId":351,"Index":"A","Name":"Jeff and Rounding","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dp","greedy","implementation","math"]},{"ContestId":350,"Index":"E","Name":"Wrong Floyd","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["brute force","constructive algorithms","dfs and similar","graphs"]},{"ContestId":350,"Index":"D","Name":"Looking for Owls","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["binary search","data structures","geometry","hashing","sortings"]},{"ContestId":350,"Index":"C","Name":"Bombs","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["greedy","implementation","sortings"]},{"ContestId":350,"Index":"B","Name":"Resort","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["graphs"]},{"ContestId":350,"Index":"A","Name":"TL","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","greedy","implementation"]},{"ContestId":349,"Index":"B","Name":"Color the Fence","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["data structures","dp","greedy","implementation"]},{"ContestId":349,"Index":"A","Name":"Cinema Line","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":348,"Index":"E","Name":"Pilgrims","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["dfs and similar","dp","trees"]},{"ContestId":348,"Index":"D","Name":"Turtles","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp","matrices"]},{"ContestId":348,"Index":"C","Name":"Subset Sums","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["brute force","data structures"]},{"ContestId":348,"Index":"B","Name":"Apple Tree","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["dfs and similar","number theory","trees"]},{"ContestId":348,"Index":"A","Name":"Mafia","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["binary search","math","sortings"]},{"ContestId":347,"Index":"B","Name":"Fixed Points","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","implementation","math"]},{"ContestId":347,"Index":"A","Name":"Difference Row","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","implementation","sortings"]},{"ContestId":346,"Index":"E","Name":"Doodle Jump","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["math","number theory"]},{"ContestId":346,"Index":"D","Name":"Robot Control","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["dp","graphs","shortest paths"]},{"ContestId":346,"Index":"C","Name":"Number Transformation II","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["greedy","math"]},{"ContestId":346,"Index":"B","Name":"Lucky Common Subsequence","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["dp","strings"]},{"ContestId":346,"Index":"A","Name":"Alice and Bob","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["games","math","number theory"]},{"ContestId":345,"Index":"G","Name":"Suffix Subgroup","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special","strings"]},{"ContestId":345,"Index":"F","Name":"Superstitions Inspection","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["*special"]},{"ContestId":345,"Index":"E","Name":"Black Cat Rush","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["*special"]},{"ContestId":345,"Index":"D","Name":"Chain Letter","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special","dfs and similar","graphs"]},{"ContestId":345,"Index":"C","Name":"Counting Fridays","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":345,"Index":"B","Name":"Triskaidekaphobia","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special"]},{"ContestId":345,"Index":"A","Name":"Expecting Trouble","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","probabilities"]},{"ContestId":344,"Index":"B","Name":"Simple Molecules","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","graphs","math"]},{"ContestId":344,"Index":"A","Name":"Magnets","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":343,"Index":"E","Name":"Pumping Stations","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["brute force","dfs and similar","divide and conquer","flows","graphs","greedy","trees"]},{"ContestId":343,"Index":"D","Name":"Water Tree","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["data structures","dfs and similar","graphs","trees"]},{"ContestId":343,"Index":"C","Name":"Read Time","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["binary search","greedy","two pointers"]},{"ContestId":343,"Index":"B","Name":"Alternating Current","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["data structures","greedy","implementation"]},{"ContestId":343,"Index":"A","Name":"Rational Resistance","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["math","number theory"]},{"ContestId":342,"Index":"E","Name":"Xenia and Tree","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","divide and conquer","trees"]},{"ContestId":342,"Index":"D","Name":"Xenia and Dominoes","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["bitmasks","dfs and similar","dp"]},{"ContestId":342,"Index":"C","Name":"Cupboard and Balloons","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["geometry"]},{"ContestId":342,"Index":"B","Name":"Xenia and Spies","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","greedy","implementation"]},{"ContestId":342,"Index":"A","Name":"Xenia and Divisors","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":341,"Index":"E","Name":"Candies Game","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["constructive algorithms","greedy"]},{"ContestId":341,"Index":"D","Name":"Iahub and Xors","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures"]},{"ContestId":340,"Index":"E","Name":"Iahub and Permutations","Type":"PROGRAMMING","Rating":2000,"Points":3000,"Tags":["combinatorics","math"]},{"ContestId":340,"Index":"D","Name":"Bubble Sort Graph","Type":"PROGRAMMING","Rating":1500,"Points":2000,"Tags":["binary search","data structures","dp"]},{"ContestId":340,"Index":"C","Name":"Tourist Problem","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["combinatorics","implementation","math"]},{"ContestId":340,"Index":"B","Name":"Maximal Area Quadrilateral","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["brute force","geometry"]},{"ContestId":340,"Index":"A","Name":"The Wall","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["math"]},{"ContestId":339,"Index":"E","Name":"Three Swaps","Type":"PROGRAMMING","Rating":2700,"Points":3000,"Tags":["constructive algorithms","dfs and similar","greedy"]},{"ContestId":339,"Index":"D","Name":"Xenia and Bit Operations","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["data structures","trees"]},{"ContestId":339,"Index":"C","Name":"Xenia and Weights","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","dfs and similar","dp","graphs","greedy","shortest paths"]},{"ContestId":339,"Index":"B","Name":"Xenia and Ringroad","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["implementation"]},{"ContestId":339,"Index":"A","Name":"Helpful Maths","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","implementation","sortings","strings"]},{"ContestId":338,"Index":"E","Name":"Optimize!","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures"]},{"ContestId":338,"Index":"D","Name":"GCD Table","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["chinese remainder theorem","math","number theory"]},{"ContestId":337,"Index":"E","Name":"Divisor Tree","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["brute force","number theory","trees"]},{"ContestId":337,"Index":"D","Name":"Book of Evil","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dfs and similar","divide and conquer","dp","trees"]},{"ContestId":337,"Index":"C","Name":"Quiz","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","greedy","math","matrices","number theory"]},{"ContestId":337,"Index":"B","Name":"Routine Problem","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy","math","number theory"]},{"ContestId":337,"Index":"A","Name":"Puzzles","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy"]},{"ContestId":336,"Index":"E","Name":"Vasily the Bear and Painting Square","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["bitmasks","combinatorics","dp","implementation"]},{"ContestId":336,"Index":"D","Name":"Vasily the Bear and Beautiful Strings","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["combinatorics","math","number theory"]},{"ContestId":336,"Index":"C","Name":"Vasily the Bear and Sequence","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["brute force","greedy","implementation","number theory"]},{"ContestId":336,"Index":"B","Name":"Vasily the Bear and Fly","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["math"]},{"ContestId":336,"Index":"A","Name":"Vasily the Bear and Triangle","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","math"]},{"ContestId":335,"Index":"F","Name":"Buy One, Get One Free","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["dp","greedy"]},{"ContestId":335,"Index":"E","Name":"Counting Skyscrapers","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["dp","math","probabilities"]},{"ContestId":335,"Index":"D","Name":"Rectangles and Square","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["brute force","dp"]},{"ContestId":335,"Index":"C","Name":"More Reclamation","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["games"]},{"ContestId":335,"Index":"B","Name":"Palindrome","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["constructive algorithms","dp"]},{"ContestId":335,"Index":"A","Name":"Banana","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["binary search","constructive algorithms","greedy"]},{"ContestId":334,"Index":"B","Name":"Eight Point Sets","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["sortings"]},{"ContestId":334,"Index":"A","Name":"Candy Bags","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":333,"Index":"E","Name":"Summer Earnings","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["binary search","bitmasks","brute force","geometry","sortings"]},{"ContestId":333,"Index":"D","Name":"Characteristics of Rectangles","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","bitmasks","brute force","implementation","sortings"]},{"ContestId":333,"Index":"C","Name":"Lucky Tickets","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["brute force","constructive algorithms"]},{"ContestId":333,"Index":"B","Name":"Chips","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["greedy"]},{"ContestId":333,"Index":"A","Name":"Secrets","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["greedy"]},{"ContestId":332,"Index":"E","Name":"Binary Key","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["dp","greedy","implementation"]},{"ContestId":332,"Index":"D","Name":"Theft of Blueprints","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["graphs","math"]},{"ContestId":332,"Index":"C","Name":"Students' Revenge","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["data structures","greedy","sortings"]},{"ContestId":332,"Index":"B","Name":"Maximum Absurdity","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["data structures","dp","implementation"]},{"ContestId":332,"Index":"A","Name":"Down the Hatch!","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation"]},{"ContestId":331,"Index":"E2","Name":"Deja Vu","Type":"PROGRAMMING","Rating":3100,"Points":50,"Tags":["constructive algorithms","dp"]},{"ContestId":331,"Index":"E1","Name":"Deja Vu","Type":"PROGRAMMING","Rating":2900,"Points":50,"Tags":["constructive algorithms","graphs","implementation"]},{"ContestId":331,"Index":"D3","Name":"Escaping on Beaveractor","Type":"PROGRAMMING","Rating":3000,"Points":40,"Tags":["data structures","implementation","trees"]},{"ContestId":331,"Index":"D2","Name":"Escaping on Beaveractor","Type":"PROGRAMMING","Rating":2600,"Points":30,"Tags":["graphs"]},{"ContestId":331,"Index":"D1","Name":"Escaping on Beaveractor","Type":"PROGRAMMING","Rating":2400,"Points":30,"Tags":["dfs and similar","implementation"]},{"ContestId":331,"Index":"C3","Name":"The Great Julya Calendar","Type":"PROGRAMMING","Rating":2500,"Points":60,"Tags":["dp"]},{"ContestId":331,"Index":"C2","Name":"The Great Julya Calendar","Type":"PROGRAMMING","Rating":2400,"Points":20,"Tags":["dp"]},{"ContestId":331,"Index":"C1","Name":"The Great Julya Calendar","Type":"PROGRAMMING","Rating":1100,"Points":20,"Tags":["dp"]},{"ContestId":331,"Index":"B2","Name":"Shave Beaver!","Type":"PROGRAMMING","Rating":1900,"Points":70,"Tags":["data structures"]},{"ContestId":331,"Index":"B1","Name":"Shave Beaver!","Type":"PROGRAMMING","Rating":1700,"Points":30,"Tags":["implementation"]},{"ContestId":331,"Index":"A2","Name":"Oh Sweet Beaverette","Type":"PROGRAMMING","Rating":1500,"Points":70,"Tags":["data structures","sortings"]},{"ContestId":331,"Index":"A1","Name":"Oh Sweet Beaverette","Type":"PROGRAMMING","Rating":1400,"Points":30,"Tags":["brute force","implementation"]},{"ContestId":330,"Index":"B","Name":"Road Construction","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["constructive algorithms","graphs"]},{"ContestId":330,"Index":"A","Name":"Cakeminator","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":329,"Index":"E","Name":"Evil","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["math"]},{"ContestId":329,"Index":"D","Name":"The Evil Temple and the Moving Rocks","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":329,"Index":"C","Name":"Graph Reconstruction","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":329,"Index":"B","Name":"Biridian Forest","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dfs and similar","shortest paths"]},{"ContestId":329,"Index":"A","Name":"Purification","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":328,"Index":"B","Name":"Sheldon and Ice Pieces","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["greedy"]},{"ContestId":328,"Index":"A","Name":"IQ Test","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["implementation"]},{"ContestId":327,"Index":"E","Name":"Axis Walking","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["bitmasks","combinatorics","constructive algorithms","dp","meet-in-the-middle"]},{"ContestId":327,"Index":"D","Name":"Block Tower","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms","dfs and similar","graphs"]},{"ContestId":327,"Index":"C","Name":"Magic Five","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["combinatorics","math"]},{"ContestId":327,"Index":"B","Name":"Hungry Sequence","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["math"]},{"ContestId":327,"Index":"A","Name":"Flipping Game","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","dp","implementation"]},{"ContestId":325,"Index":"E","Name":"The Red Button","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["combinatorics","dfs and similar","dsu","graphs","greedy"]},{"ContestId":325,"Index":"D","Name":"Reclamation","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["dsu"]},{"ContestId":325,"Index":"C","Name":"Monsters and Diamonds","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["dfs and similar","graphs","shortest paths"]},{"ContestId":325,"Index":"B","Name":"Stadium and Games","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["binary search","math"]},{"ContestId":325,"Index":"A","Name":"Square and Rectangles","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["implementation"]},{"ContestId":323,"Index":"C","Name":"Two permutations","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["data structures"]},{"ContestId":323,"Index":"B","Name":"Tournament-graph","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["constructive algorithms","graphs"]},{"ContestId":323,"Index":"A","Name":"Black-and-White Cube","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["combinatorics","constructive algorithms"]},{"ContestId":322,"Index":"B","Name":"Ciel and Flowers","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["combinatorics","math"]},{"ContestId":322,"Index":"A","Name":"Ciel and Dancing","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy"]},{"ContestId":321,"Index":"E","Name":"Ciel and Gondolas","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures","divide and conquer","dp"]},{"ContestId":321,"Index":"D","Name":"Ciel and Flipboard","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["dp","greedy","math"]},{"ContestId":321,"Index":"C","Name":"Ciel the Commander","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["constructive algorithms","dfs and similar","divide and conquer","greedy","trees"]},{"ContestId":321,"Index":"B","Name":"Ciel and Duel","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["dp","flows","greedy"]},{"ContestId":321,"Index":"A","Name":"Ciel and Robot","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["binary search","implementation","math"]},{"ContestId":320,"Index":"B","Name":"Ping-Pong (Easy Version)","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dfs and similar","graphs"]},{"ContestId":320,"Index":"A","Name":"Magic Numbers","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":319,"Index":"E","Name":"Ping-Pong","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["data structures"]},{"ContestId":319,"Index":"D","Name":"Have You Ever Heard About the Word?","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["greedy","hashing","string suffix structures","strings"]},{"ContestId":319,"Index":"C","Name":"Kalila and Dimna in the Logging Industry","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dp","geometry"]},{"ContestId":319,"Index":"B","Name":"Psychos in a Line","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["data structures","implementation"]},{"ContestId":319,"Index":"A","Name":"Malek Dance Club","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["combinatorics","math"]},{"ContestId":318,"Index":"B","Name":"Strings of Power","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation","strings","two pointers"]},{"ContestId":318,"Index":"A","Name":"Even Odds","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math"]},{"ContestId":317,"Index":"E","Name":"Princess and Her Shadow","Type":"PROGRAMMING","Rating":3100,"Points":3000,"Tags":["constructive algorithms","shortest paths"]},{"ContestId":317,"Index":"D","Name":"Game with Powers","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["dp","games"]},{"ContestId":317,"Index":"C","Name":"Balance","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"ContestId":317,"Index":"B","Name":"Ants","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":317,"Index":"A","Name":"Perfect Pair","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["brute force"]},{"ContestId":316,"Index":"G3","Name":"Good Substrings","Type":"PROGRAMMING","Rating":2400,"Points":30,"Tags":["string suffix structures"]},{"ContestId":316,"Index":"G2","Name":"Good Substrings","Type":"PROGRAMMING","Rating":2200,"Points":40,"Tags":["string suffix structures"]},{"ContestId":316,"Index":"G1","Name":"Good Substrings","Type":"PROGRAMMING","Rating":1700,"Points":30,"Tags":["hashing","strings"]},{"ContestId":316,"Index":"F3","Name":"Suns and Rays","Type":"PROGRAMMING","Rating":2200,"Points":30,"Tags":["constructive algorithms","dfs and similar","implementation"]},{"ContestId":316,"Index":"F2","Name":"Suns and Rays","Type":"PROGRAMMING","Rating":2300,"Points":40,"Tags":[]},{"ContestId":316,"Index":"F1","Name":"Suns and Rays","Type":"PROGRAMMING","Rating":2200,"Points":30,"Tags":["dfs and similar","implementation"]},{"ContestId":316,"Index":"E3","Name":"Summer Homework","Type":"PROGRAMMING","Rating":2300,"Points":30,"Tags":["data structures","math"]},{"ContestId":316,"Index":"E2","Name":"Summer Homework","Type":"PROGRAMMING","Rating":2300,"Points":40,"Tags":["data structures","math"]},{"ContestId":316,"Index":"E1","Name":"Summer Homework","Type":"PROGRAMMING","Rating":1500,"Points":30,"Tags":["brute force","data structures"]},{"ContestId":316,"Index":"D3","Name":"PE Lesson","Type":"PROGRAMMING","Rating":2400,"Points":30,"Tags":["dp","math"]},{"ContestId":316,"Index":"D2","Name":"PE Lesson","Type":"PROGRAMMING","Rating":2300,"Points":40,"Tags":["dp"]},{"ContestId":316,"Index":"D1","Name":"PE Lesson","Type":"PROGRAMMING","Rating":2300,"Points":30,"Tags":["brute force","dp"]},{"ContestId":316,"Index":"C2","Name":"Tidying Up","Type":"PROGRAMMING","Rating":2300,"Points":70,"Tags":["flows","graph matchings"]},{"ContestId":316,"Index":"C1","Name":"Tidying Up","Type":"PROGRAMMING","Rating":2200,"Points":30,"Tags":["flows"]},{"ContestId":316,"Index":"B2","Name":"EKG","Type":"PROGRAMMING","Rating":1600,"Points":70,"Tags":["dfs and similar","dp"]},{"ContestId":316,"Index":"B1","Name":"EKG","Type":"PROGRAMMING","Rating":1500,"Points":30,"Tags":["brute force","dfs and similar"]},{"ContestId":316,"Index":"A2","Name":"Special Task","Type":"PROGRAMMING","Rating":1400,"Points":70,"Tags":["math"]},{"ContestId":316,"Index":"A1","Name":"Special Task","Type":"PROGRAMMING","Rating":1100,"Points":30,"Tags":["greedy"]},{"ContestId":315,"Index":"B","Name":"Sereja and Array","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation"]},{"ContestId":315,"Index":"A","Name":"Sereja and Bottles","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force"]},{"ContestId":314,"Index":"E","Name":"Sereja and Squares","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["dp"]},{"ContestId":314,"Index":"D","Name":"Sereja and Straight Lines","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["binary search","data structures","geometry","sortings","two pointers"]},{"ContestId":314,"Index":"C","Name":"Sereja and Subsequences","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["data structures","dp"]},{"ContestId":314,"Index":"B","Name":"Sereja and Periods","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["binary search","dfs and similar","strings"]},{"ContestId":314,"Index":"A","Name":"Sereja and Contest","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["implementation"]},{"ContestId":313,"Index":"E","Name":"Ilya and Two Numbers","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["constructive algorithms","data structures","dsu","greedy"]},{"ContestId":313,"Index":"D","Name":"Ilya and Roads","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["dp"]},{"ContestId":313,"Index":"C","Name":"Ilya and Matrix","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["constructive algorithms","greedy","implementation","sortings"]},{"ContestId":313,"Index":"B","Name":"Ilya and Queries","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["dp","implementation"]},{"ContestId":313,"Index":"A","Name":"Ilya and Bank Account","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","number theory"]},{"ContestId":312,"Index":"B","Name":"Archer","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["math","probabilities"]},{"ContestId":312,"Index":"A","Name":"Whose sentence is it?","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","strings"]},{"ContestId":311,"Index":"E","Name":"Biologist","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["flows"]},{"ContestId":311,"Index":"D","Name":"Interval Cubing","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["data structures","math"]},{"ContestId":311,"Index":"C","Name":"Fetch the Treasure","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["brute force","data structures","graphs","shortest paths"]},{"ContestId":311,"Index":"B","Name":"Cats Transport","Type":"PROGRAMMING","Rating":2400,"Points":1000,"Tags":["data structures","dp"]},{"ContestId":311,"Index":"A","Name":"The Closest Pair","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":309,"Index":"E","Name":"Sheep","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["binary search","greedy"]},{"ContestId":309,"Index":"D","Name":"Tennis Rackets","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["brute force","geometry"]},{"ContestId":309,"Index":"C","Name":"Memory for Arrays","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["binary search","bitmasks","greedy"]},{"ContestId":309,"Index":"B","Name":"Context Advertising","Type":"PROGRAMMING","Rating":2100,"Points":500,"Tags":["dp","two pointers"]},{"ContestId":309,"Index":"A","Name":"Morning run","Type":"PROGRAMMING","Rating":2000,"Points":500,"Tags":["binary search","math","two pointers"]},{"ContestId":306,"Index":"D","Name":"Polygon","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["constructive algorithms","geometry"]},{"ContestId":306,"Index":"C","Name":"White, Black and White Again","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["combinatorics","number theory"]},{"ContestId":306,"Index":"B","Name":"Optimizer","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["data structures","greedy","sortings"]},{"ContestId":306,"Index":"A","Name":"Candies","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":305,"Index":"E","Name":"Playing with String","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["games"]},{"ContestId":305,"Index":"D","Name":"Olya and Graph","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["combinatorics","math"]},{"ContestId":305,"Index":"C","Name":"Ivan and Powers of Two","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["greedy","implementation"]},{"ContestId":305,"Index":"B","Name":"Continued Fractions","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["brute force","implementation","math"]},{"ContestId":305,"Index":"A","Name":"Strange Addition","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":304,"Index":"B","Name":"Calendar","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":304,"Index":"A","Name":"Pythagorean Theorem II","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","math"]},{"ContestId":303,"Index":"E","Name":"Random Ranking","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["dp","math","probabilities"]},{"ContestId":303,"Index":"D","Name":"Rotatable Number","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["math","number theory"]},{"ContestId":303,"Index":"C","Name":"Minimum Modular","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["brute force","graphs","math","number theory"]},{"ContestId":303,"Index":"B","Name":"Rectangle Puzzle II","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["implementation","math"]},{"ContestId":303,"Index":"A","Name":"Lucky Permutation Triple","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":302,"Index":"B","Name":"Eugeny and Play List","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["binary search","implementation","two pointers"]},{"ContestId":302,"Index":"A","Name":"Eugeny and Array","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":301,"Index":"E","Name":"Yaroslav and Arrangements","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["dp"]},{"ContestId":301,"Index":"D","Name":"Yaroslav and Divisors","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["data structures"]},{"ContestId":301,"Index":"C","Name":"Yaroslav and Algorithm","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":301,"Index":"B","Name":"Yaroslav and Time","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["binary search","graphs","shortest paths"]},{"ContestId":301,"Index":"A","Name":"Yaroslav and Sequence","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":300,"Index":"E","Name":"Empire Strikes Back","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["binary search","math","number theory"]},{"ContestId":300,"Index":"D","Name":"Painting Square","Type":"PROGRAMMING","Rating":2300,"Points":3000,"Tags":["dp","fft"]},{"ContestId":300,"Index":"C","Name":"Beautiful Numbers","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["brute force","combinatorics"]},{"ContestId":300,"Index":"B","Name":"Coach","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","dfs and similar","graphs"]},{"ContestId":300,"Index":"A","Name":"Array","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":299,"Index":"B","Name":"Ksusha the Squirrel","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":299,"Index":"A","Name":"Ksusha and Array","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","number theory","sortings"]},{"ContestId":298,"Index":"B","Name":"Sail","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","greedy","implementation"]},{"ContestId":298,"Index":"A","Name":"Snow Footprints","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":297,"Index":"E","Name":"Mystic Carvings","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["data structures"]},{"ContestId":297,"Index":"D","Name":"Color the Carpet","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["constructive algorithms"]},{"ContestId":297,"Index":"C","Name":"Splitting the Uniqueness","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms"]},{"ContestId":297,"Index":"B","Name":"Fish Weight","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":297,"Index":"A","Name":"Parity Game","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["constructive algorithms"]},{"ContestId":296,"Index":"B","Name":"Yaroslav and Two Strings","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["combinatorics","dp"]},{"ContestId":296,"Index":"A","Name":"Yaroslav and Permutations","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","math"]},{"ContestId":295,"Index":"E","Name":"Yaroslav and Points","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures"]},{"ContestId":295,"Index":"D","Name":"Greg and Caves","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["combinatorics","dp"]},{"ContestId":295,"Index":"C","Name":"Greg and Friends","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["combinatorics","dp","graphs","shortest paths"]},{"ContestId":295,"Index":"B","Name":"Greg and Graph","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dp","graphs","shortest paths"]},{"ContestId":295,"Index":"A","Name":"Greg and Array","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["data structures","implementation"]},{"ContestId":294,"Index":"E","Name":"Shaass the Great","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["dp","trees"]},{"ContestId":294,"Index":"D","Name":"Shaass and Painter Robot","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["brute force","implementation","number theory"]},{"ContestId":294,"Index":"C","Name":"Shaass and Lights","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["combinatorics","number theory"]},{"ContestId":294,"Index":"B","Name":"Shaass and Bookshelf","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dp","greedy"]},{"ContestId":294,"Index":"A","Name":"Shaass and Oskols","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":293,"Index":"E","Name":"Close Vertices","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["data structures","divide and conquer","trees"]},{"ContestId":293,"Index":"D","Name":"Ksusha and Square","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["geometry","math","probabilities","two pointers"]},{"ContestId":293,"Index":"C","Name":"Cube Problem","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["brute force","math","number theory"]},{"ContestId":293,"Index":"B","Name":"Distinct Paths","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["brute force","combinatorics"]},{"ContestId":293,"Index":"A","Name":"Weird Game","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["games","greedy"]},{"ContestId":292,"Index":"E","Name":"Copying Data","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["data structures"]},{"ContestId":292,"Index":"D","Name":"Connected Components","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["data structures","dfs and similar","dp","dsu"]},{"ContestId":292,"Index":"C","Name":"Beautiful IP Addresses","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["brute force"]},{"ContestId":292,"Index":"B","Name":"Network Topology","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["graphs","implementation"]},{"ContestId":292,"Index":"A","Name":"SMSC","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation"]},{"ContestId":291,"Index":"E","Name":"Tree-String Problem","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["*special","dfs and similar","hashing","strings"]},{"ContestId":291,"Index":"D","Name":"Parallel Programming","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["*special","greedy"]},{"ContestId":291,"Index":"C","Name":"Network Mask","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["*special","bitmasks","brute force","implementation"]},{"ContestId":291,"Index":"B","Name":"Command Line Arguments","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["*special","implementation","strings"]},{"ContestId":291,"Index":"A","Name":"Spyke Talks","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["*special","implementation","sortings"]},{"ContestId":290,"Index":"F","Name":"Greedy Petya","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["*special","dfs and similar","graphs","greedy"]},{"ContestId":290,"Index":"E","Name":"HQ","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["*special","constructive algorithms"]},{"ContestId":290,"Index":"D","Name":"Orange","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","implementation"]},{"ContestId":290,"Index":"C","Name":"WTF?","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special","graph matchings","implementation","trees"]},{"ContestId":290,"Index":"B","Name":"QR code","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","implementation"]},{"ContestId":290,"Index":"A","Name":"Mysterious strings","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","implementation"]},{"ContestId":289,"Index":"B","Name":"Polo the Penguin and Matrix","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","dp","implementation","sortings","ternary search"]},{"ContestId":289,"Index":"A","Name":"Polo the Penguin and Segments ","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":288,"Index":"E","Name":"Polo the Penguin and Lucky Numbers","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["dp","implementation","math"]},{"ContestId":288,"Index":"D","Name":"Polo the Penguin and Trees ","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["combinatorics","dfs and similar","trees"]},{"ContestId":288,"Index":"C","Name":"Polo the Penguin and XOR operation","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["implementation","math"]},{"ContestId":288,"Index":"B","Name":"Polo the Penguin and Houses ","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["combinatorics"]},{"ContestId":288,"Index":"A","Name":"Polo the Penguin and Strings","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["greedy"]},{"ContestId":287,"Index":"B","Name":"Pipeline","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","math"]},{"ContestId":287,"Index":"A","Name":"IQ Test","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":286,"Index":"E","Name":"Ladies' Shop","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["constructive algorithms","fft","math"]},{"ContestId":286,"Index":"D","Name":"Tourists","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["data structures","sortings"]},{"ContestId":286,"Index":"C","Name":"Main Sequence","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["greedy","implementation"]},{"ContestId":286,"Index":"B","Name":"Shifting","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["implementation"]},{"ContestId":286,"Index":"A","Name":"Lucky Permutation","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":285,"Index":"E","Name":"Positions in Permutations","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["combinatorics","dp","math"]},{"ContestId":285,"Index":"D","Name":"Permutation Sum","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["bitmasks","combinatorics","dp","implementation","meet-in-the-middle"]},{"ContestId":285,"Index":"C","Name":"Building Permutation","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["greedy","implementation","sortings"]},{"ContestId":285,"Index":"B","Name":"Find Marble","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation"]},{"ContestId":285,"Index":"A","Name":"Slightly Decreasing Permutations","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":284,"Index":"B","Name":"Cows and Poker Game","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":284,"Index":"A","Name":"Cows and Primitive Roots","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["implementation","math","number theory"]},{"ContestId":283,"Index":"E","Name":"Cow Tennis Tournament","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["combinatorics","data structures","math"]},{"ContestId":283,"Index":"D","Name":"Cows and Cool Sequences","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["dp","math","number theory"]},{"ContestId":283,"Index":"C","Name":"Coin Troubles","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dp"]},{"ContestId":283,"Index":"B","Name":"Cow Program","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dfs and similar","dp","graphs"]},{"ContestId":283,"Index":"A","Name":"Cows and Sequence","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["constructive algorithms","data structures","implementation"]},{"ContestId":282,"Index":"E","Name":"Sausage Maximization","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["bitmasks","data structures","trees"]},{"ContestId":282,"Index":"D","Name":"Yet Another Number Game","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["dp","games"]},{"ContestId":282,"Index":"C","Name":"XOR and OR","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":282,"Index":"B","Name":"Painting Eggs","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","math"]},{"ContestId":282,"Index":"A","Name":"Bit++","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":281,"Index":"B","Name":"Nearest Fraction","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["brute force","implementation","two pointers"]},{"ContestId":281,"Index":"A","Name":"Word Capitalization","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":280,"Index":"E","Name":"Sequence Transformation","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["brute force","data structures","dp","implementation","math"]},{"ContestId":280,"Index":"D","Name":"k-Maximum Subsequence Sum","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["data structures","flows","graphs","implementation"]},{"ContestId":280,"Index":"C","Name":"Game on Tree","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["implementation","math","probabilities","trees"]},{"ContestId":280,"Index":"B","Name":"Maximum Xor Secondary","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["data structures","implementation","two pointers"]},{"ContestId":280,"Index":"A","Name":"Rectangle Puzzle","Type":"PROGRAMMING","Rating":2000,"Points":500,"Tags":["geometry"]},{"ContestId":279,"Index":"E","Name":"Beautiful Decomposition","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dp","games","greedy","number theory"]},{"ContestId":279,"Index":"D","Name":"The Minimum Number of Variables","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["bitmasks","dp"]},{"ContestId":279,"Index":"C","Name":"Ladder","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dp","implementation","two pointers"]},{"ContestId":279,"Index":"B","Name":"Books","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["binary search","brute force","implementation","two pointers"]},{"ContestId":279,"Index":"A","Name":"Point on Spiral","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","geometry","implementation"]},{"ContestId":278,"Index":"B","Name":"New Problem","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","strings"]},{"ContestId":278,"Index":"A","Name":"Circle Line","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":277,"Index":"E","Name":"Binary Tree on Plane","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["flows","trees"]},{"ContestId":277,"Index":"D","Name":"Google Code Jam","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["dp","probabilities"]},{"ContestId":277,"Index":"C","Name":"Game","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["games","implementation"]},{"ContestId":277,"Index":"B","Name":"Set of Points","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["constructive algorithms","geometry"]},{"ContestId":277,"Index":"A","Name":"Learning Languages","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["dfs and similar","dsu"]},{"ContestId":276,"Index":"E","Name":"Little Girl and Problem on Trees","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["data structures","graphs","trees"]},{"ContestId":276,"Index":"D","Name":"Little Girl and Maximum XOR","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["bitmasks","dp","greedy","implementation","math"]},{"ContestId":276,"Index":"C","Name":"Little Girl and Maximum Sum","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["data structures","greedy","implementation","sortings"]},{"ContestId":276,"Index":"B","Name":"Little Girl and Game","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["games","greedy"]},{"ContestId":276,"Index":"A","Name":"Lunch Rush","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":275,"Index":"B","Name":"Convex Shape","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":275,"Index":"A","Name":"Lights Out","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":274,"Index":"E","Name":"Mirror Room","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["data structures","implementation"]},{"ContestId":274,"Index":"D","Name":"Lovely Matrix","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["dfs and similar","graphs","greedy","sortings"]},{"ContestId":274,"Index":"C","Name":"The Last Hole!","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["brute force","geometry"]},{"ContestId":274,"Index":"B","Name":"Zero Tree","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dfs and similar","dp","greedy","trees"]},{"ContestId":274,"Index":"A","Name":"k-Multiple Free Set","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["binary search","greedy","sortings"]},{"ContestId":273,"Index":"E","Name":"Dima and Game","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["dp","games"]},{"ContestId":273,"Index":"D","Name":"Dima and Figure","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["dp"]},{"ContestId":272,"Index":"E","Name":"Dima and Horses","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["combinatorics","constructive algorithms","graphs"]},{"ContestId":272,"Index":"D","Name":"Dima and Two Sequences","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["combinatorics","math","sortings"]},{"ContestId":272,"Index":"C","Name":"Dima and Staircase","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["data structures","implementation"]},{"ContestId":272,"Index":"B","Name":"Dima and Sequence","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","math"]},{"ContestId":272,"Index":"A","Name":"Dima and Friends","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","math"]},{"ContestId":271,"Index":"E","Name":"Three Horses","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":271,"Index":"D","Name":"Good Substrings","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["data structures","strings"]},{"ContestId":271,"Index":"C","Name":"Secret","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","implementation"]},{"ContestId":271,"Index":"B","Name":"Prime Matrix","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","brute force","math","number theory"]},{"ContestId":271,"Index":"A","Name":"Beautiful Year","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":270,"Index":"B","Name":"Multithreading","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["data structures","greedy","implementation"]},{"ContestId":270,"Index":"A","Name":"Fancy Fence","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["geometry","implementation","math"]},{"ContestId":269,"Index":"E","Name":"String Theory","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["geometry","math","strings"]},{"ContestId":269,"Index":"D","Name":"Maximum Waterfall","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["data structures","dp","graphs","sortings"]},{"ContestId":269,"Index":"C","Name":"Flawed Flow","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["constructive algorithms","flows","graphs","greedy"]},{"ContestId":269,"Index":"B","Name":"Greenhouse Effect","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dp"]},{"ContestId":269,"Index":"A","Name":"Magical Boxes","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["greedy","math"]},{"ContestId":268,"Index":"E","Name":"Playlist","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["math","probabilities","sortings"]},{"ContestId":268,"Index":"D","Name":"Wall Bars","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["dp"]},{"ContestId":268,"Index":"C","Name":"Beautiful Sets of Points","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["constructive algorithms","implementation"]},{"ContestId":268,"Index":"B","Name":"Buttons","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["implementation","math"]},{"ContestId":268,"Index":"A","Name":"Games","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":267,"Index":"C","Name":"Berland Traffic","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["math","matrices"]},{"ContestId":267,"Index":"B","Name":"Dominoes","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["dfs and similar","graphs"]},{"ContestId":267,"Index":"A","Name":"Subtractions","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math","number theory"]},{"ContestId":266,"Index":"E","Name":"More Queries to Array...","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["data structures","math"]},{"ContestId":266,"Index":"D","Name":"BerDonalds","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["graphs","math","shortest paths"]},{"ContestId":266,"Index":"C","Name":"Below the Diagonal","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["constructive algorithms","greedy","math"]},{"ContestId":266,"Index":"B","Name":"Queue at the School","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["constructive algorithms","graph matchings","implementation","shortest paths"]},{"ContestId":266,"Index":"A","Name":"Stones on the Table","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":265,"Index":"B","Name":"Roadside Trees (Simplified Edition)","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":265,"Index":"A","Name":"Colorful Stones (Simplified Edition)","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":264,"Index":"E","Name":"Roadside Trees","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["data structures","dp"]},{"ContestId":264,"Index":"D","Name":"Colorful Stones","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp","two pointers"]},{"ContestId":264,"Index":"C","Name":"Choosing Balls","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp"]},{"ContestId":264,"Index":"B","Name":"Good Sequences","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dp","number theory"]},{"ContestId":264,"Index":"A","Name":"Escape from Stones","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["constructive algorithms","data structures","implementation","two pointers"]},{"ContestId":263,"Index":"E","Name":"Rhombus","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["brute force","data structures","dp"]},{"ContestId":263,"Index":"D","Name":"Cycle in Graph","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dfs and similar","graphs"]},{"ContestId":263,"Index":"C","Name":"Circle of Numbers","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["brute force","dfs and similar","implementation"]},{"ContestId":263,"Index":"B","Name":"Squares","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":263,"Index":"A","Name":"Beautiful Matrix","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":262,"Index":"B","Name":"Roma and Changing Signs","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy"]},{"ContestId":262,"Index":"A","Name":"Roma and Lucky Numbers","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":261,"Index":"E","Name":"Maxim and Calculator","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["brute force","dp","two pointers"]},{"ContestId":261,"Index":"D","Name":"Maxim and Increasing Subsequence","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["dp"]},{"ContestId":261,"Index":"C","Name":"Maxim and Matrix","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["constructive algorithms","dp","math"]},{"ContestId":261,"Index":"B","Name":"Maxim and Restaurant","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["dp","math","probabilities"]},{"ContestId":261,"Index":"A","Name":"Maxim and Discounts","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":260,"Index":"E","Name":"Dividing Kingdom","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["binary search","brute force","data structures"]},{"ContestId":260,"Index":"D","Name":"Black and White Tree","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["constructive algorithms","dsu","graphs","greedy","trees"]},{"ContestId":260,"Index":"C","Name":"Balls and Boxes","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":260,"Index":"B","Name":"Ancient Prophesy","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["brute force","implementation","strings"]},{"ContestId":260,"Index":"A","Name":"Adding Digits","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["implementation","math"]},{"ContestId":259,"Index":"B","Name":"Little Elephant and Magic Square","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":259,"Index":"A","Name":"Little Elephant and Chess","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","strings"]},{"ContestId":258,"Index":"E","Name":"Little Elephant and Tree","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":258,"Index":"D","Name":"Little Elephant and Broken Sorting","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["dp","math","probabilities"]},{"ContestId":258,"Index":"C","Name":"Little Elephant and LCM","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["binary search","combinatorics","dp","math"]},{"ContestId":258,"Index":"B","Name":"Little Elephant and Elections","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["brute force","combinatorics","dp"]},{"ContestId":258,"Index":"A","Name":"Little Elephant and Bits","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","math"]},{"ContestId":257,"Index":"E","Name":"Greedy Elevator","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["data structures","implementation"]},{"ContestId":257,"Index":"D","Name":"Sum","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["greedy","math"]},{"ContestId":257,"Index":"C","Name":"View Angle","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["brute force","geometry","math"]},{"ContestId":257,"Index":"B","Name":"Playing Cubes","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["games","greedy","implementation"]},{"ContestId":257,"Index":"A","Name":"Sockets","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":256,"Index":"E","Name":"Lucky Arrays","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures"]},{"ContestId":256,"Index":"D","Name":"Liars and Serge","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["dp"]},{"ContestId":255,"Index":"E","Name":"Furlo and Rublo and Game","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["games","implementation","math"]},{"ContestId":255,"Index":"D","Name":"Mr. Bender and Square","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["binary search","implementation","math"]},{"ContestId":255,"Index":"C","Name":"Almost Arithmetical Progression","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["brute force","dp"]},{"ContestId":255,"Index":"B","Name":"Code Parsing","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation"]},{"ContestId":255,"Index":"A","Name":"Greg's Workout","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":254,"Index":"E","Name":"Dormitory","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["dp","implementation"]},{"ContestId":254,"Index":"D","Name":"Rats","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["brute force","dfs and similar","graphs","implementation","shortest paths"]},{"ContestId":254,"Index":"C","Name":"Anagram","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["greedy","strings"]},{"ContestId":254,"Index":"B","Name":"Jury Size","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":254,"Index":"A","Name":"Cards with Numbers","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["constructive algorithms","sortings"]},{"ContestId":253,"Index":"E","Name":"Printer","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["binary search","data structures","implementation","sortings"]},{"ContestId":253,"Index":"D","Name":"Table with Letters - 2","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["brute force","two pointers"]},{"ContestId":253,"Index":"C","Name":"Text Editor","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["data structures","dfs and similar","graphs","greedy","shortest paths"]},{"ContestId":253,"Index":"B","Name":"Physics Practical","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["binary search","dp","sortings","two pointers"]},{"ContestId":253,"Index":"A","Name":"Boys and Girls","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy"]},{"ContestId":252,"Index":"B","Name":"Unsorting Array","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["brute force","sortings"]},{"ContestId":252,"Index":"A","Name":"Little Xor","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":251,"Index":"E","Name":"Tree and Table","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["dfs and similar","dp","implementation","trees"]},{"ContestId":251,"Index":"D","Name":"Two Sets","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["bitmasks","math"]},{"ContestId":251,"Index":"C","Name":"Number Transformation","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp","greedy","number theory"]},{"ContestId":251,"Index":"B","Name":"Playing with Permutations","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["implementation","math"]},{"ContestId":251,"Index":"A","Name":"Points on Line","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["binary search","combinatorics","two pointers"]},{"ContestId":250,"Index":"E","Name":"Mad Joe","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["brute force"]},{"ContestId":250,"Index":"D","Name":"Building Bridge","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["geometry","ternary search","two pointers"]},{"ContestId":250,"Index":"C","Name":"Movie Critics","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["greedy"]},{"ContestId":250,"Index":"B","Name":"Restoring IPv6","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":250,"Index":"A","Name":"Paper Work","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy"]},{"ContestId":249,"Index":"E","Name":"Endless Matrix","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["math"]},{"ContestId":249,"Index":"D","Name":"Donkey and Stars","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["data structures","dp","geometry","math","sortings"]},{"ContestId":248,"Index":"E","Name":"Piglet's Birthday","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["dp","math","probabilities"]},{"ContestId":248,"Index":"D","Name":"Sweets for Everyone!","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["binary search","greedy","implementation"]},{"ContestId":248,"Index":"C","Name":"Robo-Footballer","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["binary search","geometry"]},{"ContestId":248,"Index":"B","Name":"Chilly Willy","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["math","number theory"]},{"ContestId":248,"Index":"A","Name":"Cupboards","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":246,"Index":"E","Name":"Blood Cousins Return","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","data structures","dfs and similar","dp","sortings"]},{"ContestId":246,"Index":"D","Name":"Colorful Graph","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["brute force","dfs and similar","graphs"]},{"ContestId":246,"Index":"C","Name":"Beauty Pageant","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","constructive algorithms","greedy"]},{"ContestId":246,"Index":"B","Name":"Increase and Decrease","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy","math"]},{"ContestId":246,"Index":"A","Name":"Buggy Sorting","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":245,"Index":"H","Name":"Queries for Number of Palindromes","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","hashing","strings"]},{"ContestId":245,"Index":"G","Name":"Suggested Friends","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["brute force","graphs"]},{"ContestId":245,"Index":"F","Name":"Log Stream Analysis","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["binary search","brute force","implementation","strings"]},{"ContestId":245,"Index":"E","Name":"Mishap in Club","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy","implementation"]},{"ContestId":245,"Index":"D","Name":"Restoring Table","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":245,"Index":"C","Name":"Game with Coins","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["greedy"]},{"ContestId":245,"Index":"B","Name":"Internet Address","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation","strings"]},{"ContestId":245,"Index":"A","Name":"System Administrator","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":244,"Index":"B","Name":"Undoubtedly Lucky Numbers","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["bitmasks","brute force","dfs and similar"]},{"ContestId":244,"Index":"A","Name":"Dividing Orange","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":243,"Index":"E","Name":"Matrix","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["data structures"]},{"ContestId":243,"Index":"D","Name":"Cubes","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["data structures","dp","geometry","two pointers"]},{"ContestId":243,"Index":"C","Name":"Colorado Potato Beetle","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["dfs and similar","implementation"]},{"ContestId":243,"Index":"B","Name":"Hydra","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["graphs","sortings"]},{"ContestId":243,"Index":"A","Name":"The Brand New Function","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["bitmasks"]},{"ContestId":242,"Index":"E","Name":"XOR on Segment","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["bitmasks","data structures"]},{"ContestId":242,"Index":"D","Name":"Dispute","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["dfs and similar","graphs","greedy"]},{"ContestId":242,"Index":"C","Name":"King's Path","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dfs and similar","graphs","hashing","shortest paths"]},{"ContestId":242,"Index":"B","Name":"Big Segment","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":242,"Index":"A","Name":"Heads or Tails","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":241,"Index":"G","Name":"Challenging Balloons","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":241,"Index":"F","Name":"Race","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":241,"Index":"E","Name":"Flights","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["graphs","shortest paths"]},{"ContestId":241,"Index":"D","Name":"Numbers","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":[]},{"ContestId":241,"Index":"C","Name":"Mirror Box","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["geometry","implementation"]},{"ContestId":241,"Index":"B","Name":"Friends","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["binary search","bitmasks","data structures","math"]},{"ContestId":241,"Index":"A","Name":"Old Peykan","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy"]},{"ContestId":240,"Index":"F","Name":"TorCoder","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["data structures"]},{"ContestId":240,"Index":"E","Name":"Road Repairs","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dfs and similar","graphs","greedy"]},{"ContestId":239,"Index":"B","Name":"Easy Tape Programming","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":239,"Index":"A","Name":"Two Bags of Potatoes","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":238,"Index":"E","Name":"Meeting Her","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["dp","graphs","shortest paths"]},{"ContestId":238,"Index":"D","Name":"Tape Programming","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["data structures","implementation"]},{"ContestId":238,"Index":"C","Name":"World Eater Brothers","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dfs and similar","dp","greedy","trees"]},{"ContestId":238,"Index":"B","Name":"Boring Partition","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":238,"Index":"A","Name":"Not Wool Sequences","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":237,"Index":"E","Name":"Build String","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["flows","graphs"]},{"ContestId":237,"Index":"D","Name":"T-decomposition","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dfs and similar","graphs","greedy","trees"]},{"ContestId":237,"Index":"C","Name":"Primes on Interval","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","number theory","two pointers"]},{"ContestId":237,"Index":"B","Name":"Young Table","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":237,"Index":"A","Name":"Free Cash","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":236,"Index":"B","Name":"Easy Number Challenge","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","number theory"]},{"ContestId":236,"Index":"A","Name":"Boy or Girl","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","implementation","strings"]},{"ContestId":235,"Index":"E","Name":"Number Challenge","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["combinatorics","dp","implementation","math","number theory"]},{"ContestId":235,"Index":"D","Name":"Graph Game","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["graphs"]},{"ContestId":235,"Index":"C","Name":"Cyclical Quest","Type":"PROGRAMMING","Rating":2700,"Points":1500,"Tags":["data structures","string suffix structures","strings"]},{"ContestId":235,"Index":"B","Name":"Let's Play Osu!","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["dp","math","probabilities"]},{"ContestId":235,"Index":"A","Name":"LCM Challenge","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["number theory"]},{"ContestId":234,"Index":"H","Name":"Merging Two Decks","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":234,"Index":"G","Name":"Practice","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["constructive algorithms","divide and conquer","implementation"]},{"ContestId":234,"Index":"F","Name":"Fence","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp"]},{"ContestId":234,"Index":"E","Name":"Champions' League","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":234,"Index":"D","Name":"Cinema","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":234,"Index":"C","Name":"Weather","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["dp","implementation"]},{"ContestId":234,"Index":"B","Name":"Reading","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["sortings"]},{"ContestId":234,"Index":"A","Name":"Lefthanders and Righthanders ","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation"]},{"ContestId":233,"Index":"B","Name":"Non-square Equation","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["binary search","brute force","math"]},{"ContestId":233,"Index":"A","Name":"Perfect Permutation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":232,"Index":"E","Name":"Quick Tortoise","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["bitmasks","divide and conquer","dp"]},{"ContestId":232,"Index":"D","Name":"Fence","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["binary search","data structures","string suffix structures"]},{"ContestId":232,"Index":"C","Name":"Doe Graphs","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["constructive algorithms","divide and conquer","dp","graphs","shortest paths"]},{"ContestId":232,"Index":"B","Name":"Table","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["bitmasks","combinatorics","dp","math"]},{"ContestId":232,"Index":"A","Name":"Cycles","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["binary search","constructive algorithms","graphs","greedy"]},{"ContestId":231,"Index":"E","Name":"Cactus","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["data structures","dfs and similar","dp","graphs","trees"]},{"ContestId":231,"Index":"D","Name":"Magic Box","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["brute force","geometry"]},{"ContestId":231,"Index":"C","Name":"To Add or Not to Add","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","sortings","two pointers"]},{"ContestId":231,"Index":"B","Name":"Magic, Wizardry and Wonders","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["constructive algorithms","greedy"]},{"ContestId":231,"Index":"A","Name":"Team","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","greedy"]},{"ContestId":230,"Index":"B","Name":"T-primes","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["binary search","implementation","math","number theory"]},{"ContestId":230,"Index":"A","Name":"Dragons","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":229,"Index":"E","Name":"Gifts","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":229,"Index":"D","Name":"Towers","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["dp","greedy","two pointers"]},{"ContestId":229,"Index":"C","Name":"Triangles","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["combinatorics","graphs","math"]},{"ContestId":229,"Index":"B","Name":"Planets","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["binary search","data structures","graphs","shortest paths"]},{"ContestId":229,"Index":"A","Name":"Shifts","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["brute force","two pointers"]},{"ContestId":228,"Index":"E","Name":"The Road to Berland is Paved With Good Intentions","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["2-sat","dfs and similar","dsu","graphs"]},{"ContestId":228,"Index":"D","Name":"Zigzag","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["data structures"]},{"ContestId":228,"Index":"C","Name":"Fractal Detector","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp","hashing"]},{"ContestId":228,"Index":"B","Name":"Two Tables","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":228,"Index":"A","Name":"Is your horseshoe on the other hoof?","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":227,"Index":"B","Name":"Effective Approach","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation"]},{"ContestId":227,"Index":"A","Name":"Where do I Turn?","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["geometry"]},{"ContestId":226,"Index":"E","Name":"Noble Knight's Path","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["data structures","trees"]},{"ContestId":226,"Index":"D","Name":"The table","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["constructive algorithms","greedy"]},{"ContestId":226,"Index":"C","Name":"Anniversary","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["data structures","implementation","math","matrices","number theory"]},{"ContestId":226,"Index":"B","Name":"Naughty Stone Piles","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["greedy"]},{"ContestId":226,"Index":"A","Name":"Flying Saucer Segments","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["math"]},{"ContestId":225,"Index":"E","Name":"Unsolvable","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["math","number theory"]},{"ContestId":225,"Index":"D","Name":"Snake","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["bitmasks","dfs and similar","graphs","implementation"]},{"ContestId":225,"Index":"C","Name":"Barcode","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dp","matrices"]},{"ContestId":225,"Index":"B","Name":"Well-known Numbers","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search","greedy","number theory"]},{"ContestId":225,"Index":"A","Name":"Dice Tower","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["constructive algorithms","greedy"]},{"ContestId":224,"Index":"B","Name":"Array","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["bitmasks","implementation","two pointers"]},{"ContestId":224,"Index":"A","Name":"Parallelepiped","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","geometry","math"]},{"ContestId":223,"Index":"E","Name":"Planar Graph","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["flows","geometry","graphs"]},{"ContestId":223,"Index":"D","Name":"Spider","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["geometry","graphs"]},{"ContestId":223,"Index":"C","Name":"Partial Sums","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["combinatorics","math","number theory"]},{"ContestId":223,"Index":"B","Name":"Two Strings","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["data structures","dp","strings"]},{"ContestId":223,"Index":"A","Name":"Bracket Sequence","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["data structures","expression parsing","implementation"]},{"ContestId":222,"Index":"E","Name":"Decoding Genome","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["dp","matrices"]},{"ContestId":222,"Index":"D","Name":"Olympiad","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","greedy","sortings","two pointers"]},{"ContestId":222,"Index":"C","Name":"Reducing Fractions","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["implementation","math","number theory","sortings"]},{"ContestId":222,"Index":"B","Name":"Cosmic Tables","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["data structures","implementation"]},{"ContestId":222,"Index":"A","Name":"Shooshuns and Sequence ","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":221,"Index":"B","Name":"Little Elephant and Numbers","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":221,"Index":"A","Name":"Little Elephant and Function","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","math"]},{"ContestId":220,"Index":"E","Name":"Little Elephant and Inversions","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","two pointers"]},{"ContestId":220,"Index":"D","Name":"Little Elephant and Triangle","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["geometry","math"]},{"ContestId":220,"Index":"C","Name":"Little Elephant and Shifts","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["data structures"]},{"ContestId":220,"Index":"B","Name":"Little Elephant and Array","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["constructive algorithms","data structures"]},{"ContestId":220,"Index":"A","Name":"Little Elephant and Problem","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":219,"Index":"E","Name":"Parking Lot","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["data structures"]},{"ContestId":219,"Index":"D","Name":"Choosing Capital for Treeland","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":219,"Index":"C","Name":"Color Stripe","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["brute force","dp","greedy"]},{"ContestId":219,"Index":"B","Name":"Special Offer! Super Price 999 Bourles!","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation"]},{"ContestId":219,"Index":"A","Name":"k-String","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","strings"]},{"ContestId":218,"Index":"B","Name":"Airport","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":218,"Index":"A","Name":"Mountain Scenery","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":217,"Index":"E","Name":"Alien DNA","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["data structures","dsu","trees"]},{"ContestId":217,"Index":"D","Name":"Bitonix' Patrol","Type":"PROGRAMMING","Rating":2900,"Points":3000,"Tags":["bitmasks","brute force","combinatorics","dfs and similar","math"]},{"ContestId":217,"Index":"C","Name":"Formurosa","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["divide and conquer","dp","expression parsing"]},{"ContestId":217,"Index":"B","Name":"Blackboard Fibonacci","Type":"PROGRAMMING","Rating":2100,"Points":1000,"Tags":["brute force","math"]},{"ContestId":217,"Index":"A","Name":"Ice Skating","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","dfs and similar","dsu","graphs"]},{"ContestId":216,"Index":"E","Name":"Martian Luck","Type":"PROGRAMMING","Rating":2000,"Points":3000,"Tags":["math","number theory"]},{"ContestId":216,"Index":"D","Name":"Spider's Web","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["binary search","sortings","two pointers"]},{"ContestId":216,"Index":"C","Name":"Hiring Staff","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["greedy"]},{"ContestId":216,"Index":"B","Name":"Forming Teams","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dfs and similar","implementation"]},{"ContestId":216,"Index":"A","Name":"Tiling with Hexagons","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation","math"]},{"ContestId":215,"Index":"E","Name":"Periodical Numbers","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["combinatorics","dp","number theory"]},{"ContestId":215,"Index":"D","Name":"Hot Days","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["greedy"]},{"ContestId":215,"Index":"C","Name":"Crosses","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["brute force","implementation"]},{"ContestId":215,"Index":"B","Name":"Olympic Medal","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["greedy","math"]},{"ContestId":215,"Index":"A","Name":"Bicycle Chain","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":214,"Index":"B","Name":"Hometask","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["brute force","constructive algorithms","greedy","math"]},{"ContestId":214,"Index":"A","Name":"System of Equations","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":213,"Index":"E","Name":"Two Permutations","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["data structures","hashing","strings"]},{"ContestId":213,"Index":"D","Name":"Stars","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["constructive algorithms","geometry"]},{"ContestId":213,"Index":"C","Name":"Relay Race","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp"]},{"ContestId":213,"Index":"B","Name":"Numbers","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["combinatorics","dp"]},{"ContestId":213,"Index":"A","Name":"Game","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dfs and similar","greedy"]},{"ContestId":212,"Index":"E","Name":"IT Restaurants","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["dfs and similar","dp","trees"]},{"ContestId":212,"Index":"D","Name":"Cutting a Fence","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["binary search","data structures","dsu"]},{"ContestId":212,"Index":"C","Name":"Cowboys","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["combinatorics","dp","math"]},{"ContestId":212,"Index":"B","Name":"Polycarpus is Looking for Good Substrings","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["bitmasks","hashing","implementation"]},{"ContestId":212,"Index":"A","Name":"Privatization","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["flows","graphs"]},{"ContestId":209,"Index":"C","Name":"Trails and Glades","Type":"PROGRAMMING","Rating":2400,"Points":1000,"Tags":["constructive algorithms","dsu","graphs","greedy"]},{"ContestId":209,"Index":"B","Name":"Pixels","Type":"PROGRAMMING","Rating":2100,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":209,"Index":"A","Name":"Multicolored Marbles","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["dp","math"]},{"ContestId":208,"Index":"E","Name":"Blood Cousins","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["binary search","data structures","dfs and similar","trees"]},{"ContestId":208,"Index":"D","Name":"Prizes, Prizes, more Prizes","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":208,"Index":"C","Name":"Police Station","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["dp","graphs","shortest paths"]},{"ContestId":208,"Index":"B","Name":"Solitaire","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dfs and similar","dp"]},{"ContestId":208,"Index":"A","Name":"Dubstep","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["strings"]},{"ContestId":207,"Index":"D9","Name":"The Beaver's Problem - 3","Type":"PROGRAMMING","Rating":1800,"Points":10,"Tags":[]},{"ContestId":207,"Index":"D8","Name":"The Beaver's Problem - 3","Type":"PROGRAMMING","Rating":2300,"Points":10,"Tags":[]},{"ContestId":207,"Index":"D7","Name":"The Beaver's Problem - 3","Type":"PROGRAMMING","Rating":1600,"Points":10,"Tags":[]},{"ContestId":207,"Index":"D6","Name":"The Beaver's Problem - 3","Type":"PROGRAMMING","Rating":2100,"Points":10,"Tags":[]},{"ContestId":207,"Index":"D5","Name":"The Beaver's Problem - 3","Type":"PROGRAMMING","Rating":1600,"Points":10,"Tags":[]},{"ContestId":207,"Index":"D4","Name":"The Beaver's Problem - 3","Type":"PROGRAMMING","Rating":2100,"Points":10,"Tags":[]},{"ContestId":207,"Index":"D3","Name":"The Beaver's Problem - 3","Type":"PROGRAMMING","Rating":2000,"Points":10,"Tags":[]},{"ContestId":207,"Index":"D2","Name":"The Beaver's Problem - 3","Type":"PROGRAMMING","Rating":2000,"Points":10,"Tags":[]},{"ContestId":207,"Index":"D10","Name":"The Beaver's Problem - 3","Type":"PROGRAMMING","Rating":2100,"Points":10,"Tags":[]},{"ContestId":207,"Index":"D1","Name":"The Beaver's Problem - 3","Type":"PROGRAMMING","Rating":1800,"Points":10,"Tags":[]},{"ContestId":207,"Index":"C3","Name":"Game with Two Trees","Type":"PROGRAMMING","Rating":2700,"Points":50,"Tags":["data structures"]},{"ContestId":207,"Index":"C2","Name":"Game with Two Trees","Type":"PROGRAMMING","Rating":2200,"Points":30,"Tags":[]},{"ContestId":207,"Index":"C1","Name":"Game with Two Trees","Type":"PROGRAMMING","Rating":2100,"Points":20,"Tags":[]},{"ContestId":207,"Index":"B3","Name":"Military Trainings","Type":"PROGRAMMING","Rating":1700,"Points":50,"Tags":[]},{"ContestId":207,"Index":"B2","Name":"Military Trainings","Type":"PROGRAMMING","Rating":1900,"Points":30,"Tags":[]},{"ContestId":207,"Index":"B1","Name":"Military Trainings","Type":"PROGRAMMING","Rating":1600,"Points":20,"Tags":[]},{"ContestId":207,"Index":"A3","Name":"Beaver's Calculator 1.0","Type":"PROGRAMMING","Rating":2000,"Points":50,"Tags":["greedy"]},{"ContestId":207,"Index":"A2","Name":"Beaver's Calculator 1.0","Type":"PROGRAMMING","Rating":1800,"Points":30,"Tags":["greedy"]},{"ContestId":207,"Index":"A1","Name":"Beaver's Calculator 1.0","Type":"PROGRAMMING","Rating":1600,"Points":20,"Tags":["greedy"]},{"ContestId":205,"Index":"B","Name":"Little Elephant and Sorting","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","greedy"]},{"ContestId":205,"Index":"A","Name":"Little Elephant and Rozdil","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":204,"Index":"E","Name":"Little Elephant and Strings","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["data structures","implementation","string suffix structures","two pointers"]},{"ContestId":204,"Index":"D","Name":"Little Elephant and Retro Strings","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["dp"]},{"ContestId":204,"Index":"C","Name":"Little Elephant and Furik and Rubik","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["math","probabilities"]},{"ContestId":204,"Index":"B","Name":"Little Elephant and Cards","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["binary search","data structures"]},{"ContestId":204,"Index":"A","Name":"Little Elephant and Interval","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["binary search","combinatorics","dp"]},{"ContestId":203,"Index":"E","Name":"Transportation","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["greedy","sortings","two pointers"]},{"ContestId":203,"Index":"D","Name":"Hit Ball","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["geometry","implementation","math"]},{"ContestId":203,"Index":"C","Name":"Photographer","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["greedy","sortings"]},{"ContestId":203,"Index":"B","Name":"Game on Paper","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":203,"Index":"A","Name":"Two Problems","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":202,"Index":"B","Name":"Brand New Easy Problem","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["brute force"]},{"ContestId":202,"Index":"A","Name":"LLPS","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["binary search","bitmasks","brute force","greedy","implementation","strings"]},{"ContestId":201,"Index":"E","Name":"Thoroughly Bureaucratic Organization","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["binary search","combinatorics"]},{"ContestId":201,"Index":"D","Name":"Brand New Problem","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["bitmasks","brute force","dp"]},{"ContestId":201,"Index":"C","Name":"Fragile Bridges","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp"]},{"ContestId":201,"Index":"B","Name":"Guess That Car!","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["math","ternary search"]},{"ContestId":201,"Index":"A","Name":"Clear Symmetry","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","dp","math"]},{"ContestId":200,"Index":"E","Name":"Tractor College","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["implementation","math","number theory","ternary search"]},{"ContestId":200,"Index":"D","Name":"Programming Language","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["binary search","brute force","expression parsing","implementation"]},{"ContestId":200,"Index":"C","Name":"Football Championship","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["brute force","implementation"]},{"ContestId":200,"Index":"B","Name":"Drinks","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":200,"Index":"A","Name":"Cinema","Type":"PROGRAMMING","Rating":2400,"Points":3000,"Tags":["brute force","data structures"]},{"ContestId":199,"Index":"B","Name":"Special Olympics","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["geometry"]},{"ContestId":199,"Index":"A","Name":"Hexadecimal's theorem","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["brute force","constructive algorithms","implementation","number theory"]},{"ContestId":198,"Index":"E","Name":"Gripping Story","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","data structures","sortings"]},{"ContestId":198,"Index":"D","Name":"Cube Snake","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["constructive algorithms"]},{"ContestId":198,"Index":"C","Name":"Delivering Carcinogen","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["binary search","geometry"]},{"ContestId":198,"Index":"B","Name":"Jumping on Walls","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["shortest paths"]},{"ContestId":198,"Index":"A","Name":"About Bacteria","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["implementation","math"]},{"ContestId":197,"Index":"B","Name":"Limit","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["math"]},{"ContestId":197,"Index":"A","Name":"Plate Game","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["constructive algorithms","games","math"]},{"ContestId":196,"Index":"E","Name":"Opening Portals","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["dsu","graphs","shortest paths"]},{"ContestId":196,"Index":"D","Name":"The Next Good String","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["data structures","greedy","hashing","strings"]},{"ContestId":196,"Index":"C","Name":"Paint Tree","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["constructive algorithms","divide and conquer","geometry","sortings","trees"]},{"ContestId":196,"Index":"B","Name":"Infinite Maze","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["dfs and similar","graphs"]},{"ContestId":196,"Index":"A","Name":"Lexicographically Maximum Subsequence","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","strings"]},{"ContestId":195,"Index":"E","Name":"Building Forest","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["data structures","dsu","graphs"]},{"ContestId":195,"Index":"D","Name":"Analyzing Polyline","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["geometry","math","sortings"]},{"ContestId":195,"Index":"C","Name":"Try and Catch","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["expression parsing","implementation"]},{"ContestId":195,"Index":"B","Name":"After Training","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["data structures","implementation","math"]},{"ContestId":195,"Index":"A","Name":"Let's Watch Football","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["binary search","brute force","math"]},{"ContestId":194,"Index":"B","Name":"Square","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["math"]},{"ContestId":194,"Index":"A","Name":"Exams","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":193,"Index":"E","Name":"Fibonacci Number","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["brute force","math","matrices"]},{"ContestId":193,"Index":"D","Name":"Two Segments","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["data structures"]},{"ContestId":193,"Index":"C","Name":"Hamming Distance","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["constructive algorithms","greedy","math","matrices"]},{"ContestId":193,"Index":"B","Name":"Xor","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["brute force"]},{"ContestId":193,"Index":"A","Name":"Cutting Figure","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["constructive algorithms","graphs","trees"]},{"ContestId":192,"Index":"B","Name":"Walking in the Rain","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":192,"Index":"A","Name":"Funky Numbers","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["binary search","brute force","implementation"]},{"ContestId":191,"Index":"E","Name":"Thwarting Demonstrations","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["binary search","data structures","trees"]},{"ContestId":191,"Index":"D","Name":"Metro Scheme","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["graphs","greedy"]},{"ContestId":191,"Index":"C","Name":"Fools and Roads","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":191,"Index":"B","Name":"Demonstration","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["greedy"]},{"ContestId":191,"Index":"A","Name":"Dynasty Puzzles","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["dp"]},{"ContestId":190,"Index":"E","Name":"Counter Attack","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["data structures","dsu","graphs","hashing","sortings"]},{"ContestId":190,"Index":"D","Name":"Non-Secret Cypher","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["two pointers"]},{"ContestId":190,"Index":"C","Name":"STL","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["dfs and similar"]},{"ContestId":190,"Index":"B","Name":"Surrounded","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["geometry"]},{"ContestId":190,"Index":"A","Name":"Vasya and the Bus","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","math"]},{"ContestId":189,"Index":"B","Name":"Counting Rhombi","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","math"]},{"ContestId":189,"Index":"A","Name":"Cut Ribbon","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["brute force","dp"]},{"ContestId":188,"Index":"H","Name":"Stack","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","expression parsing","implementation"]},{"ContestId":188,"Index":"G","Name":"Array Sorting","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","implementation"]},{"ContestId":188,"Index":"F","Name":"Binary Notation","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","implementation"]},{"ContestId":188,"Index":"E","Name":"HQ9+","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","implementation"]},{"ContestId":188,"Index":"D","Name":"Asterisks","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["*special","implementation"]},{"ContestId":188,"Index":"C","Name":"LCM","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","implementation","math"]},{"ContestId":188,"Index":"B","Name":"A + Reverse B","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["*special","implementation"]},{"ContestId":188,"Index":"A","Name":"Hexagonal Numbers","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["*special"]},{"ContestId":187,"Index":"E","Name":"Heaven Tour","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["data structures","greedy"]},{"ContestId":187,"Index":"D","Name":"BRT Contract ","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["data structures"]},{"ContestId":187,"Index":"C","Name":"Weak Memory","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dfs and similar","dsu"]},{"ContestId":187,"Index":"B","Name":"AlgoRace","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dp","shortest paths"]},{"ContestId":187,"Index":"A","Name":"Permutations","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["greedy"]},{"ContestId":186,"Index":"B","Name":"Growing Mushrooms","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":186,"Index":"A","Name":"Comparing Strings","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","strings"]},{"ContestId":185,"Index":"E","Name":"Soap Time! - 2","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["binary search","data structures"]},{"ContestId":185,"Index":"D","Name":"Visit of the Great","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["math","number theory"]},{"ContestId":185,"Index":"C","Name":"Clever Fat Rat","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["dp"]},{"ContestId":185,"Index":"B","Name":"Mushroom Scientists","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["math","ternary search"]},{"ContestId":185,"Index":"A","Name":"Plant","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["math"]},{"ContestId":183,"Index":"E","Name":"Candy Shop","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["greedy"]},{"ContestId":183,"Index":"D","Name":"T-shirt","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["dp","greedy","probabilities"]},{"ContestId":183,"Index":"C","Name":"Cyclic Coloring","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["dfs and similar"]},{"ContestId":183,"Index":"B","Name":"Zoo","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["brute force","geometry"]},{"ContestId":183,"Index":"A","Name":"Headquarters","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["constructive algorithms","math"]},{"ContestId":182,"Index":"E","Name":"Wooden Fence","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dp"]},{"ContestId":182,"Index":"D","Name":"Common Divisors","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","hashing","implementation","math","strings"]},{"ContestId":182,"Index":"C","Name":"Optimal Sum","Type":"PROGRAMMING","Rating":2000,"Points":3000,"Tags":["data structures","greedy"]},{"ContestId":182,"Index":"B","Name":"Vasya's Calendar","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":182,"Index":"A","Name":"Battlefield","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["geometry","graphs","implementation","shortest paths"]},{"ContestId":181,"Index":"B","Name":"Number of Triplets","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","brute force"]},{"ContestId":181,"Index":"A","Name":"Series of Crimes","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","geometry","implementation"]},{"ContestId":180,"Index":"F","Name":"Mathematical Analysis Rocks!","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":180,"Index":"E","Name":"Cubes","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","dp","two pointers"]},{"ContestId":180,"Index":"D","Name":"Name","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["greedy","strings"]},{"ContestId":180,"Index":"C","Name":"Letter","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["dp"]},{"ContestId":180,"Index":"B","Name":"Divisibility Rules","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["math","number theory"]},{"ContestId":180,"Index":"A","Name":"Defragmentation","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["implementation"]},{"ContestId":178,"Index":"F3","Name":"Representative Sampling","Type":"PROGRAMMING","Rating":2500,"Points":50,"Tags":[]},{"ContestId":178,"Index":"F2","Name":"Representative Sampling","Type":"PROGRAMMING","Rating":2200,"Points":30,"Tags":["dp","sortings","strings"]},{"ContestId":178,"Index":"F1","Name":"Representative Sampling","Type":"PROGRAMMING","Rating":1800,"Points":20,"Tags":[]},{"ContestId":178,"Index":"E3","Name":"The Beaver's Problem - 2","Type":"PROGRAMMING","Rating":2300,"Points":50,"Tags":[]},{"ContestId":178,"Index":"E2","Name":"The Beaver's Problem - 2","Type":"PROGRAMMING","Rating":2000,"Points":30,"Tags":[]},{"ContestId":178,"Index":"E1","Name":"The Beaver's Problem - 2","Type":"PROGRAMMING","Rating":1900,"Points":20,"Tags":[]},{"ContestId":178,"Index":"D3","Name":"Magic Squares","Type":"PROGRAMMING","Rating":2100,"Points":50,"Tags":[]},{"ContestId":178,"Index":"D2","Name":"Magic Squares","Type":"PROGRAMMING","Rating":1900,"Points":30,"Tags":[]},{"ContestId":178,"Index":"D1","Name":"Magic Squares","Type":"PROGRAMMING","Rating":1500,"Points":20,"Tags":[]},{"ContestId":178,"Index":"C3","Name":"Smart Beaver and Resolving Collisions","Type":"PROGRAMMING","Rating":2000,"Points":50,"Tags":[]},{"ContestId":178,"Index":"C2","Name":"Smart Beaver and Resolving Collisions","Type":"PROGRAMMING","Rating":1900,"Points":30,"Tags":[]},{"ContestId":178,"Index":"C1","Name":"Smart Beaver and Resolving Collisions","Type":"PROGRAMMING","Rating":1600,"Points":20,"Tags":[]},{"ContestId":178,"Index":"B3","Name":"Greedy Merchants","Type":"PROGRAMMING","Rating":1800,"Points":50,"Tags":[]},{"ContestId":178,"Index":"B2","Name":"Greedy Merchants","Type":"PROGRAMMING","Rating":1600,"Points":30,"Tags":[]},{"ContestId":178,"Index":"B1","Name":"Greedy Merchants","Type":"PROGRAMMING","Rating":1600,"Points":20,"Tags":[]},{"ContestId":178,"Index":"A3","Name":"Educational Game","Type":"PROGRAMMING","Rating":1100,"Points":50,"Tags":["greedy"]},{"ContestId":178,"Index":"A2","Name":"Educational Game","Type":"PROGRAMMING","Rating":1000,"Points":30,"Tags":["greedy"]},{"ContestId":178,"Index":"A1","Name":"Educational Game","Type":"PROGRAMMING","Rating":1000,"Points":20,"Tags":[]},{"ContestId":177,"Index":"G2","Name":"Fibonacci Strings","Type":"PROGRAMMING","Rating":2600,"Points":70,"Tags":["matrices","strings"]},{"ContestId":177,"Index":"G1","Name":"Fibonacci Strings","Type":"PROGRAMMING","Rating":2400,"Points":30,"Tags":["strings"]},{"ContestId":177,"Index":"F2","Name":"Script Generation","Type":"PROGRAMMING","Rating":2300,"Points":70,"Tags":[]},{"ContestId":177,"Index":"F1","Name":"Script Generation","Type":"PROGRAMMING","Rating":1800,"Points":30,"Tags":[]},{"ContestId":177,"Index":"E2","Name":"Space Voyage","Type":"PROGRAMMING","Rating":1900,"Points":70,"Tags":["binary search"]},{"ContestId":177,"Index":"E1","Name":"Space Voyage","Type":"PROGRAMMING","Rating":1700,"Points":30,"Tags":["binary search"]},{"ContestId":177,"Index":"D2","Name":"Encrypting Messages","Type":"PROGRAMMING","Rating":1500,"Points":70,"Tags":["data structures"]},{"ContestId":177,"Index":"D1","Name":"Encrypting Messages","Type":"PROGRAMMING","Rating":1200,"Points":30,"Tags":["brute force"]},{"ContestId":177,"Index":"C2","Name":"Party","Type":"PROGRAMMING","Rating":1500,"Points":70,"Tags":["brute force","dfs and similar","dsu","graphs"]},{"ContestId":177,"Index":"C1","Name":"Party","Type":"PROGRAMMING","Rating":1500,"Points":30,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":177,"Index":"B2","Name":"Rectangular Game","Type":"PROGRAMMING","Rating":1200,"Points":70,"Tags":["number theory"]},{"ContestId":177,"Index":"B1","Name":"Rectangular Game","Type":"PROGRAMMING","Rating":1000,"Points":30,"Tags":["number theory"]},{"ContestId":177,"Index":"A2","Name":"Good Matrix Elements","Type":"PROGRAMMING","Rating":800,"Points":70,"Tags":["implementation"]},{"ContestId":177,"Index":"A1","Name":"Good Matrix Elements","Type":"PROGRAMMING","Rating":800,"Points":30,"Tags":["implementation"]},{"ContestId":176,"Index":"E","Name":"Archaeology","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["data structures","dfs and similar","trees"]},{"ContestId":176,"Index":"D","Name":"Hyper String","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp"]},{"ContestId":176,"Index":"C","Name":"Playing with Superglue","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["combinatorics","constructive algorithms"]},{"ContestId":176,"Index":"B","Name":"Word Cut","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dp"]},{"ContestId":176,"Index":"A","Name":"Trading Business","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":175,"Index":"F","Name":"Gnomes of Might and Magic","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["data structures","graphs","implementation","shortest paths"]},{"ContestId":175,"Index":"E","Name":"Power Defence","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["brute force","dp","geometry","greedy"]},{"ContestId":175,"Index":"D","Name":"Plane of Tanks: Duel","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["brute force","dp","math","probabilities"]},{"ContestId":175,"Index":"C","Name":"Geometry Horse","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["greedy","implementation","sortings","two pointers"]},{"ContestId":175,"Index":"B","Name":"Plane of Tanks: Pro","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["implementation"]},{"ContestId":175,"Index":"A","Name":"Robot Bicorn Attack","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":174,"Index":"C","Name":"Range Increments","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["data structures","greedy"]},{"ContestId":174,"Index":"B","Name":"File List","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["dp","greedy","implementation"]},{"ContestId":174,"Index":"A","Name":"Problem About Equation","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["math"]},{"ContestId":173,"Index":"E","Name":"Camping Groups","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["data structures","sortings"]},{"ContestId":173,"Index":"D","Name":"Deputies","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["constructive algorithms","graphs","greedy","implementation"]},{"ContestId":173,"Index":"C","Name":"Spiral Maximum","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","dp"]},{"ContestId":173,"Index":"B","Name":"Chamber of Secrets","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dfs and similar","shortest paths"]},{"ContestId":173,"Index":"A","Name":"Rock-Paper-Scissors","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation","math"]},{"ContestId":172,"Index":"E","Name":"BHTML+BCSS","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["*special","dfs and similar","expression parsing"]},{"ContestId":172,"Index":"D","Name":"Calendar Reform","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["*special","number theory"]},{"ContestId":172,"Index":"C","Name":"Bus","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["*special","implementation","sortings"]},{"ContestId":172,"Index":"B","Name":"Pseudorandom Sequence Period","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["*special","implementation","number theory"]},{"ContestId":172,"Index":"A","Name":"Phone Code","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["*special","brute force","implementation"]},{"ContestId":171,"Index":"H","Name":"A polyline","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special","implementation"]},{"ContestId":171,"Index":"G","Name":"Mysterious numbers - 2","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":171,"Index":"F","Name":"ucyhf","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","brute force","implementation","number theory"]},{"ContestId":171,"Index":"E","Name":"MYSTERIOUS LANGUAGE","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":171,"Index":"D","Name":"Broken checker","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["*special","brute force"]},{"ContestId":171,"Index":"C","Name":"A Piece of Cake","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special","implementation"]},{"ContestId":171,"Index":"B","Name":"Star","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["*special","combinatorics"]},{"ContestId":171,"Index":"A","Name":"Mysterious numbers - 1","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["*special","constructive algorithms"]},{"ContestId":169,"Index":"B","Name":"Replacing Digits","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy"]},{"ContestId":169,"Index":"A","Name":"Chores","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["sortings"]},{"ContestId":168,"Index":"B","Name":"Wizards and Minimal Spell","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":168,"Index":"A","Name":"Wizards and Demonstration","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","math"]},{"ContestId":167,"Index":"E","Name":"Wizards and Bets","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["dfs and similar","graphs","math","matrices"]},{"ContestId":167,"Index":"D","Name":"Wizards and Roads","Type":"PROGRAMMING","Rating":3000,"Points":2000,"Tags":["data structures","divide and conquer","graph matchings","graphs","greedy"]},{"ContestId":167,"Index":"C","Name":"Wizards and Numbers","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["games","math"]},{"ContestId":167,"Index":"B","Name":"Wizards and Huge Prize","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dp","math","probabilities"]},{"ContestId":167,"Index":"A","Name":"Wizards and Trolleybuses","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["implementation","math"]},{"ContestId":166,"Index":"E","Name":"Tetrahedron","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dp","math","matrices"]},{"ContestId":166,"Index":"D","Name":"Shoe Store","Type":"PROGRAMMING","Rating":2500,"Points":3000,"Tags":["dp","graph matchings","greedy","sortings","two pointers"]},{"ContestId":166,"Index":"C","Name":"Median","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","math","sortings"]},{"ContestId":166,"Index":"B","Name":"Polygons","Type":"PROGRAMMING","Rating":2100,"Points":3000,"Tags":["geometry","sortings"]},{"ContestId":166,"Index":"A","Name":"Rank List","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["binary search","implementation","sortings"]},{"ContestId":165,"Index":"E","Name":"Compatible Numbers","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["bitmasks","brute force","dfs and similar","dp"]},{"ContestId":165,"Index":"D","Name":"Beard Graph","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["data structures","dsu","trees"]},{"ContestId":165,"Index":"C","Name":"Another Problem on Strings","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","brute force","dp","math","strings","two pointers"]},{"ContestId":165,"Index":"B","Name":"Burning Midnight Oil","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","implementation"]},{"ContestId":165,"Index":"A","Name":"Supercentral Point","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":164,"Index":"E","Name":"Polycarpus and Tasks","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":[]},{"ContestId":164,"Index":"D","Name":"Minimum Diameter","Type":"PROGRAMMING","Rating":3100,"Points":2500,"Tags":["binary search","brute force"]},{"ContestId":164,"Index":"C","Name":"Machine Programming","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["flows","graphs"]},{"ContestId":164,"Index":"B","Name":"Ancient Berland Hieroglyphs","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["two pointers"]},{"ContestId":164,"Index":"A","Name":"Variable, or There and Back Again","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["dfs and similar","graphs"]},{"ContestId":163,"Index":"E","Name":"e-Government","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["data structures","dfs and similar","dp","strings","trees"]},{"ContestId":163,"Index":"D","Name":"Large Refrigerator","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["brute force"]},{"ContestId":163,"Index":"C","Name":"Conveyor","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["sortings","two pointers"]},{"ContestId":163,"Index":"B","Name":"Lemmings","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["binary search"]},{"ContestId":163,"Index":"A","Name":"Substring and Subsequence","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["dp"]},{"ContestId":162,"Index":"J","Name":"Brackets","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":162,"Index":"I","Name":"Truncatable primes","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":162,"Index":"H","Name":"Alternating case","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":162,"Index":"G","Name":"Non-decimal sum","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":162,"Index":"F","Name":"Factorial zeros","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":162,"Index":"E","Name":"HQ9+","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":162,"Index":"D","Name":"Remove digits","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special"]},{"ContestId":162,"Index":"C","Name":"Prime factorization","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":162,"Index":"B","Name":"Binary notation","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":162,"Index":"A","Name":"Pentagonal numbers","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["*special","implementation"]},{"ContestId":161,"Index":"E","Name":"Polycarpus the Safecracker","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["brute force","dp"]},{"ContestId":161,"Index":"D","Name":"Distance in Tree","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dfs and similar","dp","trees"]},{"ContestId":161,"Index":"C","Name":"Abracadabra","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["divide and conquer"]},{"ContestId":161,"Index":"B","Name":"Discounts","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":161,"Index":"A","Name":"Dress'em in Vests!","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","brute force","greedy","two pointers"]},{"ContestId":160,"Index":"E","Name":"Buses and People","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["binary search","data structures","sortings"]},{"ContestId":160,"Index":"D","Name":"Edges in MST","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["dfs and similar","dsu","graphs","sortings"]},{"ContestId":160,"Index":"C","Name":"Find Pair","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["implementation","math","sortings"]},{"ContestId":160,"Index":"B","Name":"Unlucky Ticket","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":160,"Index":"A","Name":"Twins","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","sortings"]},{"ContestId":159,"Index":"E","Name":"Zebra Tower","Type":"PROGRAMMING","Rating":1700,"Points":2500,"Tags":["*special","data structures","greedy","sortings"]},{"ContestId":159,"Index":"D","Name":"Palindrome pairs","Type":"PROGRAMMING","Rating":1500,"Points":2000,"Tags":["*special","brute force","dp","strings"]},{"ContestId":159,"Index":"C","Name":"String Manipulation 1.0","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["*special","binary search","brute force","data structures","strings"]},{"ContestId":159,"Index":"B","Name":"Matchmaker","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["*special","greedy","sortings"]},{"ContestId":159,"Index":"A","Name":"Friends or Not","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["*special","greedy","implementation"]},{"ContestId":158,"Index":"E","Name":"Phone Talks","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["*special","dp","sortings"]},{"ContestId":158,"Index":"D","Name":"Ice Sculptures","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["*special","brute force","number theory"]},{"ContestId":158,"Index":"C","Name":"Cd and pwd commands","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["*special","data structures","implementation"]},{"ContestId":158,"Index":"B","Name":"Taxi","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["*special","greedy","implementation"]},{"ContestId":158,"Index":"A","Name":"Next Round","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["*special","implementation"]},{"ContestId":157,"Index":"B","Name":"Trace","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["geometry","sortings"]},{"ContestId":157,"Index":"A","Name":"Game Outcome","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":156,"Index":"E","Name":"Mrs. Hudson's Pancakes","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["brute force","dp"]},{"ContestId":156,"Index":"D","Name":"Clues","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["combinatorics","graphs"]},{"ContestId":156,"Index":"C","Name":"Cipher","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["combinatorics","dp"]},{"ContestId":156,"Index":"B","Name":"Suspects","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["constructive algorithms","data structures","implementation"]},{"ContestId":156,"Index":"A","Name":"Message","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force"]},{"ContestId":155,"Index":"B","Name":"Combination","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":155,"Index":"A","Name":"I_love_\\%username\\%","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":154,"Index":"E","Name":"Martian Colony","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["geometry"]},{"ContestId":154,"Index":"D","Name":"Flatland Fencing","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["games","math"]},{"ContestId":154,"Index":"C","Name":"Double Profiles","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["graphs","hashing","sortings"]},{"ContestId":154,"Index":"B","Name":"Colliders","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["math","number theory"]},{"ContestId":154,"Index":"A","Name":"Hometask","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["greedy"]},{"ContestId":153,"Index":"E","Name":"Euclidean Distance","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special"]},{"ContestId":153,"Index":"D","Name":"Date Change","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special"]},{"ContestId":153,"Index":"C","Name":"Caesar Cipher","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special"]},{"ContestId":153,"Index":"B","Name":"Binary notation","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":153,"Index":"A","Name":"A + B","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":152,"Index":"E","Name":"Garden","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["bitmasks","dp","graphs","trees"]},{"ContestId":152,"Index":"D","Name":"Frames","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["brute force"]},{"ContestId":152,"Index":"C","Name":"Pocket Book","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["combinatorics"]},{"ContestId":152,"Index":"B","Name":"Steps","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","implementation"]},{"ContestId":152,"Index":"A","Name":"Marks","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":151,"Index":"B","Name":"Phone Numbers","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":151,"Index":"A","Name":"Soft Drinking","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":150,"Index":"E","Name":"Freezing with Style","Type":"PROGRAMMING","Rating":3000,"Points":3000,"Tags":["binary search","data structures","divide and conquer","trees"]},{"ContestId":150,"Index":"D","Name":"Mission Impassable","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["dp","strings"]},{"ContestId":150,"Index":"C","Name":"Smart Cheater","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["data structures","math","probabilities"]},{"ContestId":150,"Index":"B","Name":"Quantity of Strings","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["combinatorics","dfs and similar","graphs","math"]},{"ContestId":150,"Index":"A","Name":"Win or Freeze","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["games","math","number theory"]},{"ContestId":149,"Index":"E","Name":"Martian Strings","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["string suffix structures","strings"]},{"ContestId":149,"Index":"D","Name":"Coloring Brackets","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["dp"]},{"ContestId":149,"Index":"C","Name":"Division into Teams","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["greedy","math","sortings"]},{"ContestId":149,"Index":"B","Name":"Martian Clock","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["implementation"]},{"ContestId":149,"Index":"A","Name":"Business trip","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":148,"Index":"E","Name":"Porcelain","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["dp"]},{"ContestId":148,"Index":"D","Name":"Bag of mice","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dp","games","math","probabilities"]},{"ContestId":148,"Index":"C","Name":"Terse princess","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","greedy"]},{"ContestId":148,"Index":"B","Name":"Escape","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["implementation","math"]},{"ContestId":148,"Index":"A","Name":"Insomnia cure","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":147,"Index":"B","Name":"Smile House","Type":"PROGRAMMING","Rating":2500,"Points":1000,"Tags":["binary search","graphs","matrices"]},{"ContestId":147,"Index":"A","Name":"Punctuation","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation","strings"]},{"ContestId":146,"Index":"B","Name":"Lucky Mask","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":146,"Index":"A","Name":"Lucky Ticket","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":145,"Index":"E","Name":"Lucky Queries","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures"]},{"ContestId":145,"Index":"D","Name":"Lucky Pair","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["combinatorics","data structures","implementation"]},{"ContestId":145,"Index":"C","Name":"Lucky Subsequence","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["combinatorics","dp","math"]},{"ContestId":145,"Index":"B","Name":"Lucky Number 2","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["constructive algorithms"]},{"ContestId":145,"Index":"A","Name":"Lucky Conversion","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":144,"Index":"E","Name":"Competition","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["data structures","greedy"]},{"ContestId":144,"Index":"D","Name":"Missile Silos","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["data structures","dfs and similar","graphs","shortest paths"]},{"ContestId":144,"Index":"C","Name":"Anagram Search","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["implementation","strings"]},{"ContestId":144,"Index":"B","Name":"Meeting","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":144,"Index":"A","Name":"Arrival of the General","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":143,"Index":"B","Name":"Help Kingdom of Far Far Away 2","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":143,"Index":"A","Name":"Help Vasilisa the Wise 2","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","math"]},{"ContestId":142,"Index":"E","Name":"Help Greg the Dwarf 2","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["geometry"]},{"ContestId":142,"Index":"D","Name":"Help Shrek and Donkey 2","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["games"]},{"ContestId":142,"Index":"C","Name":"Help Caretaker","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["brute force","dp"]},{"ContestId":142,"Index":"B","Name":"Help General","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":142,"Index":"A","Name":"Help Farmer","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["brute force","math"]},{"ContestId":141,"Index":"E","Name":"Clearing Up","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["constructive algorithms","dp","dsu","graphs"]},{"ContestId":141,"Index":"D","Name":"Take-off Ramps","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["graphs","shortest paths"]},{"ContestId":141,"Index":"C","Name":"Queue","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["constructive algorithms","greedy","sortings"]},{"ContestId":141,"Index":"B","Name":"Hopscotch","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["geometry","math"]},{"ContestId":141,"Index":"A","Name":"Amusing Joke","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","sortings","strings"]},{"ContestId":140,"Index":"F","Name":"New Year Snowflake","Type":"PROGRAMMING","Rating":2600,"Points":3000,"Tags":["geometry","sortings"]},{"ContestId":140,"Index":"E","Name":"New Year Garland","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["combinatorics","dp"]},{"ContestId":140,"Index":"D","Name":"New Year Contest","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["greedy","sortings"]},{"ContestId":140,"Index":"C","Name":"New Year Snowmen","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["binary search","data structures","greedy"]},{"ContestId":140,"Index":"B","Name":"New Year Cards","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["brute force","greedy","implementation"]},{"ContestId":140,"Index":"A","Name":"New Year Table","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["geometry","math"]},{"ContestId":139,"Index":"B","Name":"Wallpaper","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["implementation","math"]},{"ContestId":139,"Index":"A","Name":"Petr and Book","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":138,"Index":"E","Name":"Hellish Constraints","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["brute force","dp","two pointers"]},{"ContestId":138,"Index":"D","Name":"World of Darkraft","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp","games"]},{"ContestId":138,"Index":"C","Name":"Mushroom Gnomes - 2","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["binary search","data structures","probabilities","sortings"]},{"ContestId":138,"Index":"B","Name":"Digits Permutations","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["greedy"]},{"ContestId":138,"Index":"A","Name":"Literature Lesson","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["implementation"]},{"ContestId":137,"Index":"E","Name":"Last Chance","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["data structures","implementation","strings"]},{"ContestId":137,"Index":"D","Name":"Palindromes","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dp","strings"]},{"ContestId":137,"Index":"C","Name":"History","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["sortings"]},{"ContestId":137,"Index":"B","Name":"Permutation","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["greedy"]},{"ContestId":137,"Index":"A","Name":"Postcards and photos","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":136,"Index":"B","Name":"Ternary Logic","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation","math"]},{"ContestId":136,"Index":"A","Name":"Presents","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":135,"Index":"E","Name":"Weak Subsequence","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["combinatorics"]},{"ContestId":135,"Index":"D","Name":"Cycle","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["brute force","dfs and similar","implementation"]},{"ContestId":135,"Index":"C","Name":"Zero-One","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["constructive algorithms","games","greedy"]},{"ContestId":135,"Index":"B","Name":"Rectangle and Square","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["brute force","geometry","math"]},{"ContestId":135,"Index":"A","Name":"Replacement","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["greedy","implementation","sortings"]},{"ContestId":134,"Index":"C","Name":"Swaps","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["constructive algorithms","graphs","greedy"]},{"ContestId":134,"Index":"B","Name":"Pairs of Numbers","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["brute force","dfs and similar","math","number theory"]},{"ContestId":134,"Index":"A","Name":"Average Numbers","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":133,"Index":"B","Name":"Unary","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation"]},{"ContestId":133,"Index":"A","Name":"HQ9+","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":132,"Index":"E","Name":"Bits of merry old England","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["flows","graphs"]},{"ContestId":132,"Index":"D","Name":"Constants in the language of Shakespeare","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["constructive algorithms","dp","greedy"]},{"ContestId":132,"Index":"C","Name":"Logo Turtle","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dp"]},{"ContestId":132,"Index":"B","Name":"Piet","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["implementation"]},{"ContestId":132,"Index":"A","Name":"Turing Tape","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation"]},{"ContestId":131,"Index":"F","Name":"Present to Mom","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["binary search","two pointers"]},{"ContestId":131,"Index":"E","Name":"Yet Another Task with Queens","Type":"PROGRAMMING","Rating":1700,"Points":2500,"Tags":["sortings"]},{"ContestId":131,"Index":"D","Name":"Subway","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["dfs and similar","graphs"]},{"ContestId":131,"Index":"C","Name":"The World is a Theatre","Type":"PROGRAMMING","Rating":1400,"Points":1500,"Tags":["combinatorics","math"]},{"ContestId":131,"Index":"B","Name":"Opposites Attract","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","math"]},{"ContestId":131,"Index":"A","Name":"cAPS lOCK","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","strings"]},{"ContestId":130,"Index":"J","Name":"Date calculation","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special"]},{"ContestId":130,"Index":"I","Name":"Array sorting","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special","sortings"]},{"ContestId":130,"Index":"H","Name":"Balanced brackets","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":130,"Index":"G","Name":"CAPS LOCK ON","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["*special"]},{"ContestId":130,"Index":"F","Name":"Prime factorization","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":130,"Index":"E","Name":"Tribonacci numbers","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special"]},{"ContestId":130,"Index":"D","Name":"Exponentiation","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special"]},{"ContestId":130,"Index":"C","Name":"Decimal sum","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special"]},{"ContestId":130,"Index":"B","Name":"Gnikool Ssalg","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","implementation","strings"]},{"ContestId":130,"Index":"A","Name":"Hexagonal numbers","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["*special","implementation"]},{"ContestId":129,"Index":"B","Name":"Students and Shoelaces","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["brute force","dfs and similar","graphs","implementation"]},{"ContestId":129,"Index":"A","Name":"Cookies","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":128,"Index":"E","Name":"Birthday","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["geometry","math"]},{"ContestId":128,"Index":"D","Name":"Numbers","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","implementation"]},{"ContestId":128,"Index":"C","Name":"Games with Rectangle","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["combinatorics","dp"]},{"ContestId":128,"Index":"B","Name":"String","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["brute force","constructive algorithms","hashing","implementation","string suffix structures","strings"]},{"ContestId":128,"Index":"A","Name":"Statues","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dfs and similar"]},{"ContestId":127,"Index":"B","Name":"Canvas Frames","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["implementation"]},{"ContestId":127,"Index":"A","Name":"Wasted Time","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["geometry"]},{"ContestId":126,"Index":"E","Name":"Pills","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["brute force","flows"]},{"ContestId":126,"Index":"D","Name":"Fibonacci Sums","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["dp","math"]},{"ContestId":126,"Index":"C","Name":"E-reader Display","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":126,"Index":"B","Name":"Password","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["binary search","dp","hashing","string suffix structures","strings"]},{"ContestId":126,"Index":"A","Name":"Hot Bath","Type":"PROGRAMMING","Rating":1900,"Points":500,"Tags":["binary search","brute force","math"]},{"ContestId":125,"Index":"E","Name":"MST Company","Type":"PROGRAMMING","Rating":2400,"Points":5000,"Tags":["binary search","graphs"]},{"ContestId":125,"Index":"D","Name":"Two progressions","Type":"PROGRAMMING","Rating":2200,"Points":3000,"Tags":["constructive algorithms","greedy"]},{"ContestId":125,"Index":"C","Name":"Hobbits' Party","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["constructive algorithms","greedy"]},{"ContestId":125,"Index":"B","Name":"Simple XML","Type":"PROGRAMMING","Rating":1000,"Points":1500,"Tags":["implementation"]},{"ContestId":125,"Index":"A","Name":"Measuring Lengths in Baden","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["math"]},{"ContestId":124,"Index":"B","Name":"Permutations","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force","combinatorics","implementation"]},{"ContestId":124,"Index":"A","Name":"The number of positions","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["math"]},{"ContestId":123,"Index":"E","Name":"Maze","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dfs and similar","dp","probabilities","trees"]},{"ContestId":123,"Index":"D","Name":"String","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["string suffix structures"]},{"ContestId":123,"Index":"C","Name":"Brackets","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["combinatorics","dp","greedy"]},{"ContestId":123,"Index":"B","Name":"Squares","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["math"]},{"ContestId":123,"Index":"A","Name":"Prime Permutation","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","number theory","strings"]},{"ContestId":122,"Index":"B","Name":"Lucky Substring","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":122,"Index":"A","Name":"Lucky Division","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","number theory"]},{"ContestId":121,"Index":"E","Name":"Lucky Array","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures"]},{"ContestId":121,"Index":"D","Name":"Lucky Segments","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["binary search","implementation","two pointers"]},{"ContestId":121,"Index":"C","Name":"Lucky Permutation","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","combinatorics","number theory"]},{"ContestId":121,"Index":"B","Name":"Lucky Transformation","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["strings"]},{"ContestId":121,"Index":"A","Name":"Lucky Sum","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":120,"Index":"J","Name":"Minimum Sum","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["divide and conquer","geometry","sortings"]},{"ContestId":120,"Index":"I","Name":"Luck is in Numbers","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy"]},{"ContestId":120,"Index":"H","Name":"Brevity is Soul of Wit","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["graph matchings"]},{"ContestId":120,"Index":"G","Name":"Boom","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["implementation"]},{"ContestId":120,"Index":"F","Name":"Spiders","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["dp","greedy","trees"]},{"ContestId":120,"Index":"E","Name":"Put Knight!","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["games","math"]},{"ContestId":120,"Index":"D","Name":"Three Sons","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force"]},{"ContestId":120,"Index":"C","Name":"Winnie-the-Pooh and honey","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation","math"]},{"ContestId":120,"Index":"B","Name":"Quiz League","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":120,"Index":"A","Name":"Elevator","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","implementation","math"]},{"ContestId":119,"Index":"E","Name":"Alternative Reality","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["geometry"]},{"ContestId":119,"Index":"D","Name":"String Transformation","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["hashing","strings"]},{"ContestId":119,"Index":"C","Name":"Education Reform","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp"]},{"ContestId":119,"Index":"B","Name":"Before Exam","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["constructive algorithms","implementation","sortings"]},{"ContestId":119,"Index":"A","Name":"Epic Game","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":118,"Index":"E","Name":"Bertown roads","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["dfs and similar","graphs"]},{"ContestId":118,"Index":"D","Name":"Caesar's Legions","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["dp"]},{"ContestId":118,"Index":"C","Name":"Fancy Number","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["brute force","greedy","sortings","strings"]},{"ContestId":118,"Index":"B","Name":"Present from Lena","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":118,"Index":"A","Name":"String Task","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","strings"]},{"ContestId":117,"Index":"E","Name":"Tree or not Tree","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["data structures","divide and conquer","implementation","trees"]},{"ContestId":117,"Index":"D","Name":"Not Quick Transformation","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["divide and conquer","math"]},{"ContestId":117,"Index":"C","Name":"Cycle","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dfs and similar","graphs"]},{"ContestId":117,"Index":"B","Name":"Very Interesting Game","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["brute force","number theory"]},{"ContestId":117,"Index":"A","Name":"Elevator","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation","math"]},{"ContestId":116,"Index":"B","Name":"Little Pigs and Wolves","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":116,"Index":"A","Name":"Tram","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":115,"Index":"E","Name":"Linear Kingdom Races","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["data structures","dp"]},{"ContestId":115,"Index":"D","Name":"Unambiguous Arithmetic Expression","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["dp","expression parsing"]},{"ContestId":115,"Index":"C","Name":"Plumber","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["math"]},{"ContestId":115,"Index":"B","Name":"Lawnmower","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":115,"Index":"A","Name":"Party","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":114,"Index":"B","Name":"PFAST Inc.","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["bitmasks","brute force","graphs"]},{"ContestId":114,"Index":"A","Name":"Cifera","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["math"]},{"ContestId":113,"Index":"E","Name":"Sleeping","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["combinatorics","implementation","math"]},{"ContestId":113,"Index":"D","Name":"Museum","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["math","matrices","probabilities"]},{"ContestId":113,"Index":"C","Name":"Double Happiness","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["brute force","math","number theory"]},{"ContestId":113,"Index":"B","Name":"Petr#","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["brute force","data structures","hashing","strings"]},{"ContestId":113,"Index":"A","Name":"Grammar Lessons","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["implementation","strings"]},{"ContestId":112,"Index":"B","Name":"Petya and Square","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","math"]},{"ContestId":112,"Index":"A","Name":"Petya and Strings","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":111,"Index":"E","Name":"Petya and Rectangle","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":[]},{"ContestId":111,"Index":"D","Name":"Petya and Coloring","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["combinatorics","dp"]},{"ContestId":111,"Index":"C","Name":"Petya and Spiders","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["bitmasks","dp","dsu"]},{"ContestId":111,"Index":"B","Name":"Petya and Divisors","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["binary search","data structures","number theory"]},{"ContestId":111,"Index":"A","Name":"Petya and Inequiations","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["greedy"]},{"ContestId":110,"Index":"B","Name":"Lucky String","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["constructive algorithms","strings"]},{"ContestId":110,"Index":"A","Name":"Nearly Lucky Number","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":109,"Index":"E","Name":"Lucky Interval","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["brute force","math"]},{"ContestId":109,"Index":"D","Name":"Lucky Sorting","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","sortings"]},{"ContestId":109,"Index":"C","Name":"Lucky Tree","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["dp","dsu","trees"]},{"ContestId":109,"Index":"B","Name":"Lucky Probability","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["brute force","probabilities"]},{"ContestId":109,"Index":"A","Name":"Lucky Sum of Digits","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":108,"Index":"B","Name":"Datatypes","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["math","sortings"]},{"ContestId":108,"Index":"A","Name":"Palindromic Times","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","strings"]},{"ContestId":107,"Index":"E","Name":"Darts","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["geometry","probabilities"]},{"ContestId":107,"Index":"D","Name":"Crime Management","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["dp","graphs","matrices"]},{"ContestId":107,"Index":"C","Name":"Arrangement","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["bitmasks","dp"]},{"ContestId":107,"Index":"B","Name":"Basketball Team","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["combinatorics","dp","math","probabilities"]},{"ContestId":107,"Index":"A","Name":"Dorm Water Supply","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["dfs and similar","graphs"]},{"ContestId":106,"Index":"E","Name":"Space Rescuers","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["geometry","ternary search"]},{"ContestId":106,"Index":"D","Name":"Treasure Island","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["brute force","implementation"]},{"ContestId":106,"Index":"C","Name":"Buns","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["dp"]},{"ContestId":106,"Index":"B","Name":"Choosing Laptop","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":106,"Index":"A","Name":"Card Game","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":105,"Index":"E","Name":"Lift and Throw","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["brute force"]},{"ContestId":105,"Index":"D","Name":"Entertaining Geodetics","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["brute force","dsu","implementation"]},{"ContestId":105,"Index":"C","Name":"Item World","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["brute force","implementation","sortings"]},{"ContestId":105,"Index":"B","Name":"Dark Assembly","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["brute force","probabilities"]},{"ContestId":105,"Index":"A","Name":"Transmigration","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["implementation"]},{"ContestId":104,"Index":"A","Name":"Blackjack","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":103,"Index":"E","Name":"Buying Sets","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["flows","graph matchings"]},{"ContestId":103,"Index":"D","Name":"Time to Raid Cowavans","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["brute force","data structures","sortings"]},{"ContestId":103,"Index":"C","Name":"Russian Roulette","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":103,"Index":"B","Name":"Cthulhu","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":103,"Index":"A","Name":"Testing Pants for Sadness","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["greedy","implementation","math"]},{"ContestId":102,"Index":"B","Name":"Sum of Digits","Type":"PROGRAMMING","Rating":1000,"Points":1000,"Tags":["implementation"]},{"ContestId":102,"Index":"A","Name":"Clothes","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force"]},{"ContestId":101,"Index":"E","Name":"Candies and Stones","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["divide and conquer","dp"]},{"ContestId":101,"Index":"D","Name":"Castle","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["dp","greedy","probabilities","sortings","trees"]},{"ContestId":101,"Index":"C","Name":"Vectors","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["implementation","math"]},{"ContestId":101,"Index":"B","Name":"Buses","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["binary search","data structures","dp"]},{"ContestId":101,"Index":"A","Name":"Homework","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy"]},{"ContestId":100,"Index":"J","Name":"Interval Coloring","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["*special","greedy","math"]},{"ContestId":100,"Index":"I","Name":"Rotation","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","geometry","math"]},{"ContestId":100,"Index":"H","Name":"Battleship","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["*special","dfs and similar","implementation"]},{"ContestId":100,"Index":"G","Name":"Name the album","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","data structures","implementation"]},{"ContestId":100,"Index":"F","Name":"Polynom","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","implementation"]},{"ContestId":100,"Index":"E","Name":"Lamps in a Line","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","math"]},{"ContestId":100,"Index":"D","Name":"World of Mouth","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","strings"]},{"ContestId":100,"Index":"C","Name":"A+B","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["*special","implementation"]},{"ContestId":100,"Index":"B","Name":"Friendly Numbers","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","implementation"]},{"ContestId":100,"Index":"A","Name":"Carpeting the Room","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["*special","implementation"]},{"ContestId":99,"Index":"B","Name":"Help Chef Gerasim","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":99,"Index":"A","Name":"Help Far Away Kingdom","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["strings"]},{"ContestId":98,"Index":"E","Name":"Help Shrek and Donkey","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["dp","games","math","probabilities"]},{"ContestId":98,"Index":"D","Name":"Help Monks","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["constructive algorithms"]},{"ContestId":98,"Index":"C","Name":"Help Greg the Dwarf","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["geometry","ternary search"]},{"ContestId":98,"Index":"B","Name":"Help King","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["implementation","probabilities","trees"]},{"ContestId":98,"Index":"A","Name":"Help Victoria the Wise","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":97,"Index":"E","Name":"Leaders","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["dfs and similar","dsu","graphs","trees"]},{"ContestId":97,"Index":"D","Name":"Robot in Basement","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["bitmasks","brute force","implementation"]},{"ContestId":97,"Index":"C","Name":"Winning Strategy","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["binary search","graphs","math","shortest paths"]},{"ContestId":97,"Index":"B","Name":"Superset","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["constructive algorithms","divide and conquer"]},{"ContestId":97,"Index":"A","Name":"Domino","Type":"PROGRAMMING","Rating":2400,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":96,"Index":"B","Name":"Lucky Numbers (easy)","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["binary search","bitmasks","brute force"]},{"ContestId":96,"Index":"A","Name":"Football","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","strings"]},{"ContestId":95,"Index":"E","Name":"Lucky Country","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["dp","dsu","graphs"]},{"ContestId":95,"Index":"D","Name":"Horse Races","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp","math"]},{"ContestId":95,"Index":"C","Name":"Volleyball","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["shortest paths"]},{"ContestId":95,"Index":"B","Name":"Lucky Numbers","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dp","greedy"]},{"ContestId":95,"Index":"A","Name":"Hockey","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["implementation","strings"]},{"ContestId":94,"Index":"B","Name":"Friends","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["graphs","implementation","math"]},{"ContestId":94,"Index":"A","Name":"Restoring Password","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","strings"]},{"ContestId":93,"Index":"E","Name":"Lostborn","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["dp","math","number theory"]},{"ContestId":93,"Index":"D","Name":"Flags","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp","math","matrices"]},{"ContestId":93,"Index":"C","Name":"Azembler","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["brute force","implementation"]},{"ContestId":93,"Index":"B","Name":"End of Exams","Type":"PROGRAMMING","Rating":1900,"Points":1000,"Tags":["greedy"]},{"ContestId":93,"Index":"A","Name":"Frames","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["implementation"]},{"ContestId":92,"Index":"B","Name":"Binary Number","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy"]},{"ContestId":92,"Index":"A","Name":"Chips","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","math"]},{"ContestId":91,"Index":"E","Name":"Igloo Skyscraper","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["data structures","geometry"]},{"ContestId":91,"Index":"D","Name":"Grocer's Problem","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["constructive algorithms","graphs","greedy"]},{"ContestId":91,"Index":"C","Name":"Ski Base","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["combinatorics","dsu","graphs"]},{"ContestId":91,"Index":"B","Name":"Queue","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["binary search","data structures"]},{"ContestId":91,"Index":"A","Name":"Newspaper Headline","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["greedy","strings"]},{"ContestId":90,"Index":"B","Name":"African Crossword","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":90,"Index":"A","Name":"Cableway","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","math"]},{"ContestId":89,"Index":"E","Name":"Fire and Ice","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["greedy"]},{"ContestId":89,"Index":"D","Name":"Space mines","Type":"PROGRAMMING","Rating":2500,"Points":1500,"Tags":["geometry"]},{"ContestId":89,"Index":"C","Name":"Chip Play","Type":"PROGRAMMING","Rating":2300,"Points":1000,"Tags":["brute force","data structures","implementation"]},{"ContestId":89,"Index":"B","Name":"Widget Library","Type":"PROGRAMMING","Rating":2300,"Points":1000,"Tags":["dp","expression parsing","graphs","implementation"]},{"ContestId":89,"Index":"A","Name":"Robbery","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["greedy"]},{"ContestId":88,"Index":"B","Name":"Keyboard","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["implementation"]},{"ContestId":88,"Index":"A","Name":"Chord","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":87,"Index":"E","Name":"Mogohu-Rea Idol","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["geometry"]},{"ContestId":87,"Index":"D","Name":"Beautiful Road","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["dfs and similar","dp","dsu","graphs","implementation","sortings","trees"]},{"ContestId":87,"Index":"C","Name":"Interesting Game","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp","games","math"]},{"ContestId":87,"Index":"B","Name":"Vasya and Types","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":87,"Index":"A","Name":"Trains","Type":"PROGRAMMING","Rating":1500,"Points":500,"Tags":["implementation","math"]},{"ContestId":86,"Index":"E","Name":"Long sequence","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["brute force","math","matrices"]},{"ContestId":86,"Index":"D","Name":"Powerful array","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["data structures","implementation","math","two pointers"]},{"ContestId":86,"Index":"C","Name":"Genetic engineering","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp","string suffix structures","trees"]},{"ContestId":86,"Index":"B","Name":"Tetris revisited","Type":"PROGRAMMING","Rating":2200,"Points":1000,"Tags":["constructive algorithms","graph matchings","greedy","math"]},{"ContestId":86,"Index":"A","Name":"Reflection","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["math"]},{"ContestId":85,"Index":"E","Name":"Guard Towers","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["binary search","dsu","geometry","graphs","sortings"]},{"ContestId":85,"Index":"D","Name":"Sum of Medians","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["binary search","brute force","data structures","implementation"]},{"ContestId":85,"Index":"C","Name":"Petya and Tree","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["binary search","dfs and similar","probabilities","sortings","trees"]},{"ContestId":85,"Index":"B","Name":"Embassy Queue","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["data structures","greedy"]},{"ContestId":85,"Index":"A","Name":"Domino","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","implementation"]},{"ContestId":84,"Index":"C","Name":"Biathlon","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["binary search","implementation"]},{"ContestId":84,"Index":"A","Name":"Toy Army","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["math","number theory"]},{"ContestId":83,"Index":"E","Name":"Two Subsequences","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["bitmasks","dp"]},{"ContestId":83,"Index":"D","Name":"Numbers","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["dp","math","number theory"]},{"ContestId":83,"Index":"C","Name":"Track","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["graphs","greedy","shortest paths"]},{"ContestId":83,"Index":"B","Name":"Doctor","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["binary search","math","sortings"]},{"ContestId":83,"Index":"A","Name":"Magical Array","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["math"]},{"ContestId":82,"Index":"E","Name":"Corridor","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["geometry"]},{"ContestId":82,"Index":"D","Name":"Two out of Three","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dp"]},{"ContestId":82,"Index":"C","Name":"General Mobilization","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["data structures","dfs and similar","sortings"]},{"ContestId":82,"Index":"B","Name":"Sets","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["constructive algorithms","hashing","implementation"]},{"ContestId":82,"Index":"A","Name":"Double Cola","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","math"]},{"ContestId":81,"Index":"E","Name":"Pairs","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["dfs and similar","dp","dsu","graphs","implementation","trees"]},{"ContestId":81,"Index":"D","Name":"Polycarp's Picture Gallery","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["constructive algorithms","greedy"]},{"ContestId":81,"Index":"C","Name":"Average Score","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["greedy","math","sortings"]},{"ContestId":81,"Index":"B","Name":"Sequence Formatting","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":81,"Index":"A","Name":"Plug-in","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["implementation"]},{"ContestId":80,"Index":"B","Name":"Depression","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["geometry","math"]},{"ContestId":80,"Index":"A","Name":"Panoramix's Prediction","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":79,"Index":"E","Name":"Security System","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["math"]},{"ContestId":79,"Index":"D","Name":"Password","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["bitmasks","dp","shortest paths"]},{"ContestId":79,"Index":"C","Name":"Beaver","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["data structures","dp","greedy","hashing","strings","two pointers"]},{"ContestId":79,"Index":"B","Name":"Colorful Field","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["implementation","sortings"]},{"ContestId":79,"Index":"A","Name":"Bus Game","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy"]},{"ContestId":78,"Index":"E","Name":"Evacuation","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["flows","graphs","shortest paths"]},{"ContestId":78,"Index":"D","Name":"Archer's Shot","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["binary search","geometry","math","two pointers"]},{"ContestId":78,"Index":"C","Name":"Beaver Game","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp","games","number theory"]},{"ContestId":78,"Index":"B","Name":"Easter Eggs","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["constructive algorithms","implementation"]},{"ContestId":78,"Index":"A","Name":"Haiku","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":77,"Index":"E","Name":"Martian Food","Type":"PROGRAMMING","Rating":2800,"Points":2000,"Tags":["geometry"]},{"ContestId":77,"Index":"D","Name":"Domino Carpet","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["dp","implementation"]},{"ContestId":77,"Index":"C","Name":"Beavermuncher-0xFF","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dfs and similar","dp","dsu","greedy","trees"]},{"ContestId":77,"Index":"B","Name":"Falling Anvils","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["math","probabilities"]},{"ContestId":77,"Index":"A","Name":"Heroes","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","implementation"]},{"ContestId":76,"Index":"F","Name":"Tourist","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search","data structures","dp"]},{"ContestId":76,"Index":"E","Name":"Points","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["implementation","math"]},{"ContestId":76,"Index":"D","Name":"Plus and xor","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dp","greedy","math"]},{"ContestId":76,"Index":"C","Name":"Mutation","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["bitmasks","dp","math"]},{"ContestId":76,"Index":"B","Name":"Mice","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["greedy","two pointers"]},{"ContestId":76,"Index":"A","Name":"Gift","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dsu","graphs","sortings","trees"]},{"ContestId":75,"Index":"E","Name":"Ship's Shortest Path","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["geometry","shortest paths"]},{"ContestId":75,"Index":"D","Name":"Big Maximum Sum","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["data structures","dp","greedy","implementation","math","trees"]},{"ContestId":75,"Index":"C","Name":"Modified GCD","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["binary search","number theory"]},{"ContestId":75,"Index":"B","Name":"Facetook Priority Wall","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["expression parsing","implementation","strings"]},{"ContestId":75,"Index":"A","Name":"Life Without Zeros","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":74,"Index":"E","Name":"Shift It!","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["constructive algorithms"]},{"ContestId":74,"Index":"D","Name":"Hanger","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["data structures"]},{"ContestId":74,"Index":"C","Name":"Chessboard Billiard","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["dfs and similar","dsu","graphs","number theory"]},{"ContestId":74,"Index":"B","Name":"Train","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["dp","games","greedy"]},{"ContestId":74,"Index":"A","Name":"Room Leader","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":73,"Index":"F","Name":"Plane of Tanks","Type":"PROGRAMMING","Rating":2900,"Points":2000,"Tags":["brute force","geometry"]},{"ContestId":73,"Index":"E","Name":"Morrowindows","Type":"PROGRAMMING","Rating":2400,"Points":1500,"Tags":["math","number theory"]},{"ContestId":73,"Index":"D","Name":"FreeDiv","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["dfs and similar","graphs","greedy"]},{"ContestId":73,"Index":"C","Name":"LionAge II","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["dp"]},{"ContestId":73,"Index":"B","Name":"Need For Brake","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["binary search","greedy","sortings"]},{"ContestId":73,"Index":"A","Name":"The Elder Trolls IV: Oblivon","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["greedy","math"]},{"ContestId":72,"Index":"I","Name":"Goofy Numbers","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","implementation"]},{"ContestId":72,"Index":"H","Name":"Reverse It!","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","implementation"]},{"ContestId":72,"Index":"G","Name":"Fibonacci army","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["*special","dp"]},{"ContestId":72,"Index":"F","Name":"Oil","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["*special","greedy","math"]},{"ContestId":72,"Index":"E","Name":"Ali goes shopping","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","brute force","strings"]},{"ContestId":72,"Index":"D","Name":"Perse-script","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special","expression parsing"]},{"ContestId":72,"Index":"C","Name":"Extraordinarily Nice Numbers","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["*special","math"]},{"ContestId":72,"Index":"B","Name":"INI-file","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special","implementation"]},{"ContestId":72,"Index":"A","Name":"Goshtasp, Vishtasp and Eidi","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","greedy","math"]},{"ContestId":71,"Index":"E","Name":"Nuclear Fusion","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["bitmasks","dp"]},{"ContestId":71,"Index":"D","Name":"Solitaire","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["brute force","implementation"]},{"ContestId":71,"Index":"C","Name":"Round Table Knights","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["dp","math","number theory"]},{"ContestId":71,"Index":"B","Name":"Progress Bar","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation","math"]},{"ContestId":71,"Index":"A","Name":"Way Too Long Words","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["strings"]},{"ContestId":70,"Index":"E","Name":"Information Reform","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["dp","implementation","trees"]},{"ContestId":70,"Index":"D","Name":"Professor's task","Type":"PROGRAMMING","Rating":2700,"Points":2000,"Tags":["data structures","geometry"]},{"ContestId":70,"Index":"C","Name":"Lucky Tickets","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["binary search","data structures","sortings","two pointers"]},{"ContestId":70,"Index":"B","Name":"Text Messaging","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["expression parsing","greedy","strings"]},{"ContestId":70,"Index":"A","Name":"Cookies","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["math"]},{"ContestId":69,"Index":"E","Name":"Subsegments","Type":"PROGRAMMING","Rating":1800,"Points":2500,"Tags":["data structures","implementation"]},{"ContestId":69,"Index":"D","Name":"Dot","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dp","games"]},{"ContestId":69,"Index":"C","Name":"Game","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["implementation"]},{"ContestId":69,"Index":"B","Name":"Bets","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":69,"Index":"A","Name":"Young Physicist","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation","math"]},{"ContestId":68,"Index":"E","Name":"Contact","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["geometry"]},{"ContestId":68,"Index":"D","Name":"Half-decay tree","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["data structures","divide and conquer","dp","math","probabilities"]},{"ContestId":68,"Index":"C","Name":"Synchrophasotron","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["brute force"]},{"ContestId":68,"Index":"B","Name":"Energy exchange","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["binary search"]},{"ContestId":68,"Index":"A","Name":"Irrational problem","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation","number theory"]},{"ContestId":67,"Index":"E","Name":"Save the City!","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["geometry"]},{"ContestId":67,"Index":"D","Name":"Optical Experiment","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["binary search","data structures","dp"]},{"ContestId":67,"Index":"C","Name":"Sequence of Balls","Type":"PROGRAMMING","Rating":2600,"Points":1500,"Tags":["dp"]},{"ContestId":67,"Index":"B","Name":"Restoration of the Permutation","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["greedy"]},{"ContestId":67,"Index":"A","Name":"Partial Teacher","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["dp","graphs","greedy","implementation"]},{"ContestId":66,"Index":"E","Name":"Petya and Post","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["data structures","dp"]},{"ContestId":66,"Index":"D","Name":"Petya and His Friends","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["constructive algorithms","math","number theory"]},{"ContestId":66,"Index":"C","Name":"Petya and File System","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["data structures","implementation"]},{"ContestId":66,"Index":"B","Name":"Petya and Countryside","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["brute force","implementation"]},{"ContestId":66,"Index":"A","Name":"Petya and Java","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation","strings"]},{"ContestId":65,"Index":"E","Name":"Harry Potter and Moving Staircases","Type":"PROGRAMMING","Rating":2900,"Points":2500,"Tags":["dfs and similar","implementation"]},{"ContestId":65,"Index":"D","Name":"Harry Potter and the Sorting Hat","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["brute force","dfs and similar","hashing"]},{"ContestId":65,"Index":"C","Name":"Harry Potter and the Golden Snitch","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["binary search","geometry"]},{"ContestId":65,"Index":"B","Name":"Harry Potter and the History of Magic","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["brute force","greedy","implementation"]},{"ContestId":65,"Index":"A","Name":"Harry Potter and Three Spells","Type":"PROGRAMMING","Rating":1800,"Points":500,"Tags":["implementation","math"]},{"ContestId":64,"Index":"I","Name":"Sort the Table","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["*special","sortings"]},{"ContestId":64,"Index":"H","Name":"Table Bowling","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["*special","sortings"]},{"ContestId":64,"Index":"G","Name":"Path Canonization","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["*special"]},{"ContestId":64,"Index":"F","Name":"Domain","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["*special","expression parsing"]},{"ContestId":64,"Index":"E","Name":"Prime Segment","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","brute force","math","number theory"]},{"ContestId":64,"Index":"D","Name":"Presents","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["*special","greedy"]},{"ContestId":64,"Index":"C","Name":"Table","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["*special","greedy","implementation","math"]},{"ContestId":64,"Index":"B","Name":"Expression","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["*special","expression parsing"]},{"ContestId":64,"Index":"A","Name":"Factorial","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["*special","implementation"]},{"ContestId":63,"Index":"E","Name":"Sweets Game","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["bitmasks","dfs and similar","dp","games","implementation"]},{"ContestId":63,"Index":"D","Name":"Dividing Island","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["constructive algorithms"]},{"ContestId":63,"Index":"C","Name":"Bulls and Cows","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["brute force","implementation"]},{"ContestId":63,"Index":"B","Name":"Settlers' Training","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation"]},{"ContestId":63,"Index":"A","Name":"Sinking Ship","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation","sortings","strings"]},{"ContestId":62,"Index":"E","Name":"World Evil","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["dp","flows"]},{"ContestId":62,"Index":"D","Name":"Wormhouse","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["dfs and similar","graphs"]},{"ContestId":62,"Index":"C","Name":"Inquisition","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["geometry","implementation","sortings"]},{"ContestId":62,"Index":"B","Name":"Tyndex.Brome","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["binary search","implementation"]},{"ContestId":62,"Index":"A","Name":"A Student's Dream","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["greedy","math"]},{"ContestId":61,"Index":"E","Name":"Enemy is weak","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["data structures","trees"]},{"ContestId":61,"Index":"D","Name":"Eternal Victory","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["dfs and similar","graphs","greedy","shortest paths","trees"]},{"ContestId":61,"Index":"C","Name":"Capture Valerian","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["math"]},{"ContestId":61,"Index":"B","Name":"Hard Work","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["strings"]},{"ContestId":61,"Index":"A","Name":"Ultra-Fast Mathematician","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":60,"Index":"E","Name":"Mushroom Gnomes","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["math","matrices"]},{"ContestId":60,"Index":"D","Name":"Savior","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["brute force","dsu","math"]},{"ContestId":60,"Index":"C","Name":"Mushroom Strife","Type":"PROGRAMMING","Rating":2100,"Points":1500,"Tags":["brute force","dfs and similar"]},{"ContestId":60,"Index":"B","Name":"Serial Time!","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["dfs and similar","dsu"]},{"ContestId":60,"Index":"A","Name":"Where Are My Flakes?","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation","two pointers"]},{"ContestId":59,"Index":"E","Name":"Shortest Path","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["graphs","shortest paths"]},{"ContestId":59,"Index":"D","Name":"Team Arrangement","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","greedy","implementation"]},{"ContestId":59,"Index":"C","Name":"Title","Type":"PROGRAMMING","Rating":1600,"Points":1500,"Tags":["expression parsing"]},{"ContestId":59,"Index":"B","Name":"Fortune Telling","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation","number theory"]},{"ContestId":59,"Index":"A","Name":"Word","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":58,"Index":"E","Name":"Expression","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["dp"]},{"ContestId":58,"Index":"D","Name":"Calendar","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["greedy","strings"]},{"ContestId":58,"Index":"C","Name":"Trees","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["brute force"]},{"ContestId":58,"Index":"B","Name":"Coins","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["greedy"]},{"ContestId":58,"Index":"A","Name":"Chat room","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["greedy","strings"]},{"ContestId":57,"Index":"E","Name":"Chess","Type":"PROGRAMMING","Rating":3000,"Points":2500,"Tags":["math","shortest paths"]},{"ContestId":57,"Index":"D","Name":"Journey","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp","math"]},{"ContestId":57,"Index":"C","Name":"Array","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["combinatorics","math"]},{"ContestId":57,"Index":"B","Name":"Martian Architecture","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["implementation"]},{"ContestId":57,"Index":"A","Name":"Square Earth?","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["dfs and similar","greedy","implementation"]},{"ContestId":56,"Index":"E","Name":"Domino Principle","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["binary search","data structures","sortings"]},{"ContestId":56,"Index":"D","Name":"Changing a String","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["dp"]},{"ContestId":56,"Index":"C","Name":"Corporation Mail","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["data structures","expression parsing","implementation"]},{"ContestId":56,"Index":"B","Name":"Spoilt Permutation","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["implementation"]},{"ContestId":56,"Index":"A","Name":"Bar","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":55,"Index":"E","Name":"Very simple problem","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["geometry","two pointers"]},{"ContestId":55,"Index":"D","Name":"Beautiful numbers","Type":"PROGRAMMING","Rating":2500,"Points":2000,"Tags":["dp","number theory"]},{"ContestId":55,"Index":"C","Name":"Pie or die","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["games"]},{"ContestId":55,"Index":"B","Name":"Smallest number","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["brute force"]},{"ContestId":55,"Index":"A","Name":"Flea travel","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation","math"]},{"ContestId":54,"Index":"E","Name":"Vacuum –°leaner","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["geometry"]},{"ContestId":54,"Index":"D","Name":"Writing a Song","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["brute force","dp","strings"]},{"ContestId":54,"Index":"C","Name":"First Digit Law","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["dp","math","probabilities"]},{"ContestId":54,"Index":"B","Name":"Cutting Jigsaw Puzzle","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["hashing","implementation"]},{"ContestId":54,"Index":"A","Name":"Presents","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation"]},{"ContestId":53,"Index":"E","Name":"Dead Ends","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["bitmasks","dp"]},{"ContestId":53,"Index":"D","Name":"Physical Education","Type":"PROGRAMMING","Rating":1500,"Points":2000,"Tags":["sortings"]},{"ContestId":53,"Index":"C","Name":"Little Frog","Type":"PROGRAMMING","Rating":1200,"Points":1500,"Tags":["constructive algorithms"]},{"ContestId":53,"Index":"B","Name":"Blog Photo","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["binary search","implementation"]},{"ContestId":53,"Index":"A","Name":"Autocomplete","Type":"PROGRAMMING","Rating":1100,"Points":500,"Tags":["implementation"]},{"ContestId":52,"Index":"C","Name":"Circular RMQ","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["data structures"]},{"ContestId":52,"Index":"B","Name":"Right Triangles","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["combinatorics"]},{"ContestId":52,"Index":"A","Name":"123-sequence","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["implementation"]},{"ContestId":51,"Index":"F","Name":"Caterpillar","Type":"PROGRAMMING","Rating":2800,"Points":3000,"Tags":["dfs and similar","dp","graphs","trees"]},{"ContestId":51,"Index":"E","Name":"Pentagon","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["combinatorics","graphs","matrices"]},{"ContestId":51,"Index":"D","Name":"Geometrical problem","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["implementation"]},{"ContestId":51,"Index":"C","Name":"Three Base Stations","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["binary search","greedy"]},{"ContestId":51,"Index":"B","Name":"bHTML Tables Analisys","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["expression parsing"]},{"ContestId":51,"Index":"A","Name":"Cheaterius's Problem","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation"]},{"ContestId":50,"Index":"E","Name":"Square Equation Roots","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["math"]},{"ContestId":50,"Index":"D","Name":"Bombing","Type":"PROGRAMMING","Rating":2100,"Points":2000,"Tags":["binary search","dp","probabilities"]},{"ContestId":50,"Index":"C","Name":"Happy Farm 5","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["geometry"]},{"ContestId":50,"Index":"B","Name":"Choosing Symbol Pairs","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["strings"]},{"ContestId":50,"Index":"A","Name":"Domino piling","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["greedy","math"]},{"ContestId":49,"Index":"E","Name":"Common ancestor","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["dp"]},{"ContestId":49,"Index":"D","Name":"Game","Type":"PROGRAMMING","Rating":1800,"Points":2000,"Tags":["brute force","dp","implementation"]},{"ContestId":49,"Index":"C","Name":"Disposition","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["constructive algorithms","math"]},{"ContestId":49,"Index":"B","Name":"Sum","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["math"]},{"ContestId":49,"Index":"A","Name":"Sleuth","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":48,"Index":"H","Name":"Black and White","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":48,"Index":"G","Name":"Galaxy Union","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["dp","trees","two pointers"]},{"ContestId":48,"Index":"F","Name":"Snow sellers","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":48,"Index":"E","Name":"Ivan the Fool VS Gorynych the Dragon","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","games","graphs"]},{"ContestId":48,"Index":"D","Name":"Permutations","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["greedy"]},{"ContestId":48,"Index":"C","Name":"The Race","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["math"]},{"ContestId":48,"Index":"B","Name":"Land Lot","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":48,"Index":"A","Name":"Rock-paper-scissors","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation","schedules"]},{"ContestId":47,"Index":"E","Name":"Cannon","Type":"PROGRAMMING","Rating":2200,"Points":2500,"Tags":["data structures","geometry","sortings"]},{"ContestId":47,"Index":"D","Name":"Safe","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["brute force"]},{"ContestId":47,"Index":"C","Name":"Crossword","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["implementation"]},{"ContestId":47,"Index":"B","Name":"Coins","Type":"PROGRAMMING","Rating":1200,"Points":1000,"Tags":["implementation"]},{"ContestId":47,"Index":"A","Name":"Triangular numbers","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force","math"]},{"ContestId":46,"Index":"G","Name":"Emperor's Problem","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["geometry"]},{"ContestId":46,"Index":"F","Name":"Hercule Poirot Problem","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dsu","graphs"]},{"ContestId":46,"Index":"E","Name":"Comb","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures","dp"]},{"ContestId":46,"Index":"D","Name":"Parking Lot","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":46,"Index":"C","Name":"Hamsters and Tigers","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["two pointers"]},{"ContestId":46,"Index":"B","Name":"T-shirts from Sponsor","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":46,"Index":"A","Name":"Ball Game","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","implementation"]},{"ContestId":45,"Index":"J","Name":"Planting Trees","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":45,"Index":"I","Name":"TCMCF+++","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["greedy"]},{"ContestId":45,"Index":"H","Name":"Road Problem","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["graphs"]},{"ContestId":45,"Index":"G","Name":"Prime Problem","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["number theory"]},{"ContestId":45,"Index":"F","Name":"Goats and Wolves","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["greedy"]},{"ContestId":45,"Index":"E","Name":"Director","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":45,"Index":"D","Name":"Event Dates","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["greedy","meet-in-the-middle","sortings"]},{"ContestId":45,"Index":"C","Name":"Dancing Lessons","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["data structures"]},{"ContestId":45,"Index":"B","Name":"School","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","dsu"]},{"ContestId":45,"Index":"A","Name":"Codecraft III","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":44,"Index":"J","Name":"Triminoes","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":44,"Index":"I","Name":"Toys","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["brute force","combinatorics"]},{"ContestId":44,"Index":"H","Name":"Phone Number","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dp"]},{"ContestId":44,"Index":"G","Name":"Shooting Gallery","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":44,"Index":"F","Name":"BerPaint","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["geometry","graphs"]},{"ContestId":44,"Index":"E","Name":"Anfisa the Monkey","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["dp"]},{"ContestId":44,"Index":"D","Name":"Hyperdrive","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["math"]},{"ContestId":44,"Index":"C","Name":"Holidays","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation"]},{"ContestId":44,"Index":"B","Name":"Cola","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["implementation"]},{"ContestId":44,"Index":"A","Name":"Indian Summer","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":43,"Index":"E","Name":"Race","Type":"PROGRAMMING","Rating":2300,"Points":2500,"Tags":["brute force","implementation","two pointers"]},{"ContestId":43,"Index":"D","Name":"Journey","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["brute force","constructive algorithms","implementation"]},{"ContestId":43,"Index":"C","Name":"Lucky Tickets","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["greedy"]},{"ContestId":43,"Index":"B","Name":"Letter","Type":"PROGRAMMING","Rating":1100,"Points":1000,"Tags":["implementation","strings"]},{"ContestId":43,"Index":"A","Name":"Football","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["strings"]},{"ContestId":42,"Index":"E","Name":"Baldman and the military","Type":"PROGRAMMING","Rating":2700,"Points":2500,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":42,"Index":"D","Name":"Strange town","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["constructive algorithms","math"]},{"ContestId":42,"Index":"C","Name":"Safe cracking","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["brute force","constructive algorithms"]},{"ContestId":42,"Index":"B","Name":"Game of chess unfinished","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["implementation"]},{"ContestId":42,"Index":"A","Name":"Guilty --- to the kitchen!","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":41,"Index":"E","Name":"3-cycles","Type":"PROGRAMMING","Rating":1900,"Points":2500,"Tags":["constructive algorithms","graphs","greedy"]},{"ContestId":41,"Index":"D","Name":"Pawn","Type":"PROGRAMMING","Rating":1900,"Points":2000,"Tags":["dp"]},{"ContestId":41,"Index":"C","Name":"Email address","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["expression parsing","implementation"]},{"ContestId":41,"Index":"B","Name":"Martian Dollar","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["brute force"]},{"ContestId":41,"Index":"A","Name":"Translation","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation","strings"]},{"ContestId":40,"Index":"E","Name":"Number Table","Type":"PROGRAMMING","Rating":2500,"Points":2500,"Tags":["combinatorics"]},{"ContestId":40,"Index":"D","Name":"Interesting Sequence","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["math"]},{"ContestId":40,"Index":"C","Name":"Berland Square","Type":"PROGRAMMING","Rating":2300,"Points":1500,"Tags":["implementation","math"]},{"ContestId":40,"Index":"B","Name":"Repaintings","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["math"]},{"ContestId":40,"Index":"A","Name":"Find Color","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["constructive algorithms","geometry","implementation","math"]},{"ContestId":39,"Index":"K","Name":"Testing","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":[]},{"ContestId":39,"Index":"J","Name":"Spelling Check","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["hashing","implementation","strings"]},{"ContestId":39,"Index":"I","Name":"Tram","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":[]},{"ContestId":39,"Index":"H","Name":"Multiplication Table","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation"]},{"ContestId":39,"Index":"G","Name":"Inverse Function","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["implementation"]},{"ContestId":39,"Index":"F","Name":"Pacifist frogs","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["implementation"]},{"ContestId":39,"Index":"E","Name":"What Has Dirichlet Got to Do with That?","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp","games"]},{"ContestId":39,"Index":"D","Name":"Cubical Planet","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["math"]},{"ContestId":39,"Index":"C","Name":"Moon Craters","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","sortings"]},{"ContestId":39,"Index":"B","Name":"Company Income Growth","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["greedy"]},{"ContestId":39,"Index":"A","Name":"C*++ Calculations","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["expression parsing","greedy"]},{"ContestId":38,"Index":"H","Name":"The Great Marathon","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dp"]},{"ContestId":38,"Index":"G","Name":"Queue","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["data structures"]},{"ContestId":38,"Index":"F","Name":"Smart Boy","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["dp","games","strings"]},{"ContestId":38,"Index":"E","Name":"Let's Go Rolling!","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["dp","sortings"]},{"ContestId":38,"Index":"D","Name":"Vasya the Architect","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["implementation"]},{"ContestId":38,"Index":"C","Name":"Blinds","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["brute force"]},{"ContestId":38,"Index":"B","Name":"Chess","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","implementation","math"]},{"ContestId":38,"Index":"A","Name":"Army","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":37,"Index":"E","Name":"Trial for Chief","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["graphs","greedy","shortest paths"]},{"ContestId":37,"Index":"D","Name":"Lesson Timetable","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["combinatorics","dp","math"]},{"ContestId":37,"Index":"C","Name":"Old Berland Language","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["data structures","greedy","trees"]},{"ContestId":37,"Index":"B","Name":"Computer Game","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["greedy","implementation"]},{"ContestId":37,"Index":"A","Name":"Towers","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["sortings"]},{"ContestId":36,"Index":"E","Name":"Two Paths","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":["constructive algorithms","dsu","graphs","implementation"]},{"ContestId":36,"Index":"D","Name":"New Game with a Chess Piece","Type":"PROGRAMMING","Rating":2300,"Points":2000,"Tags":["games"]},{"ContestId":36,"Index":"C","Name":"Bowls","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["geometry","implementation"]},{"ContestId":36,"Index":"B","Name":"Fractal","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["implementation"]},{"ContestId":36,"Index":"A","Name":"Extra-terrestrial Intelligence","Type":"PROGRAMMING","Rating":1300,"Points":500,"Tags":["implementation"]},{"ContestId":35,"Index":"E","Name":"Parade","Type":"PROGRAMMING","Rating":2100,"Points":2500,"Tags":["data structures","sortings"]},{"ContestId":35,"Index":"D","Name":"Animals","Type":"PROGRAMMING","Rating":1700,"Points":2000,"Tags":["dp","greedy"]},{"ContestId":35,"Index":"C","Name":"Fire Again","Type":"PROGRAMMING","Rating":1500,"Points":1500,"Tags":["brute force","dfs and similar","shortest paths"]},{"ContestId":35,"Index":"B","Name":"Warehouse","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["implementation"]},{"ContestId":35,"Index":"A","Name":"Shell Game","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["implementation"]},{"ContestId":34,"Index":"E","Name":"Collisions","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["brute force","implementation","math"]},{"ContestId":34,"Index":"D","Name":"Road Map","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["dfs and similar","graphs"]},{"ContestId":34,"Index":"C","Name":"Page Numbers","Type":"PROGRAMMING","Rating":1300,"Points":1500,"Tags":["expression parsing","implementation","sortings","strings"]},{"ContestId":34,"Index":"B","Name":"Sale","Type":"PROGRAMMING","Rating":900,"Points":1000,"Tags":["greedy","sortings"]},{"ContestId":34,"Index":"A","Name":"Reconnaissance 2","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["implementation"]},{"ContestId":33,"Index":"E","Name":"Helper","Type":"PROGRAMMING","Rating":2600,"Points":2500,"Tags":[]},{"ContestId":33,"Index":"D","Name":"Knights","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["geometry","graphs","shortest paths","sortings"]},{"ContestId":33,"Index":"C","Name":"Wonderful Randomized Sum","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["greedy"]},{"ContestId":33,"Index":"B","Name":"String Problem","Type":"PROGRAMMING","Rating":1800,"Points":1000,"Tags":["shortest paths"]},{"ContestId":33,"Index":"A","Name":"What is for dinner?","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["greedy","implementation"]},{"ContestId":32,"Index":"E","Name":"Hide-and-Seek","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["geometry","implementation"]},{"ContestId":32,"Index":"D","Name":"Constellation","Type":"PROGRAMMING","Rating":1600,"Points":2000,"Tags":["implementation"]},{"ContestId":32,"Index":"C","Name":"Flea","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["math"]},{"ContestId":32,"Index":"B","Name":"Borze","Type":"PROGRAMMING","Rating":800,"Points":1000,"Tags":["expression parsing","implementation"]},{"ContestId":32,"Index":"A","Name":"Reconnaissance","Type":"PROGRAMMING","Rating":800,"Points":500,"Tags":["brute force"]},{"ContestId":31,"Index":"E","Name":"TV Game","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["dp"]},{"ContestId":31,"Index":"D","Name":"Chocolate","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["dfs and similar","implementation"]},{"ContestId":31,"Index":"C","Name":"Schedule","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["implementation"]},{"ContestId":31,"Index":"B","Name":"Sysadmin Bob","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["greedy","implementation","strings"]},{"ContestId":31,"Index":"A","Name":"Worms Evolution","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation"]},{"ContestId":30,"Index":"E","Name":"Tricky and Clever Password","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["binary search","constructive algorithms","data structures","greedy","hashing","strings"]},{"ContestId":30,"Index":"D","Name":"King's Problem?","Type":"PROGRAMMING","Rating":2600,"Points":2000,"Tags":["geometry","greedy"]},{"ContestId":30,"Index":"C","Name":"Shooting Gallery","Type":"PROGRAMMING","Rating":1800,"Points":1500,"Tags":["dp","probabilities"]},{"ContestId":30,"Index":"B","Name":"Codeforces World Finals","Type":"PROGRAMMING","Rating":1700,"Points":1000,"Tags":["implementation"]},{"ContestId":30,"Index":"A","Name":"Accounting","Type":"PROGRAMMING","Rating":1400,"Points":500,"Tags":["brute force","math"]},{"ContestId":29,"Index":"E","Name":"Quarrel","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["graphs","shortest paths"]},{"ContestId":29,"Index":"D","Name":"Ant on the Tree","Type":"PROGRAMMING","Rating":2000,"Points":2000,"Tags":["constructive algorithms","dfs and similar","trees"]},{"ContestId":29,"Index":"C","Name":"Mail Stamps","Type":"PROGRAMMING","Rating":1700,"Points":1500,"Tags":["data structures","dfs and similar","graphs","implementation"]},{"ContestId":29,"Index":"B","Name":"Traffic Lights","Type":"PROGRAMMING","Rating":1500,"Points":1000,"Tags":["implementation"]},{"ContestId":29,"Index":"A","Name":"Spit Problem","Type":"PROGRAMMING","Rating":1000,"Points":500,"Tags":["brute force"]},{"ContestId":28,"Index":"E","Name":"DravDe saves the world","Type":"PROGRAMMING","Rating":2800,"Points":2500,"Tags":["geometry","math"]},{"ContestId":28,"Index":"D","Name":"Don't fear, DravDe is kind","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["binary search","data structures","dp","hashing"]},{"ContestId":28,"Index":"C","Name":"Bath Queue","Type":"PROGRAMMING","Rating":2200,"Points":1500,"Tags":["combinatorics","dp","probabilities"]},{"ContestId":28,"Index":"B","Name":"pSort","Type":"PROGRAMMING","Rating":1600,"Points":1000,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":28,"Index":"A","Name":"Bender Problem","Type":"PROGRAMMING","Rating":1600,"Points":500,"Tags":["implementation"]},{"ContestId":27,"Index":"E","Name":"Number With The Given Amount Of Divisors","Type":"PROGRAMMING","Rating":2000,"Points":2500,"Tags":["brute force","dp","number theory"]},{"ContestId":27,"Index":"D","Name":"Ring Road 2","Type":"PROGRAMMING","Rating":2200,"Points":2000,"Tags":["2-sat","dfs and similar","dsu","graphs"]},{"ContestId":27,"Index":"C","Name":"Unordered Subsequence","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["constructive algorithms","greedy"]},{"ContestId":27,"Index":"B","Name":"Tournament","Type":"PROGRAMMING","Rating":1300,"Points":1000,"Tags":["bitmasks","brute force","dfs and similar","greedy"]},{"ContestId":27,"Index":"A","Name":"Next Test","Type":"PROGRAMMING","Rating":1200,"Points":500,"Tags":["implementation","sortings"]},{"ContestId":26,"Index":"E","Name":"Multithreading","Type":"PROGRAMMING","Rating":2400,"Points":2500,"Tags":["constructive algorithms"]},{"ContestId":26,"Index":"D","Name":"Tickets","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["combinatorics","math","probabilities"]},{"ContestId":26,"Index":"C","Name":"Parquet","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["combinatorics","constructive algorithms","greedy","implementation"]},{"ContestId":26,"Index":"B","Name":"Regular Bracket Sequence","Type":"PROGRAMMING","Rating":1400,"Points":1000,"Tags":["greedy"]},{"ContestId":26,"Index":"A","Name":"Almost Prime","Type":"PROGRAMMING","Rating":900,"Points":500,"Tags":["number theory"]},{"ContestId":25,"Index":"E","Name":"Test","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["hashing","strings"]},{"ContestId":25,"Index":"D","Name":"Roads not only in Berland","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dsu","graphs","trees"]},{"ContestId":25,"Index":"C","Name":"Roads in Berland","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["graphs","shortest paths"]},{"ContestId":25,"Index":"B","Name":"Phone numbers","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":25,"Index":"A","Name":"IQ test","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["brute force"]},{"ContestId":24,"Index":"E","Name":"Berland collider","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["binary search"]},{"ContestId":24,"Index":"D","Name":"Broken robot","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["dp","math","probabilities"]},{"ContestId":24,"Index":"C","Name":"Sequence of points","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["geometry","implementation","math"]},{"ContestId":24,"Index":"B","Name":"F1 Champions","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["implementation"]},{"ContestId":24,"Index":"A","Name":"Ring road","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["graphs"]},{"ContestId":23,"Index":"E","Name":"Tree","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dp"]},{"ContestId":23,"Index":"D","Name":"Tetragon","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["geometry","math"]},{"ContestId":23,"Index":"C","Name":"Oranges and Apples","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["constructive algorithms","sortings"]},{"ContestId":23,"Index":"B","Name":"Party","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["constructive algorithms","graphs","math"]},{"ContestId":23,"Index":"A","Name":"You're Given a String...","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","greedy"]},{"ContestId":22,"Index":"E","Name":"Scheme","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dfs and similar","graphs","trees"]},{"ContestId":22,"Index":"D","Name":"Segments","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":22,"Index":"C","Name":"System Administrator","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["graphs"]},{"ContestId":22,"Index":"B","Name":"Bargaining Table","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","dp"]},{"ContestId":22,"Index":"A","Name":"Second Order Statistics","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force"]},{"ContestId":21,"Index":"D","Name":"Traveling Graph","Type":"PROGRAMMING","Rating":2400,"Points":2000,"Tags":["bitmasks","graph matchings","graphs"]},{"ContestId":21,"Index":"C","Name":"Stripe 2","Type":"PROGRAMMING","Rating":2000,"Points":1500,"Tags":["binary search","dp","sortings"]},{"ContestId":21,"Index":"B","Name":"Intersection","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["implementation","math"]},{"ContestId":21,"Index":"A","Name":"Jabber ID","Type":"PROGRAMMING","Rating":1900,"Points":500,"Tags":["implementation","strings"]},{"ContestId":20,"Index":"C","Name":"Dijkstra?","Type":"PROGRAMMING","Rating":1900,"Points":1500,"Tags":["graphs","shortest paths"]},{"ContestId":20,"Index":"B","Name":"Equation","Type":"PROGRAMMING","Rating":2000,"Points":1000,"Tags":["math"]},{"ContestId":20,"Index":"A","Name":"BerOS file system","Type":"PROGRAMMING","Rating":1700,"Points":500,"Tags":["implementation"]},{"ContestId":19,"Index":"E","Name":"Fairy","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["dfs and similar","divide and conquer","dsu"]},{"ContestId":19,"Index":"D","Name":"Points","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["data structures"]},{"ContestId":19,"Index":"C","Name":"Deletion of Repeats","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["greedy","hashing","string suffix structures"]},{"ContestId":19,"Index":"B","Name":"Checkout Assistant","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dp"]},{"ContestId":19,"Index":"A","Name":"World Football Cup","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["implementation"]},{"ContestId":18,"Index":"E","Name":"Flag 2","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp"]},{"ContestId":18,"Index":"D","Name":"Seller Bob","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["brute force","dp","greedy"]},{"ContestId":18,"Index":"C","Name":"Stripe","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["data structures","implementation"]},{"ContestId":18,"Index":"B","Name":"Platforms","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","math"]},{"ContestId":18,"Index":"A","Name":"Triangle","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["brute force","geometry"]},{"ContestId":17,"Index":"E","Name":"Palisection","Type":"PROGRAMMING","Rating":2900,"Points":0,"Tags":["strings"]},{"ContestId":17,"Index":"D","Name":"Notepad","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["number theory"]},{"ContestId":17,"Index":"C","Name":"Balance","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["dp"]},{"ContestId":17,"Index":"B","Name":"Hierarchy","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dfs and similar","dsu","greedy","shortest paths"]},{"ContestId":17,"Index":"A","Name":"Noldbach problem","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["brute force","math","number theory"]},{"ContestId":16,"Index":"E","Name":"Fish","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["bitmasks","dp","probabilities"]},{"ContestId":16,"Index":"D","Name":"Logging","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["implementation","strings"]},{"ContestId":16,"Index":"C","Name":"Monitor","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["binary search","number theory"]},{"ContestId":16,"Index":"B","Name":"Burglar and Matches","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":16,"Index":"A","Name":"Flag","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":15,"Index":"E","Name":"Triangles","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["combinatorics","dp"]},{"ContestId":15,"Index":"D","Name":"Map","Type":"PROGRAMMING","Rating":2500,"Points":0,"Tags":["data structures","implementation","sortings"]},{"ContestId":15,"Index":"C","Name":"Industrial Nim","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["games"]},{"ContestId":15,"Index":"B","Name":"Laser","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["math"]},{"ContestId":15,"Index":"A","Name":"Cottage Village","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":14,"Index":"E","Name":"Camels","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dp"]},{"ContestId":14,"Index":"D","Name":"Two Paths","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["dfs and similar","dp","graphs","shortest paths","trees","two pointers"]},{"ContestId":14,"Index":"C","Name":"Four Segments","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["brute force","constructive algorithms","geometry","implementation","math"]},{"ContestId":14,"Index":"B","Name":"Young Photographer","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":14,"Index":"A","Name":"Letter","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":13,"Index":"E","Name":"Holes","Type":"PROGRAMMING","Rating":2700,"Points":0,"Tags":["data structures","dsu"]},{"ContestId":13,"Index":"D","Name":"Triangles","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["dp","geometry"]},{"ContestId":13,"Index":"C","Name":"Sequence","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["dp","sortings"]},{"ContestId":13,"Index":"B","Name":"Letter A","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["geometry","implementation"]},{"ContestId":13,"Index":"A","Name":"Numbers","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation","math"]},{"ContestId":12,"Index":"E","Name":"Start of the session","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":12,"Index":"D","Name":"Ball","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures","sortings"]},{"ContestId":12,"Index":"C","Name":"Fruits","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["greedy","implementation","sortings"]},{"ContestId":12,"Index":"B","Name":"Correct Solution?","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation","sortings"]},{"ContestId":12,"Index":"A","Name":"Super Agent","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["implementation"]},{"ContestId":11,"Index":"E","Name":"Forward, march!","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["binary search","dp","greedy"]},{"ContestId":11,"Index":"D","Name":"A Simple Task","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["bitmasks","dp","graphs"]},{"ContestId":11,"Index":"C","Name":"How Many Squares?","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["implementation"]},{"ContestId":11,"Index":"B","Name":"Jumping Jack","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["math"]},{"ContestId":11,"Index":"A","Name":"Increasing Sequence","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["constructive algorithms","implementation","math"]},{"ContestId":10,"Index":"E","Name":"Greedy Change","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["constructive algorithms"]},{"ContestId":10,"Index":"D","Name":"LCIS","Type":"PROGRAMMING","Rating":2800,"Points":0,"Tags":["dp"]},{"ContestId":10,"Index":"C","Name":"Digital Root","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["number theory"]},{"ContestId":10,"Index":"B","Name":"Cinema Cashier","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["dp","implementation"]},{"ContestId":10,"Index":"A","Name":"Power Consumption Calculation","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["implementation"]},{"ContestId":9,"Index":"E","Name":"Interestring graph and Apples","Type":"PROGRAMMING","Rating":2300,"Points":0,"Tags":["dfs and similar","dsu","graphs"]},{"ContestId":9,"Index":"D","Name":"How many trees?","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["combinatorics","divide and conquer","dp"]},{"ContestId":9,"Index":"C","Name":"Hexadecimal's Numbers","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","implementation","math"]},{"ContestId":9,"Index":"B","Name":"Running Student","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["brute force","geometry","implementation"]},{"ContestId":9,"Index":"A","Name":"Die Roll","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["math","probabilities"]},{"ContestId":8,"Index":"E","Name":"Beads","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["dp","graphs"]},{"ContestId":8,"Index":"D","Name":"Two Friends","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["binary search","geometry"]},{"ContestId":8,"Index":"C","Name":"Looking for Order","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["bitmasks","dp"]},{"ContestId":8,"Index":"B","Name":"Obsession with Robots","Type":"PROGRAMMING","Rating":1400,"Points":0,"Tags":["constructive algorithms","graphs","implementation"]},{"ContestId":8,"Index":"A","Name":"Train and Peter","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["strings"]},{"ContestId":7,"Index":"E","Name":"Defining Macros","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["dp","expression parsing","implementation"]},{"ContestId":7,"Index":"D","Name":"Palindrome Degree","Type":"PROGRAMMING","Rating":2200,"Points":0,"Tags":["hashing","strings"]},{"ContestId":7,"Index":"C","Name":"Line","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["math","number theory"]},{"ContestId":7,"Index":"B","Name":"Memory Manager","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation"]},{"ContestId":7,"Index":"A","Name":"Kalevitch and Chess","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["brute force","constructive algorithms"]},{"ContestId":6,"Index":"E","Name":"Exposition","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["binary search","data structures","dsu","trees","two pointers"]},{"ContestId":6,"Index":"D","Name":"Lizards and Basements 2","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["brute force","dp"]},{"ContestId":6,"Index":"C","Name":"Alice, Bob and Chocolate","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["greedy","two pointers"]},{"ContestId":6,"Index":"B","Name":"President's Office","Type":"PROGRAMMING","Rating":1100,"Points":0,"Tags":["implementation"]},{"ContestId":6,"Index":"A","Name":"Triangle","Type":"PROGRAMMING","Rating":900,"Points":0,"Tags":["brute force","geometry"]},{"ContestId":5,"Index":"E","Name":"Bindian Signalizing","Type":"PROGRAMMING","Rating":2400,"Points":0,"Tags":["data structures"]},{"ContestId":5,"Index":"D","Name":"Follow Traffic Rules","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["implementation","math"]},{"ContestId":5,"Index":"C","Name":"Longest Regular Bracket Sequence","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["constructive algorithms","data structures","dp","greedy","sortings","strings"]},{"ContestId":5,"Index":"B","Name":"Center Alignment","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["implementation","strings"]},{"ContestId":5,"Index":"A","Name":"Chat Servers Outgoing Traffic","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["implementation"]},{"ContestId":4,"Index":"D","Name":"Mysterious Present","Type":"PROGRAMMING","Rating":1700,"Points":0,"Tags":["dp","sortings"]},{"ContestId":4,"Index":"C","Name":"Registration System","Type":"PROGRAMMING","Rating":1300,"Points":0,"Tags":["data structures","hashing","implementation"]},{"ContestId":4,"Index":"B","Name":"Before an Exam","Type":"PROGRAMMING","Rating":1200,"Points":0,"Tags":["constructive algorithms","greedy"]},{"ContestId":4,"Index":"A","Name":"Watermelon","Type":"PROGRAMMING","Rating":800,"Points":0,"Tags":["brute force","math"]},{"ContestId":3,"Index":"D","Name":"Least Cost Bracket Sequence","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["greedy"]},{"ContestId":3,"Index":"C","Name":"Tic-tac-toe","Type":"PROGRAMMING","Rating":1800,"Points":0,"Tags":["brute force","games","implementation"]},{"ContestId":3,"Index":"B","Name":"Lorry","Type":"PROGRAMMING","Rating":1900,"Points":0,"Tags":["greedy","sortings"]},{"ContestId":3,"Index":"A","Name":"Shortest path of the king","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["greedy","shortest paths"]},{"ContestId":2,"Index":"C","Name":"Commentator problem","Type":"PROGRAMMING","Rating":2600,"Points":0,"Tags":["geometry"]},{"ContestId":2,"Index":"B","Name":"The least round way","Type":"PROGRAMMING","Rating":2000,"Points":0,"Tags":["dp","math"]},{"ContestId":2,"Index":"A","Name":"Winner","Type":"PROGRAMMING","Rating":1500,"Points":0,"Tags":["hashing","implementation"]},{"ContestId":1,"Index":"C","Name":"Ancient Berland Circus","Type":"PROGRAMMING","Rating":2100,"Points":0,"Tags":["geometry","math"]},{"ContestId":1,"Index":"B","Name":"Spreadsheet","Type":"PROGRAMMING","Rating":1600,"Points":0,"Tags":["implementation","math"]},{"ContestId":1,"Index":"A","Name":"Theatre Square","Type":"PROGRAMMING","Rating":1000,"Points":0,"Tags":["math"]}]}
